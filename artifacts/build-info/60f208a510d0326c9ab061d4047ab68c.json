{
  "id": "60f208a510d0326c9ab061d4047ab68c",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.7.6",
  "solcLongVersion": "0.7.6+commit.7338295f",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/identityManager/AlastriaIdentityEntity.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.24 <0.8.0;\n\nimport \"../libs/Eidas.sol\";\nimport \"../openzeppelin/Initializable.sol\";\n\ninterface IAidEntity {\n    function initialize(address _firstIdentity) external;\n}\n\n\ncontract AlastriaIdentityEntity is Initializable {\n  using Eidas for Eidas.EidasLevel;\n\n  struct IdentityEntity {\n    string name;\n    string cif;\n    string url_logo;\n    string url_createAID;\n    string url_AOA;\n    bool active;\n  }\n\n  mapping(address => IdentityEntity) internal entities;\n  address[] listEntities;\n\n  modifier onlyIdentityEntity(address _identityEntity) {\n    require(entities[_identityEntity].active == true);\n    _;\n  }\n\n  modifier notIdentityEntity(address _identityEntity) {\n    require(!entities[_identityEntity].active);\n    _;\n  }\n\n  function initialize(address _firstIdentity) public initializer {\n    IdentityEntity storage identityEntity = entities[_firstIdentity];\n    identityEntity.active = true;\n    identityEntity.name = \"First Entity\";\n  }\n\n  /**\n   * @dev function that allows you to add a entity to the entities mapping\n   * @param _addressEntity the address that identify the entity in the blockchain\n   * @param _name the name of the entity\n   * @param _cif the cif of the entity\n   * @param _url_logo the url that contains the logo of the entity\n   * @param _url_createAID the url that contains the alastria ID of the entity\n   * @param _url_AOA the url that contains the AOA of the entity\n   * @param _active a flag that shows if a entity is active or not\n   */\n  function addEntity(\n    address _addressEntity,\n    string memory _name,\n    string memory _cif,\n    string memory _url_logo,\n    string memory _url_createAID,\n    string memory _url_AOA,\n    bool _active\n  ) public notIdentityEntity(_addressEntity) onlyIdentityEntity(msg.sender) {\n    listEntities.push(_addressEntity);\n    entities[_addressEntity].name = _name;\n    entities[_addressEntity].cif = _cif;\n    entities[_addressEntity].url_logo = _url_logo;\n    entities[_addressEntity].url_createAID = _url_createAID;\n    entities[_addressEntity].url_AOA = _url_AOA;\n    entities[_addressEntity].active = _active;\n  }\n\n  /**\n   * @dev function that allows you to change the name of the entity\n   * @param _addressEntity the address that identify the entity in the blockchain\n   * @param _name the new name of the entity\n   */\n  function setNameEntity(address _addressEntity, string memory _name)\n    public\n    onlyIdentityEntity(_addressEntity)\n  {\n    entities[_addressEntity].name = _name;\n  }\n\n  /**\n   * @dev function that allows you to change the CIF of the entity\n   * @param _addressEntity the address that identify the entity in the blockchain\n   * @param _cif the new cif of the entity\n   */\n  function setCifEntity(address _addressEntity, string memory _cif)\n    public\n    onlyIdentityEntity(_addressEntity)\n  {\n    entities[_addressEntity].cif = _cif;\n  }\n\n  /**\n   * @dev function that allows you to change the Url that contains the logo of the entity\n   * @param _addressEntity the address that identify the entity in the blockchain\n   * @param _url_logo the new url that contains the logo of the entity\n   */\n  function setUrlLogo(address _addressEntity, string memory _url_logo)\n    public\n    onlyIdentityEntity(_addressEntity)\n  {\n    entities[_addressEntity].url_logo = _url_logo;\n  }\n\n  /**\n   * @dev function that allows you to change the Url that contains the Alastria ID of the entity\n   * @param _addressEntity the address that identify the entity in the blockchain\n   * @param _url_createAID the new url that contains the Alastria ID of the entity\n   */\n  function setUrlCreateAID(address _addressEntity, string memory _url_createAID)\n    public\n    onlyIdentityEntity(_addressEntity)\n  {\n    entities[_addressEntity].url_createAID = _url_createAID;\n  }\n\n  /**\n   * @dev function that allows you to change the Url that contains the AOA of the entity\n   * @param _addressEntity the address that identify the entity in the blockchain\n   * @param _url_AOA the new url that contains the AOA of the entity\n   */\n  function setUrlAOA(address _addressEntity, string memory _url_AOA)\n    public\n    onlyIdentityEntity(_addressEntity)\n  {\n    entities[_addressEntity].url_AOA = _url_AOA;\n  }\n\n  /**\n   * @dev function that returns all the information of a entity\n   * @param _addressEntity the address that identify the entity in the blockchain\n   * @return _name of the entity you pass to the functions as a parameter\n   * @return _cif of the entity you pass to the functions as a parameter\n   * @return _url_logo of the entity you pass to the functions as a parameter\n   * @return _url_createAID of the entity you pass to the functions as a parameter\n   * @return _url_AOA of the entity you pass to the functions as a parameter\n   * @return _active of the entity you pass to the functions as a parameter\n   */\n  function getEntity(address _addressEntity)\n    public\n    view\n    returns (\n      string memory _name,\n      string memory _cif,\n      string memory _url_logo,\n      string memory _url_createAID,\n      string memory _url_AOA,\n      bool _active\n    )\n  {\n    _name = entities[_addressEntity].name;\n    _cif = entities[_addressEntity].cif;\n    _url_logo = entities[_addressEntity].url_logo;\n    _url_createAID = entities[_addressEntity].url_createAID;\n    _url_AOA = entities[_addressEntity].url_AOA;\n    _active = entities[_addressEntity].active;\n  }\n\n  /**\n   * @dev function that return the list of entities that are registered in the blockchain\n   * @return array of address of entities\n   */\n  function entitiesList() public view returns (address[] memory) {\n    return listEntities;\n  }\n}\n"
      },
      "contracts/libs/Eidas.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.24 <0.8.0;\n\nlibrary Eidas {\n  enum EidasLevel { Null, Reputational, Low, Substantial, High }\n\n  /*function onlyReputational(EidasLevel _eidasLevel) returns (bool) {\n        return (_eidasLevel == EidasLevel.Reputational);\n    }\n\n    function onlyLow(EidasLevel _eidasLevel) returns (bool) {\n        return (_eidasLevel == EidasLevel.Low);\n    }\n\n    function onlySubstantial(EidasLevel _eidasLevel) returns (bool) {\n        return (_eidasLevel == EidasLevel.Substantial);\n    }\n\n    function onlyHigh(EidasLevel _eidasLevel) returns (bool) {\n        return (_eidasLevel == EidasLevel.High);\n    }*/\n\n  function atLeastLow(EidasLevel _eidasLevel) public pure returns (bool) {\n    return atLeast(_eidasLevel, EidasLevel.Low);\n  }\n\n  /*function alLeastSubstantial(EidasLevel _eidasLevel) returns (bool) {\n        return atLeast(_eidasLevel, EidasLevel.Substantial);\n    }\n\n    function alLeastHigh(EidasLevel _eidasLevel) returns (bool) {\n        return atLeast(_eidasLevel, EidasLevel.High);\n    }*/\n\n  function atLeast(EidasLevel _eidasLevel, EidasLevel _level) public pure returns (bool) {\n    return (uint256(_eidasLevel) >= uint256(_level));\n  }\n\n  /*function notNull(EidasLevel _eidasLevel) returns (bool) {\n        return _eidasLevel != EidasLevel.Null;\n    }\n\n    function toEidasLevel(uint _level) returns (EidasLevel) {\n        return EidasLevel(_level);\n    }*/\n}\n"
      },
      "contracts/openzeppelin/Initializable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\n// solhint-disable-next-line compiler-version\npragma solidity >=0.4.24 <0.8.0;\n\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n * \n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.\n * \n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n */\nabstract contract Initializable {\n\n    /**\n     * @dev Indicates that the contract has been initialized.\n     */\n    bool private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Modifier to protect an initializer function from being invoked twice.\n     */\n    modifier initializer() {\n        require(_initializing || _isConstructor() || !_initialized, \"Initializable: contract is already initialized\");\n\n        bool isTopLevelCall = !_initializing;\n        if (isTopLevelCall) {\n            _initializing = true;\n            _initialized = true;\n        }\n\n        _;\n\n        if (isTopLevelCall) {\n            _initializing = false;\n        }\n    }\n\n    /// @dev Returns true if and only if the function is running in the constructor\n    function _isConstructor() private view returns (bool) {\n        // extcodesize checks the size of the code stored in an address, and\n        // address returns the current address. Since the code is still not\n        // deployed when running a constructor, any checks on its code size will\n        // yield zero, making it an effective way to detect if a contract is\n        // under construction or not.\n        address self = address(this);\n        uint256 cs;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { cs := extcodesize(self) }\n        return cs == 0;\n    }\n}"
      },
      "contracts/identityManager/AlastriaIdentityManager.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.24 <0.8.0;\n\nimport \"./AlastriaProxy.sol\";\nimport { IAidEntity } from \"./AlastriaIdentityEntity.sol\";\nimport { IAidIssuer } from \"./AlastriaIdentityIssuer.sol\";\nimport { IAidServiceProvider } from \"./AlastriaIdentityServiceProvider.sol\";\nimport \"../openzeppelin/Initializable.sol\";\n\ncontract AlastriaIdentityManager is Initializable {\n  //Variables\n  uint256 public version;\n  uint256 internal constant timeToLive = 10000;\n  address aidCredentialRegistry;\n  address aidPresentationRegistry;\n  address aidPublicKeyRegistry;\n  IAidIssuer internal aidIssuer;\n  mapping(address => address) public identityKeys; //change to alastriaID created check bool\n  mapping(address => uint256) public pendingIDs;\n\n  //Events\n  event PreparedAlastriaID(address indexed signAddress);\n\n  event OperationWasNotSupported(string indexed method);\n\n  event IdentityCreated(address indexed identity, address indexed creator, address owner);\n\n  event IdentityRecovered(\n    address indexed oldAccount,\n    address newAccount,\n    address indexed serviceProvider\n  );\n\n  //Modifiers\n  modifier isPendingAndOnTime(address _signAddress) {\n    require(pendingIDs[_signAddress] > 0 && pendingIDs[_signAddress] > block.timestamp);\n    _;\n  }\n\n  modifier validAddress(address addr) {\n    //protects against some weird attacks\n    require(addr != address(0));\n    _;\n  }\n\n  //Constructor\n  function initialize(\n    address _aidEntity,\n    address _aidIssuer,\n    address _aidServiceProvider,\n    address _credentialRegistry,\n    address _presentationRegistry,\n    address _publicKeyRegistry\n  ) public initializer {\n    //TODO require(_version > getPreviousVersion(_previousVersion));\n    // Safe registry addresses\n    aidCredentialRegistry = _credentialRegistry;\n    aidPresentationRegistry = _presentationRegistry;\n    aidPublicKeyRegistry = _publicKeyRegistry;\n    // Create first identity based on msg.sender\n    AlastriaProxy identity = new AlastriaProxy();\n    //identity.transferOwnership(msg.sender);\n    identityKeys[msg.sender] = address(identity);\n    aidIssuer = IAidIssuer(_aidIssuer);\n    aidIssuer.initialize(address(identity));\n    IAidServiceProvider(_aidServiceProvider).initialize(address(identity));\n    IAidServiceProvider(_aidEntity).initialize(address(identity));\n  }\n\n  //Methods\n  function prepareAlastriaID(address _signAddress) public {\n    require(aidIssuer.isIdentityIssuer(msg.sender), \"Only issuers are allowed\");\n    pendingIDs[_signAddress] = block.timestamp + timeToLive;\n    emit PreparedAlastriaID(_signAddress);\n  }\n\n  /// @dev Creates a new AlastriaProxy contract for an owner and recovery and allows an initial forward call which would be to set the registry in our case\n  /// @param addPublicKeyCallData of the call to addKey function in AlastriaPublicKeyRegistry from the new deployed AlastriaProxy contract\n  function createAlastriaIdentity(bytes memory addPublicKeyCallData)\n    public\n    validAddress(msg.sender)\n    isPendingAndOnTime(msg.sender)\n  {\n    AlastriaProxy identity = new AlastriaProxy();\n    identityKeys[msg.sender] = address(identity);\n    pendingIDs[msg.sender] = 0;\n    identity.forward(aidPublicKeyRegistry, 0, addPublicKeyCallData); //must be alastria registry call\n  }\n\n  /// @dev This method send a transaction trough the proxy of the sender\n  function delegateCall(\n    address _destination,\n    uint256 _value,\n    bytes memory _data\n  ) public returns (bytes memory) {\n    require(identityKeys[msg.sender] != address(0));\n    AlastriaProxy identity = AlastriaProxy(address(identityKeys[msg.sender]));\n    bytes memory result = identity.forward(_destination, _value, _data);\n    return result;\n  }\n\n  function recoverAccount(address accountLost, address newAccount) public {\n    require(aidIssuer.isIdentityIssuer(msg.sender), \"Only issuers are allowed\");\n    identityKeys[newAccount] = identityKeys[accountLost];\n    identityKeys[accountLost] = address(0);\n    emit IdentityRecovered(accountLost, newAccount, msg.sender);\n  }\n}\n"
      },
      "contracts/identityManager/AlastriaProxy.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.24 <0.8.0;\n\nimport \"../openzeppelin/ownership/Ownable.sol\";\n\ncontract AlastriaProxy is Ownable {\n  //address public owner;\n\n  event Forwarded(address indexed destination, uint256 value, bytes data, bytes result);\n\n  //TODO: upgradeable owner for version in Identity Manager\n  //constructor () public {\n  //    owner = msg.sender;\n  //}\n\n  fallback() external {\n    revert();\n  }\n\n  function forward(\n    address destination,\n    uint256 value,\n    bytes memory data\n  ) public onlyOwner returns (bytes memory) {\n    (bool ret, bytes memory result) = destination.call{ value: value }(data);\n    require(ret);\n    emit Forwarded(destination, value, data, result);\n    return result;\n  }\n}\n"
      },
      "contracts/identityManager/AlastriaIdentityIssuer.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.24 <0.8.0;\n\nimport \"../libs/Eidas.sol\";\nimport \"../openzeppelin/Initializable.sol\";\n\ninterface IAidIssuer {\n    function initialize(address _firstIdentity) external;\n    function isIdentityIssuer(address _identityIssuer) external view returns (bool);\n}\n\ncontract AlastriaIdentityIssuer is Initializable {\n  using Eidas for Eidas.EidasLevel;\n\n  struct IdentityIssuer {\n    Eidas.EidasLevel level;\n    bool active;\n  }\n\n  mapping(address => IdentityIssuer) internal issuers;\n\n  modifier onlyIdentityIssuer(address _identityIssuer) {\n    require(issuers[_identityIssuer].active);\n    _;\n  }\n\n  modifier notIdentityIssuer(address _identityIssuer) {\n    require(!issuers[_identityIssuer].active);\n    _;\n  }\n\n  modifier alLeastLow(Eidas.EidasLevel _level) {\n    require(_level.atLeastLow());\n    _;\n  }\n\n  function initialize(address _firstIdentity) public initializer {\n    IdentityIssuer storage identityIssuer = issuers[_firstIdentity];\n    identityIssuer.level = Eidas.EidasLevel.High;\n    identityIssuer.active = true;\n  }\n\n  function addIdentityIssuer(address _identityIssuer, Eidas.EidasLevel _level)\n    public\n    alLeastLow(_level)\n    notIdentityIssuer(_identityIssuer)\n    onlyIdentityIssuer(msg.sender)\n  {\n    IdentityIssuer storage identityIssuer = issuers[_identityIssuer];\n    identityIssuer.level = _level;\n    identityIssuer.active = true;\n  }\n\n  function updateIdentityIssuerEidasLevel(address _identityIssuer, Eidas.EidasLevel _level)\n    public\n    alLeastLow(_level)\n    onlyIdentityIssuer(msg.sender)\n  {\n    IdentityIssuer storage identityIssuer = issuers[_identityIssuer];\n    identityIssuer.level = _level;\n  }\n\n  function deleteIdentityIssuer(address _identityIssuer) public onlyIdentityIssuer(msg.sender) {\n    IdentityIssuer storage identityIssuer = issuers[_identityIssuer];\n    identityIssuer.level = Eidas.EidasLevel.Null;\n    identityIssuer.active = false;\n  }\n\n  function getEidasLevel(address _identityIssuer) public view returns (Eidas.EidasLevel) {\n    return issuers[_identityIssuer].level;\n  }\n\n  function isIdentityIssuer(address _identityIssuer) public view returns (bool) {\n    return issuers[_identityIssuer].active;\n  }\n}\n"
      },
      "contracts/identityManager/AlastriaIdentityServiceProvider.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.24 <0.8.0;\n\nimport \"../libs/Eidas.sol\";\nimport \"../openzeppelin/Initializable.sol\";\n\ninterface IAidServiceProvider {\n    function initialize(address _firstIdentity) external;\n}\n\ncontract AlastriaIdentityServiceProvider is Initializable {\n\n    using Eidas for Eidas.EidasLevel;\n\n    mapping(address => bool) internal providers;\n\n    modifier onlyIdentityServiceProvider(address _identityServiceProvider) {\n        require (isIdentityServiceProvider(_identityServiceProvider));\n        _;\n    }\n\n    modifier notIdentityServiceProvider(address _identityServiceProvider) {\n        require (!isIdentityServiceProvider(_identityServiceProvider));\n        _;\n    }\n\n    function initialize(address _firstIdentity) public initializer {\n        providers[_firstIdentity] = true;\n    }\n\n    function addIdentityServiceProvider(address _identityServiceProvider) public onlyIdentityServiceProvider(msg.sender) notIdentityServiceProvider(_identityServiceProvider) {\n        providers[_identityServiceProvider] = true;\n    }\n\n    function deleteIdentityServiceProvider(address _identityServiceProvider) public onlyIdentityServiceProvider(_identityServiceProvider) onlyIdentityServiceProvider(msg.sender) {\n        providers[_identityServiceProvider] = false;\n    }\n\n    function isIdentityServiceProvider(address _identityServiceProvider) public view returns (bool) {\n        return providers[_identityServiceProvider];\n    }\n\n}\n"
      },
      "contracts/openzeppelin/ownership/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"../GSN/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}"
      },
      "contracts/openzeppelin/GSN/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.24 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n  function _msgSender() internal view virtual returns (address payable) {\n    return msg.sender;\n  }\n\n  function _msgData() internal view virtual returns (bytes memory) {\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    return msg.data;\n  }\n}\n"
      },
      "contracts/registry/AlastriaPublicKeyRegistry.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.24 <0.8.0;\n\nimport \"../openzeppelin/Initializable.sol\";\n\n\ncontract AlastriaPublicKeyRegistry is Initializable{\n\n    // This contracts registers and makes publicly avalaible the AlastriaID Public Keys hash and status, current and past.\n\n    //To Do: Should we add RevokedBySubject Status?\n\n    //Variables\n    int public version;\n    address public previousPublishedVersion;\n\n    // Initially Valid: could only be changed to DeletedBySubject for the time being.\n    enum Status {Valid, DeletedBySubject}\n    struct PublicKey {\n        bool exists;\n        Status status; // Deleted keys shouldnt be used, not even to check previous signatures.\n        uint startDate;\n        uint endDate;\n    }\n\n    // Mapping (subject, publickey)\n    mapping(address => mapping(bytes32 => PublicKey)) private publicKeyRegistry;\n    // mapping subject => publickey\n    mapping(address => string[]) public publicKeyList;\n\n    //Events, just for revocation and deletion\n    event PublicKeyDeleted (string publicKey);\n    event PublicKeyRevoked (string publicKey);\n\n    //Modifiers\n    modifier validAddress(address addr) {//protects against some weird attacks\n        require(addr != address(0));\n        _;\n    }\n\n    function initialize(address _previousPublishedVersion) initializer public{\n        version = 4;\n        previousPublishedVersion = _previousPublishedVersion;\n    }\n\n    // Sets new key and revokes previous\n    function addKey(string memory publicKey) public {\n        require(!publicKeyRegistry[msg.sender][getKeyHash(publicKey)].exists);\n        uint changeDate = block.timestamp;\n        revokePublicKey(getCurrentPublicKey(msg.sender));\n        publicKeyRegistry[msg.sender][getKeyHash(publicKey)] = PublicKey(\n            true,\n            Status.Valid,\n            changeDate,\n            0\n        );\n        publicKeyList[msg.sender].push(publicKey);\n    }\n\n    function revokePublicKey(string memory publicKey) public {\n        PublicKey storage value = publicKeyRegistry[msg.sender][getKeyHash(publicKey)];\n        // only existent no backtransition\n        if (value.exists && value.status != Status.DeletedBySubject) {\n            value.endDate = block.timestamp;\n            emit PublicKeyRevoked(publicKey);\n        }\n    }\n\n    function deletePublicKey(string memory publicKey) public {\n        PublicKey storage value = publicKeyRegistry[msg.sender][getKeyHash(publicKey)];\n        // only existent\n        if (value.exists) {\n            value.status = Status.DeletedBySubject;\n            value.endDate = block.timestamp;\n            emit PublicKeyDeleted(publicKey);\n        }\n    }\n\n    function getCurrentPublicKey(address subject) view public validAddress(subject) returns (string memory) {\n        if (publicKeyList[subject].length > 0) {\n            return publicKeyList[subject][publicKeyList[subject].length - 1];\n        } else {\n            return \"\";\n        }\n    }\n\n    function getPublicKeyStatus(address subject, bytes32 publicKey) view public validAddress(subject)\n        returns (bool exists, Status status, uint startDate, uint endDate){\n        PublicKey storage value = publicKeyRegistry[subject][publicKey];\n        return (value.exists, value.status, value.startDate, value.endDate);\n    }\n    \n    function getKeyHash(string memory inputKey) internal pure returns(bytes32){\n        return keccak256(abi.encodePacked(inputKey));\n    }\n\n}\n"
      },
      "contracts/registry/AlastriaPresentationRegistry.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.24 <0.8.0;\n\nimport \"../openzeppelin/Initializable.sol\";\n\n\ncontract AlastriaPresentationRegistry is Initializable {\n\n    // Subject Presentation actions are registered under subjectPresentationHash = hash(Presentation)\n    // in a (subject, subjectPresentationHash) mapping\n    // Receiver (ussually a Service Provider) Presentation Actions are registered\n    // under receiverPresentationHash = hash(Presentations + PresentationSignature) in a (receiver, receiverPresentationHash) mapping\n    // A List of Subject Presentation Hashes is gathered in a (subject) mapping\n    // To Review: Subject Presentations  could be iterated instead of returned as an array\n\n\n    // Variables\n    int public version;\n    address public previousPublishedVersion;\n\n\n    // Status definition, should be moved to a Library.\n    enum Status {Valid, Received, AskDeletion, DeletionConfirmation}\n    Status constant STATUS_FIRST = Status.Valid;\n    Status constant STATUS_LAST = Status.DeletionConfirmation;\n    int constant STATUS_SIZE = 4;\n    bool[STATUS_SIZE] subjectAllowed = [\n        true,\n        false,\n        true,\n        false\n    ];\n    bool[STATUS_SIZE] receiverAllowed = [\n        false,\n        true,\n        false,\n        true\n    ];\n    bool backTransitionsAllowed = false;\n\n\n    // Presentation: Initially set to Valid\n    // Updates as allowed in *allow arrays\n    struct SubjectPresentation {\n        bool exists;\n        Status status;\n        string URI;\n    }\n    // Mapping subject, subjectPresentationHash (Complete JSON Presentation)\n    mapping(address => mapping(bytes32 => SubjectPresentation)) public subjectPresentationRegistry;\n    mapping(address => bytes32[]) public subjectPresentationListRegistry;\n\n    struct ReceiverPresentation {\n        bool exists;\n        Status status;\n    }\n    // Mapping receiver, receiverPresentationHash (Complete JSON Presentation + PresentationSignature)\n    mapping(address => mapping(bytes32 => ReceiverPresentation)) private receiverPresentationRegistry;\n\n\n    // Events. Just for changes, not for initial set\n    event PresentationUpdated (bytes32 hash, Status status);\n\n\n    //Modifiers\n    modifier validAddress(address addr) {//protects against some weird attacks\n        require(addr != address(0));\n        _;\n    }\n\n    modifier validStatus (Status status) { // solidity currently check on use not at function call\n        require (status >= STATUS_FIRST && status <= STATUS_LAST);\n        _;\n    }\n\n    // Functions\n    function initialize(address _previousPublishedVersion) public initializer {\n        version = 4;\n        previousPublishedVersion = _previousPublishedVersion;\n    }\n\n    //\n    //Subject functions\n    function addSubjectPresentation(bytes32 subjectPresentationHash, string memory URI) public {\n        require(!subjectPresentationRegistry[msg.sender][subjectPresentationHash].exists);\n        subjectPresentationRegistry[msg.sender][subjectPresentationHash] = SubjectPresentation(true, Status.Valid, URI);\n        subjectPresentationListRegistry[msg.sender].push(subjectPresentationHash);\n    }\n\n    function updateSubjectPresentation(bytes32 subjectPresentationHash, Status status) public validStatus(status) {\n        SubjectPresentation storage value = subjectPresentationRegistry[msg.sender][subjectPresentationHash];\n        // Check existence and backtransitions, should be requires?\n        if (!value.exists) {\n            return;\n        }\n        if (!backTransitionsAllowed && status <= value.status) {\n            return;\n        }\n        if (subjectAllowed[uint(status)]) {\n            value.status = status;\n            emit PresentationUpdated(subjectPresentationHash, status);\n        }\n    }\n\n    // If the Presentation does not exists the return is a void Presentation\n    // If we want a log, should we add an event?\n    function getSubjectPresentationStatus(address subject, bytes32 subjectPresentationHash) view public validAddress(subject) returns (bool exists, Status status) {\n        SubjectPresentation storage value = subjectPresentationRegistry[subject][subjectPresentationHash];\n        return (value.exists, value.status);\n    }\n\n    function getSubjectPresentationList(address subject) public view returns (uint, bytes32[] memory) {\n        return (subjectPresentationListRegistry[subject].length, subjectPresentationListRegistry[subject]);\n    }\n\n    //\n    //Receiver functions\n    function updateReceiverPresentation(bytes32 receiverPresentationHash, Status status) public validStatus(status) {\n        ReceiverPresentation storage value = receiverPresentationRegistry[msg.sender][receiverPresentationHash];\n        // No previous existence required. Check backward transition\n        if (!backTransitionsAllowed && status <= value.status) {\n            return;\n        }\n        if (receiverAllowed[uint(status)]) {\n            value.exists = true;\n            value.status = status;\n            emit PresentationUpdated(receiverPresentationHash, status);\n        }\n    }\n\n    // If the Presentation does not exists the return is a void Presentation\n    // If we want a log, should we add an event?\n    function getReceiverPresentationStatus(address receiver, bytes32 receiverPresentationHash) view public validAddress(receiver) returns (bool exists, Status status) {\n        ReceiverPresentation storage value = receiverPresentationRegistry[receiver][receiverPresentationHash];\n        return (value.exists, value.status);\n    }\n\n    // Utility function\n    // Defining three status functions avoids linking the Subject to the Receiver or the corresponding hashes\n    function getPresentationStatus(Status subjectStatus, Status receiverStatus) pure public validStatus(subjectStatus) validStatus(receiverStatus) returns (Status){\n        if (subjectStatus >= receiverStatus) {\n            return subjectStatus;\n        } else {\n            return receiverStatus;\n        }\n    }\n}"
      },
      "contracts/registry/AlastriaCredentialRegistry.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.24 <0.8.0;\n\nimport \"../openzeppelin/Initializable.sol\";\n\ncontract AlastriaCredentialRegistry is Initializable {\n\n    // SubjectCredential are registered under Hash(Credential) in a (subject, hash) mapping\n    // IssuerCredentials are registered under Hash (Credentials + SubjectCredentialSignature) in a (issuer, hash) mapping\n    // A List of Subject credential hashes is gathered in a (subject) mapping\n    // To Think About: Make a unique Credential struct and just one mapping subjectCredentialRegistry instead one for subjects and one for issuers\n    // To Do: Return credential URI. Should only be available to Subject. Mainly as a backup or main index when there are more than one device.\n    // Could be done from credential mapping in another get function only for subject\n    // or in getSubjectCredentialList (changing URI from one mapping to the other)\n    // To Do: make AlastriaCredentialRegistry similar to AlastriaClaimRegistry.\n\n    // Variables\n    int public version;\n    address public previousPublishedVersion;\n\n    // SubjectCredential: Initially Valid: Only DeletedBySubject\n    // IssuerCredentials: Initially Valid: Only AskIssuer or Revoked, no backwards transitions.\n    enum Status {Valid, AskIssuer, Revoked, DeletedBySubject}\n    Status constant STATUS_FIRST = Status.Valid;\n    Status constant STATUS_LAST = Status.DeletedBySubject;\n\n    struct SubjectCredential {\n        bool exists;\n        Status status;\n        string URI;\n    }\n\n    // Mapping subject, hash (JSON credential)\n    mapping(address => mapping(bytes32 => SubjectCredential)) public subjectCredentialRegistry;\n    mapping(address => bytes32[]) public subjectCredentialList;\n\n    struct IssuerCredential {\n        bool exists;\n        Status status;\n    }\n\n    // Mapping issuer, hash (JSON credential + CredentialSignature)\n    mapping(address => mapping(bytes32 => IssuerCredential)) private issuerCredentialRegistry;\n    mapping(address => bytes32[]) public issuerCredentialList;\n\n    // Events. Just for changes, not for initial set\n    event SubjectCredentialDeleted (bytes32 subjectCredentialHash);\n    event IssuerCredentialRevoked (bytes32 issuerCredentialHash, Status status);\n\n    //Modifiers\n    modifier validAddress(address addr) {//protects against some weird attacks\n        require(addr != address(0));\n        _;\n    }\n\n    modifier validStatus (Status status) { // solidity currently check on use not at function call\n        require (status >= STATUS_FIRST && status <= STATUS_LAST);\n        _;\n    }\n\n    // Functions\n    // Constructor\n    function initialize(address _previousPublishedVersion) public initializer {\n        version = 3;\n        previousPublishedVersion = _previousPublishedVersion;\n    }\n\n    function addSubjectCredential(bytes32 subjectCredentialHash, string memory URI) public {\n        require(!subjectCredentialRegistry[msg.sender][subjectCredentialHash].exists);\n        subjectCredentialRegistry[msg.sender][subjectCredentialHash] = SubjectCredential(true, Status.Valid, URI);\n        subjectCredentialList[msg.sender].push(subjectCredentialHash);\n    }\n\n    function addIssuerCredential(bytes32 issuerCredentialHash) public {\n        require(!issuerCredentialRegistry[msg.sender][issuerCredentialHash].exists);\n        issuerCredentialRegistry[msg.sender][issuerCredentialHash] = IssuerCredential(true, Status.Valid);\n        issuerCredentialList[msg.sender].push(issuerCredentialHash);\n    }\n\n    function deleteSubjectCredential(bytes32 subjectCredentialHash) public {\n        SubjectCredential storage value = subjectCredentialRegistry[msg.sender][subjectCredentialHash];\n        // only existent\n        if (value.exists && value.status != Status.DeletedBySubject) {\n            value.status = Status.DeletedBySubject;\n            emit SubjectCredentialDeleted(subjectCredentialHash);\n        }\n    }\n\n    // If the credential does not exists the return is a void credential\n    // If we want a log, should we add an event?\n    function getSubjectCredentialStatus(address subject, bytes32 subjectCredentialHash) view public validAddress(subject) returns (bool exists, Status status) {\n        SubjectCredential storage value = subjectCredentialRegistry[subject][subjectCredentialHash];\n        return (value.exists, value.status);\n    }\n\n    function getSubjectCredentialList(address subject) public view returns (uint, bytes32[] memory) {\n        return (subjectCredentialList[subject].length, subjectCredentialList[subject]);\n    }\n\n    function updateCredentialStatus(bytes32 issuerCredentialHash, Status status) validStatus (status) public {\n        IssuerCredential storage value = issuerCredentialRegistry[msg.sender][issuerCredentialHash];\n        // No backward transition, only AskIssuer or Revoked\n        if (status > value.status) {\n            if (status == Status.AskIssuer || status == Status.Revoked) {\n                value.exists = true;\n                value.status = status;\n                emit IssuerCredentialRevoked(issuerCredentialHash, status);\n            }\n        }\n    }\n\n    // If the credential does not exists the return is a void credential\n    // If we want a log, should we add an event?\n    function getIssuerCredentialStatus(address issuer, bytes32 issuerCredentialHash) view public validAddress(issuer) returns (bool exists, Status status) {\n        IssuerCredential storage value = issuerCredentialRegistry[issuer][issuerCredentialHash];\n        return (value.exists, value.status);\n    }\n\n    // Utility function\n    // Defining three status functions avoid linking the subject to the issuer or the corresponding hashes\n    function getCredentialStatus(Status subjectStatus, Status issuerStatus) pure public validStatus(subjectStatus) validStatus(issuerStatus) returns (Status){\n        if (subjectStatus >= issuerStatus) {\n            return subjectStatus;\n        } else {\n            return issuerStatus;\n        }\n    }\n}\n"
      },
      "contracts/openzeppelin/upgradeability/ProxyAdmin.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.24 <0.8.0;\r\n\r\nimport \"../ownership/Ownable.sol\";\r\nimport \"./TransparentUpgradeableProxy.sol\";\r\n\r\n/**\r\n * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\r\n * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\r\n */\r\ncontract ProxyAdmin is Ownable {\r\n\r\n    /**\r\n     * @dev Returns the current implementation of `proxy`.\r\n     * \r\n     * Requirements:\r\n     * \r\n     * - This contract must be the admin of `proxy`.\r\n     */\r\n    function getProxyImplementation(TransparentUpgradeableProxy proxy) public view returns (address) {\r\n        // We need to manually run the static call since the getter cannot be flagged as view\r\n        // bytes4(keccak256(\"implementation()\")) == 0x5c60da1b\r\n        (bool success, bytes memory returndata) = address(proxy).staticcall(hex\"5c60da1b\");\r\n        require(success);\r\n        return abi.decode(returndata, (address));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the current admin of `proxy`.\r\n     * \r\n     * Requirements:\r\n     * \r\n     * - This contract must be the admin of `proxy`.\r\n     */\r\n    function getProxyAdmin(TransparentUpgradeableProxy proxy) public view returns (address) {\r\n        // We need to manually run the static call since the getter cannot be flagged as view\r\n        // bytes4(keccak256(\"admin()\")) == 0xf851a440\r\n        (bool success, bytes memory returndata) = address(proxy).staticcall(hex\"f851a440\");\r\n        require(success);\r\n        return abi.decode(returndata, (address));\r\n    }\r\n\r\n    /**\r\n     * @dev Changes the admin of `proxy` to `newAdmin`.\r\n     * \r\n     * Requirements:\r\n     * \r\n     * - This contract must be the current admin of `proxy`.\r\n     */\r\n    function changeProxyAdmin(TransparentUpgradeableProxy proxy, address newAdmin) public onlyOwner {\r\n        proxy.changeAdmin(newAdmin);\r\n    }\r\n\r\n    /**\r\n     * @dev Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}.\r\n     * \r\n     * Requirements:\r\n     * \r\n     * - This contract must be the admin of `proxy`.\r\n     */\r\n    function upgrade(TransparentUpgradeableProxy proxy, address implementation) public onlyOwner {\r\n        proxy.upgradeTo(implementation);\r\n    }\r\n\r\n    /**\r\n     * @dev Upgrades `proxy` to `implementation` and calls a function on the new implementation. See\r\n     * {TransparentUpgradeableProxy-upgradeToAndCall}.\r\n     * \r\n     * Requirements:\r\n     * \r\n     * - This contract must be the admin of `proxy`.\r\n     */\r\n    function upgradeAndCall(TransparentUpgradeableProxy proxy, address implementation, bytes memory data) public payable onlyOwner {\r\n        proxy.upgradeToAndCall{value: msg.value}(implementation, data);\r\n    }\r\n}\r\n"
      },
      "contracts/openzeppelin/upgradeability/TransparentUpgradeableProxy.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\nimport \"./UpgradeableProxy.sol\";\r\n\r\n/**\r\n * @dev This contract implements a proxy that is upgradeable by an admin.\r\n * \r\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\r\n * clashing], which can potentially be used in an attack, this contract uses the\r\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\r\n * things that go hand in hand:\r\n * \r\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\r\n * that call matches one of the admin functions exposed by the proxy itself.\r\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\r\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\r\n * \"admin cannot fallback to proxy target\".\r\n * \r\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\r\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\r\n * to sudden errors when trying to call a function from the proxy implementation.\r\n * \r\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\r\n * you should think of the `ProxyAdmin` instance as the real administrative inerface of your proxy.\r\n */\r\ncontract TransparentUpgradeableProxy is UpgradeableProxy {\r\n    /**\r\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\r\n     * optionally initialized with `_data` as explained in {UpgradeableProxy-constructor}.\r\n     */\r\n    constructor(address _logic, address _admin, bytes memory _data) payable UpgradeableProxy(_logic, _data) {\r\n        assert(_ADMIN_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.admin\")) - 1));\r\n        _setAdmin(_admin);\r\n    }\r\n\r\n    /**\r\n     * @dev Emitted when the admin account has changed.\r\n     */\r\n    event AdminChanged(address previousAdmin, address newAdmin);\r\n\r\n    /**\r\n     * @dev Storage slot with the admin of the contract.\r\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\r\n     * validated in the constructor.\r\n     */\r\n    bytes32 private constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\r\n\r\n    /**\r\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\r\n     */\r\n    modifier ifAdmin() {\r\n        if (msg.sender == getAdmin()) {\r\n            _;\r\n        } else {\r\n            _fallback();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the current admin.\r\n     * \r\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\r\n     * \r\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\r\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\r\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\r\n     */\r\n    function admin() external ifAdmin returns (address currentAdmin) {\r\n        return getAdmin();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the current implementation.\r\n     * \r\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\r\n     * \r\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\r\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\r\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\r\n     */\r\n    function implementation() external ifAdmin returns (address _impl) {\r\n        return _implementation();\r\n    }\r\n\r\n    /**\r\n     * @dev Changes the admin of the proxy.\r\n     * \r\n     * Emits an {AdminChanged} event.\r\n     * \r\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\r\n     */\r\n    function changeAdmin(address newAdmin) external ifAdmin {\r\n        require(newAdmin != address(0), \"TransparentUpgradeableProxy: new admin is the zero address\");\r\n        emit AdminChanged(getAdmin(), newAdmin);\r\n        _setAdmin(newAdmin);\r\n    }\r\n\r\n    /**\r\n     * @dev Upgrade the implementation of the proxy.\r\n     * \r\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\r\n     */\r\n    function upgradeTo(address newImplementation) external ifAdmin {\r\n        _upgradeTo(newImplementation);\r\n    }\r\n\r\n    /**\r\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\r\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\r\n     * proxied contract.\r\n     * \r\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\r\n     */\r\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {\r\n        _upgradeTo(newImplementation);\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success,) = newImplementation.delegatecall(data);\r\n        require(success);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the current admin.\r\n     */\r\n    function getAdmin() internal view returns (address adm) {\r\n        bytes32 slot = _ADMIN_SLOT;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            adm := sload(slot)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Stores a new address in the EIP1967 admin slot.\r\n     */\r\n    function _setAdmin(address newAdmin) private {\r\n        bytes32 slot = _ADMIN_SLOT;\r\n\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            sstore(slot, newAdmin)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}.\r\n     */\r\n    function _beforeFallback() internal override virtual {\r\n        require(msg.sender != getAdmin(), \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\");\r\n        super._beforeFallback();\r\n    }\r\n}\r\n"
      },
      "contracts/openzeppelin/upgradeability/UpgradeableProxy.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.24 <0.8.0;\r\n\r\nimport \"./Proxy.sol\";\r\nimport { OpenZeppelinUpgradesAddress as Address } from \"../utils/Address.sol\";\r\n\r\n/**\r\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\r\n * implementation address that can be changed. This address is stored in storage in the location specified by\r\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\r\n * implementation behind the proxy.\r\n *\r\n * Upgradeability is only provided internally through {_upgradeTo}. For an externally upgradeable proxy see\r\n * {TransparentUpgradeableProxy}.\r\n */\r\ncontract UpgradeableProxy is Proxy {\r\n  /**\r\n   * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\r\n   *\r\n   * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\r\n   * function call, and allows initializating the storage of the proxy like a Solidity constructor.\r\n   */\r\n  constructor(address _logic, bytes memory _data) payable {\r\n    assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1));\r\n    _setImplementation(_logic);\r\n    if (_data.length > 0) {\r\n      // solhint-disable-next-line avoid-low-level-calls\r\n      (bool success, ) = _logic.delegatecall(_data);\r\n      require(success);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @dev Emitted when the implementation is upgraded.\r\n   */\r\n  event Upgraded(address indexed implementation);\r\n\r\n  /**\r\n   * @dev Storage slot with the address of the current implementation.\r\n   * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\r\n   * validated in the constructor.\r\n   */\r\n  bytes32 private constant _IMPLEMENTATION_SLOT =\r\n    0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\r\n\r\n  /**\r\n   * @dev Returns the current implementation address.\r\n   */\r\n  function _implementation() internal view override returns (address impl) {\r\n    bytes32 slot = _IMPLEMENTATION_SLOT;\r\n    // solhint-disable-next-line no-inline-assembly\r\n    assembly {\r\n      impl := sload(slot)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @dev Upgrades the proxy to a new implementation.\r\n   *\r\n   * Emits an {Upgraded} event.\r\n   */\r\n  function _upgradeTo(address newImplementation) internal {\r\n    _setImplementation(newImplementation);\r\n    emit Upgraded(newImplementation);\r\n  }\r\n\r\n  /**\r\n   * @dev Stores a new address in the EIP1967 implementation slot.\r\n   */\r\n  function _setImplementation(address newImplementation) private {\r\n    require(\r\n      Address.isContract(newImplementation),\r\n      \"UpgradeableProxy: new implementation is not a contract\"\r\n    );\r\n\r\n    bytes32 slot = _IMPLEMENTATION_SLOT;\r\n\r\n    // solhint-disable-next-line no-inline-assembly\r\n    assembly {\r\n      sstore(slot, newImplementation)\r\n    }\r\n  }\r\n}\r\n"
      },
      "contracts/openzeppelin/upgradeability/Proxy.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.24 <0.8.0;\r\n\r\n/**\r\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\r\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\r\n * be specified by overriding the virtual {_implementation} function.\r\n * \r\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\r\n * different contract through the {_delegate} function.\r\n * \r\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\r\n */\r\nabstract contract Proxy {\r\n    /**\r\n     * @dev Delegates the current call to `implementation`.\r\n     * \r\n     * This function does not return to its internall call site, it will return directly to the external caller.\r\n     */\r\n    function _delegate(address implementation) internal {\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            // Copy msg.data. We take full control of memory in this inline assembly\r\n            // block because it will not return to Solidity code. We overwrite the\r\n            // Solidity scratch pad at memory position 0.\r\n            calldatacopy(0, 0, calldatasize())\r\n\r\n            // Call the implementation.\r\n            // out and outsize are 0 because we don't know the size yet.\r\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\r\n\r\n            // Copy the returned data.\r\n            returndatacopy(0, 0, returndatasize())\r\n\r\n            switch result\r\n            // delegatecall returns 0 on error.\r\n            case 0 { revert(0, returndatasize()) }\r\n            default { return(0, returndatasize()) }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\r\n     * and {_fallback} should delegate.\r\n     */\r\n    function _implementation() internal virtual view returns (address);\r\n\r\n    /**\r\n     * @dev Delegates the current call to the address returned by `_implementation()`.\r\n     * \r\n     * This function does not return to its internall call site, it will return directly to the external caller.\r\n     */\r\n    function _fallback() internal {\r\n        _beforeFallback();\r\n        _delegate(_implementation());\r\n    }\r\n\r\n    /**\r\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\r\n     * function in the contract matches the call data.\r\n     */\r\n    fallback () payable external {\r\n        _fallback();\r\n    }\r\n\r\n    /**\r\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\r\n     * is empty.\r\n     */\r\n    receive () payable external {\r\n        _fallback();\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\r\n     * call, or as part of the Solidity `fallback` or `receive` functions.\r\n     * \r\n     * If overriden should call `super._beforeFallback()`.\r\n     */\r\n    function _beforeFallback() internal virtual {\r\n    }\r\n}\r\n"
      },
      "contracts/openzeppelin/utils/Address.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.24 <0.8.0;\n\n/**\n * Utility library of inline functions on addresses\n *\n * Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol\n * This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts\n * when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the\n * build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.\n */\nlibrary OpenZeppelinUpgradesAddress {\n    /**\n     * Returns whether the target address is a contract\n     * @dev This function will return false if invoked during the constructor of a contract,\n     * as the code is not actually created until after the constructor finishes.\n     * @param account address of the account to check\n     * @return whether the target address is a contract\n     */\n    function isContract(address account) internal view returns (bool) {\n        uint256 size;\n        // XXX Currently there is no better way to check if there is a contract in an address\n        // than to check the size of the code at that address.\n        // See https://ethereum.stackexchange.com/a/14016/36603\n        // for more details about how this works.\n        // TODO Check this again before the Serenity release, because all addresses will be\n        // contracts then.\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 100
      },
      "evmVersion": "byzantium",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/identityManager/AlastriaIdentityEntity.sol": {
        "AlastriaIdentityEntity": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_addressEntity",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "_name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "_cif",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "_url_logo",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "_url_createAID",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "_url_AOA",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "_active",
                  "type": "bool"
                }
              ],
              "name": "addEntity",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "entitiesList",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_addressEntity",
                  "type": "address"
                }
              ],
              "name": "getEntity",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "_name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "_cif",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "_url_logo",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "_url_createAID",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "_url_AOA",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "_active",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_firstIdentity",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_addressEntity",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "_cif",
                  "type": "string"
                }
              ],
              "name": "setCifEntity",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_addressEntity",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "_name",
                  "type": "string"
                }
              ],
              "name": "setNameEntity",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_addressEntity",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "_url_AOA",
                  "type": "string"
                }
              ],
              "name": "setUrlAOA",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_addressEntity",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "_url_createAID",
                  "type": "string"
                }
              ],
              "name": "setUrlCreateAID",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_addressEntity",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "_url_logo",
                  "type": "string"
                }
              ],
              "name": "setUrlLogo",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50611372806100206000396000f3fe608060405234801561001057600080fd5b506004361061009f577c010000000000000000000000000000000000000000000000000000000060003504630ff72ef281146100a45780631e5f6f011461015c5780634b7a1859146102125780636e7a216b146102c857806375894e8c146103205780638e672cf71461055f578063c4c0233314610615578063c4d66de8146108e9578063eb5c426c1461090f575b600080fd5b61015a600480360360408110156100ba57600080fd5b600160a060020a0382351691908101906040810160208201356401000000008111156100e557600080fd5b8201836020820111156100f757600080fd5b8035906020019184600183028401116401000000008311171561011957600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506109c5945050505050565b005b61015a6004803603604081101561017257600080fd5b600160a060020a03823516919081019060408101602082013564010000000081111561019d57600080fd5b8201836020820111156101af57600080fd5b803590602001918460018302840111640100000000831117156101d157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610a2c945050505050565b61015a6004803603604081101561022857600080fd5b600160a060020a03823516919081019060408101602082013564010000000081111561025357600080fd5b82018360208201111561026557600080fd5b8035906020019184600183028401116401000000008311171561028757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610a8d945050505050565b6102d0610aee565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561030c5781810151838201526020016102f4565b505050509050019250505060405180910390f35b6103466004803603602081101561033657600080fd5b5035600160a060020a0316610b50565b604051808060200180602001806020018060200180602001871515815260200186810386528c818151815260200191508051906020019080838360005b8381101561039b578181015183820152602001610383565b50505050905090810190601f1680156103c85780820380516001836020036101000a031916815260200191505b5086810385528b5181528b516020918201918d019080838360005b838110156103fb5781810151838201526020016103e3565b50505050905090810190601f1680156104285780820380516001836020036101000a031916815260200191505b5086810384528a5181528a516020918201918c019080838360005b8381101561045b578181015183820152602001610443565b50505050905090810190601f1680156104885780820380516001836020036101000a031916815260200191505b5086810383528951815289516020918201918b019080838360005b838110156104bb5781810151838201526020016104a3565b50505050905090810190601f1680156104e85780820380516001836020036101000a031916815260200191505b5086810382528851815288516020918201918a019080838360005b8381101561051b578181015183820152602001610503565b50505050905090810190601f1680156105485780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390f35b61015a6004803603604081101561057557600080fd5b600160a060020a0382351691908101906040810160208201356401000000008111156105a057600080fd5b8201836020820111156105b257600080fd5b803590602001918460018302840111640100000000831117156105d457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610ec3945050505050565b61015a600480360360e081101561062b57600080fd5b600160a060020a03823516919081019060408101602082013564010000000081111561065657600080fd5b82018360208201111561066857600080fd5b8035906020019184600183028401116401000000008311171561068a57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156106dd57600080fd5b8201836020820111156106ef57600080fd5b8035906020019184600183028401116401000000008311171561071157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561076457600080fd5b82018360208201111561077657600080fd5b8035906020019184600183028401116401000000008311171561079857600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156107eb57600080fd5b8201836020820111156107fd57600080fd5b8035906020019184600183028401116401000000008311171561081f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561087257600080fd5b82018360208201111561088457600080fd5b803590602001918460018302840111640100000000831117156108a657600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505050503515159050610f24565b61015a600480360360208110156108ff57600080fd5b5035600160a060020a03166110de565b61015a6004803603604081101561092557600080fd5b600160a060020a03823516919081019060408101602082013564010000000081111561095057600080fd5b82018360208201111561096257600080fd5b8035906020019184600183028401116401000000008311171561098457600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061120c945050505050565b600160a060020a038216600090815260016020819052604090912060050154839160ff9091161515146109f757600080fd5b600160a060020a03831660009081526001602090815260409091208351610a269260029092019185019061126d565b50505050565b600160a060020a038216600090815260016020819052604090912060050154839160ff909116151514610a5e57600080fd5b600160a060020a03831660009081526001602081815260409092208451610a269391909201919085019061126d565b600160a060020a038216600090815260016020819052604090912060050154839160ff909116151514610abf57600080fd5b600160a060020a03831660009081526001602090815260409091208351610a269260039092019185019061126d565b60606002805480602002602001604051908101604052809291908181526020018280548015610b4657602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610b28575b5050505050905090565b600160a060020a038116600090815260016020818152604080842080548251600295821615610100026000190190911694909404601f8101849004840285018401909252818452606094859485948594859491830182828015610bf45780601f10610bc957610100808354040283529160200191610bf4565b820191906000526020600020905b815481529060010190602001808311610bd757829003601f168201915b50505050600160a060020a038916600090815260016020818152604092839020820180548451600294821615610100026000190190911693909304601f8101839004830284018301909452838352949a5090939250830182828015610c9a5780601f10610c6f57610100808354040283529160200191610c9a565b820191906000526020600020905b815481529060010190602001808311610c7d57829003601f168201915b50505050600160a060020a0389166000908152600160208181526040928390206002908101805485519481161561010002600019011691909104601f810183900483028401830190945283835294995090939250830182828015610d3f5780601f10610d1457610100808354040283529160200191610d3f565b820191906000526020600020905b815481529060010190602001808311610d2257829003601f168201915b50505050600160a060020a03891660009081526001602081815260409283902060030180548451600294821615610100026000190190911693909304601f810183900483028401830190945283835294985090939250830182828015610de65780601f10610dbb57610100808354040283529160200191610de6565b820191906000526020600020905b815481529060010190602001808311610dc957829003601f168201915b50505050600160a060020a03891660009081526001602081815260409283902060040180548451600294821615610100026000190190911693909304601f810183900483028401830190945283835294975090939250830182828015610e8d5780601f10610e6257610100808354040283529160200191610e8d565b820191906000526020600020905b815481529060010190602001808311610e7057829003601f168201915b50505050600160a060020a039890981660009081526001602052604090206005015496989597509395929460ff90931692915050565b600160a060020a038216600090815260016020819052604090912060050154839160ff909116151514610ef557600080fd5b600160a060020a03831660009081526001602090815260409091208351610a269260049092019185019061126d565b600160a060020a038716600090815260016020526040902060050154879060ff1615610f4f57600080fd5b3360008181526001602081905260409091206005015460ff16151514610f7457600080fd5b6002805460018082019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038c1690811790915560009081526020918252604090208951610fe7928b019061126d565b50600160a060020a03891660009081526001602081815260409092208951611017939190920191908a019061126d565b50600160a060020a038916600090815260016020908152604090912087516110479260029092019189019061126d565b50600160a060020a038916600090815260016020908152604090912086516110779260039092019188019061126d565b50600160a060020a038916600090815260016020908152604090912085516110a79260049092019187019061126d565b505050600160a060020a03969096166000908152600160205260409020600501805460ff1916961515969096179095555050505050565b600054610100900460ff16806110f757506110f7611267565b80611105575060005460ff16155b61115a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061130f602e913960400191505060405180910390fd5b600054610100900460ff16158015611185576000805460ff1961ff0019909116610100171660011790555b600160a060020a03821660009081526001602081815260409283902060058101805460ff19169093179092558251808401909352600c8084527f466972737420456e7469747900000000000000000000000000000000000000009390910192835290916111f49183919061126d565b50508015611208576000805461ff00191690555b5050565b600160a060020a038216600090815260016020819052604090912060050154839160ff90911615151461123e57600080fd5b600160a060020a03831660009081526001602090815260409091208351610a269285019061126d565b303b1590565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826112a357600085556112e9565b82601f106112bc57805160ff19168380011785556112e9565b828001600101855582156112e9579182015b828111156112e95782518255916020019190600101906112ce565b506112f59291506112f9565b5090565b5b808211156112f557600081556001016112fa56fe496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a2646970667358221220c304deaae8b495bfe206502f2bcd9c7a761d926dd5365db49f4b2ea64b0dee7264736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1372 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9F JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV PUSH4 0xFF72EF2 DUP2 EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0x1E5F6F01 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x4B7A1859 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x6E7A216B EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x75894E8C EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x8E672CF7 EQ PUSH2 0x55F JUMPI DUP1 PUSH4 0xC4C02333 EQ PUSH2 0x615 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x8E9 JUMPI DUP1 PUSH4 0xEB5C426C EQ PUSH2 0x90F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x9C5 SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xA2C SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xA8D SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2D0 PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x30C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2F4 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x346 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP8 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 SUB DUP7 MSTORE DUP13 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x39B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x383 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3C8 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP7 DUP2 SUB DUP6 MSTORE DUP12 MLOAD DUP2 MSTORE DUP12 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP14 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3FB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3E3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x428 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP7 DUP2 SUB DUP5 MSTORE DUP11 MLOAD DUP2 MSTORE DUP11 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP13 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x45B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x443 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x488 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP7 DUP2 SUB DUP4 MSTORE DUP10 MLOAD DUP2 MSTORE DUP10 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP12 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4BB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4A3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4E8 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP7 DUP2 SUB DUP3 MSTORE DUP9 MLOAD DUP2 MSTORE DUP9 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP11 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x51B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x503 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x548 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x5A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x5B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x5D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xEC3 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x62B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x668 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x68A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x6DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x6EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x776 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x798 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x7EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x7FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x81F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x872 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP POP POP CALLDATALOAD ISZERO ISZERO SWAP1 POP PUSH2 0xF24 JUMP JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x10DE JUMP JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x925 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x950 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x962 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x984 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x120C SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 ADD SLOAD DUP4 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO EQ PUSH2 0x9F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD PUSH2 0xA26 SWAP3 PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 DUP6 ADD SWAP1 PUSH2 0x126D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 ADD SLOAD DUP4 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO EQ PUSH2 0xA5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP5 MLOAD PUSH2 0xA26 SWAP4 SWAP2 SWAP1 SWAP3 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 ADD SLOAD DUP4 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO EQ PUSH2 0xABF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD PUSH2 0xA26 SWAP3 PUSH1 0x3 SWAP1 SWAP3 ADD SWAP2 DUP6 ADD SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xB46 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB28 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP3 MLOAD PUSH1 0x2 SWAP6 DUP3 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP5 SWAP1 SWAP5 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP5 MSTORE PUSH1 0x60 SWAP5 DUP6 SWAP5 DUP6 SWAP5 DUP6 SWAP5 DUP6 SWAP5 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xBF4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBC9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBF4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBD7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP3 ADD DUP1 SLOAD DUP5 MLOAD PUSH1 0x2 SWAP5 DUP3 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP4 SWAP1 DIV DUP4 MUL DUP5 ADD DUP4 ADD SWAP1 SWAP5 MSTORE DUP4 DUP4 MSTORE SWAP5 SWAP11 POP SWAP1 SWAP4 SWAP3 POP DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xC9A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC6F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC9A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC7D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 PUSH1 0x2 SWAP1 DUP2 ADD DUP1 SLOAD DUP6 MLOAD SWAP5 DUP2 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD AND SWAP2 SWAP1 SWAP2 DIV PUSH1 0x1F DUP2 ADD DUP4 SWAP1 DIV DUP4 MUL DUP5 ADD DUP4 ADD SWAP1 SWAP5 MSTORE DUP4 DUP4 MSTORE SWAP5 SWAP10 POP SWAP1 SWAP4 SWAP3 POP DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xD3F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD14 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD3F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD22 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD DUP5 MLOAD PUSH1 0x2 SWAP5 DUP3 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP4 SWAP1 DIV DUP4 MUL DUP5 ADD DUP4 ADD SWAP1 SWAP5 MSTORE DUP4 DUP4 MSTORE SWAP5 SWAP9 POP SWAP1 SWAP4 SWAP3 POP DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xDE6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDBB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDE6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDC9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP5 MLOAD PUSH1 0x2 SWAP5 DUP3 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP4 SWAP1 DIV DUP4 MUL DUP5 ADD DUP4 ADD SWAP1 SWAP5 MSTORE DUP4 DUP4 MSTORE SWAP5 SWAP8 POP SWAP1 SWAP4 SWAP3 POP DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xE8D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE62 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE8D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE70 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP9 SWAP1 SWAP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP7 SWAP9 SWAP6 SWAP8 POP SWAP4 SWAP6 SWAP3 SWAP5 PUSH1 0xFF SWAP1 SWAP4 AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 ADD SLOAD DUP4 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO EQ PUSH2 0xEF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD PUSH2 0xA26 SWAP3 PUSH1 0x4 SWAP1 SWAP3 ADD SWAP2 DUP6 ADD SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD DUP8 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xF4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xF74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP13 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP10 MLOAD PUSH2 0xFE7 SWAP3 DUP12 ADD SWAP1 PUSH2 0x126D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP10 MLOAD PUSH2 0x1017 SWAP4 SWAP2 SWAP1 SWAP3 ADD SWAP2 SWAP1 DUP11 ADD SWAP1 PUSH2 0x126D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP8 MLOAD PUSH2 0x1047 SWAP3 PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 DUP10 ADD SWAP1 PUSH2 0x126D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP7 MLOAD PUSH2 0x1077 SWAP3 PUSH1 0x3 SWAP1 SWAP3 ADD SWAP2 DUP9 ADD SWAP1 PUSH2 0x126D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP6 MLOAD PUSH2 0x10A7 SWAP3 PUSH1 0x4 SWAP1 SWAP3 ADD SWAP2 DUP8 ADD SWAP1 PUSH2 0x126D JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP7 ISZERO ISZERO SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP6 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x10F7 JUMPI POP PUSH2 0x10F7 PUSH2 0x1267 JUMP JUMPDEST DUP1 PUSH2 0x1105 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x115A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x130F PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1185 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE PUSH1 0xC DUP1 DUP5 MSTORE PUSH32 0x466972737420456E746974790000000000000000000000000000000000000000 SWAP4 SWAP1 SWAP2 ADD SWAP3 DUP4 MSTORE SWAP1 SWAP2 PUSH2 0x11F4 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x126D JUMP JUMPDEST POP POP DUP1 ISZERO PUSH2 0x1208 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 ADD SLOAD DUP4 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO EQ PUSH2 0x123E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD PUSH2 0xA26 SWAP3 DUP6 ADD SWAP1 PUSH2 0x126D JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x12A3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x12E9 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x12BC JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x12E9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x12E9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x12E9 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x12CE JUMP JUMPDEST POP PUSH2 0x12F5 SWAP3 SWAP2 POP PUSH2 0x12F9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x12F5 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x12FA JUMP INVALID 0x49 PUSH15 0x697469616C697A61626C653A20636F PUSH15 0x747261637420697320616C72656164 PUSH26 0x20696E697469616C697A6564A2646970667358221220C304DEAA 0xE8 0xB4 SWAP6 0xBF 0xE2 MOD POP 0x2F 0x2B 0xCD SWAP13 PUSH27 0x761D926DD5365DB49F4B2EA64B0DEE7264736F6C63430007060033 ",
              "sourceMap": "224:5431:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9F JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV PUSH4 0xFF72EF2 DUP2 EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0x1E5F6F01 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x4B7A1859 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x6E7A216B EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x75894E8C EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x8E672CF7 EQ PUSH2 0x55F JUMPI DUP1 PUSH4 0xC4C02333 EQ PUSH2 0x615 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x8E9 JUMPI DUP1 PUSH4 0xEB5C426C EQ PUSH2 0x90F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x9C5 SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xA2C SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xA8D SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2D0 PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x30C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2F4 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x346 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP8 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 SUB DUP7 MSTORE DUP13 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x39B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x383 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3C8 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP7 DUP2 SUB DUP6 MSTORE DUP12 MLOAD DUP2 MSTORE DUP12 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP14 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3FB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3E3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x428 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP7 DUP2 SUB DUP5 MSTORE DUP11 MLOAD DUP2 MSTORE DUP11 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP13 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x45B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x443 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x488 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP7 DUP2 SUB DUP4 MSTORE DUP10 MLOAD DUP2 MSTORE DUP10 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP12 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4BB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4A3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4E8 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP7 DUP2 SUB DUP3 MSTORE DUP9 MLOAD DUP2 MSTORE DUP9 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP11 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x51B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x503 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x548 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x5A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x5B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x5D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xEC3 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x62B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x668 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x68A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x6DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x6EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x776 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x798 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x7EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x7FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x81F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x872 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP POP POP CALLDATALOAD ISZERO ISZERO SWAP1 POP PUSH2 0xF24 JUMP JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x10DE JUMP JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x925 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x950 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x962 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x984 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x120C SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 ADD SLOAD DUP4 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO EQ PUSH2 0x9F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD PUSH2 0xA26 SWAP3 PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 DUP6 ADD SWAP1 PUSH2 0x126D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 ADD SLOAD DUP4 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO EQ PUSH2 0xA5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP5 MLOAD PUSH2 0xA26 SWAP4 SWAP2 SWAP1 SWAP3 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 ADD SLOAD DUP4 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO EQ PUSH2 0xABF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD PUSH2 0xA26 SWAP3 PUSH1 0x3 SWAP1 SWAP3 ADD SWAP2 DUP6 ADD SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xB46 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB28 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP3 MLOAD PUSH1 0x2 SWAP6 DUP3 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP5 SWAP1 SWAP5 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP5 MSTORE PUSH1 0x60 SWAP5 DUP6 SWAP5 DUP6 SWAP5 DUP6 SWAP5 DUP6 SWAP5 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xBF4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBC9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBF4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBD7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP3 ADD DUP1 SLOAD DUP5 MLOAD PUSH1 0x2 SWAP5 DUP3 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP4 SWAP1 DIV DUP4 MUL DUP5 ADD DUP4 ADD SWAP1 SWAP5 MSTORE DUP4 DUP4 MSTORE SWAP5 SWAP11 POP SWAP1 SWAP4 SWAP3 POP DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xC9A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC6F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC9A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC7D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 PUSH1 0x2 SWAP1 DUP2 ADD DUP1 SLOAD DUP6 MLOAD SWAP5 DUP2 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD AND SWAP2 SWAP1 SWAP2 DIV PUSH1 0x1F DUP2 ADD DUP4 SWAP1 DIV DUP4 MUL DUP5 ADD DUP4 ADD SWAP1 SWAP5 MSTORE DUP4 DUP4 MSTORE SWAP5 SWAP10 POP SWAP1 SWAP4 SWAP3 POP DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xD3F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD14 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD3F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD22 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD DUP5 MLOAD PUSH1 0x2 SWAP5 DUP3 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP4 SWAP1 DIV DUP4 MUL DUP5 ADD DUP4 ADD SWAP1 SWAP5 MSTORE DUP4 DUP4 MSTORE SWAP5 SWAP9 POP SWAP1 SWAP4 SWAP3 POP DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xDE6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDBB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDE6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDC9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP5 MLOAD PUSH1 0x2 SWAP5 DUP3 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP4 SWAP1 DIV DUP4 MUL DUP5 ADD DUP4 ADD SWAP1 SWAP5 MSTORE DUP4 DUP4 MSTORE SWAP5 SWAP8 POP SWAP1 SWAP4 SWAP3 POP DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xE8D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE62 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE8D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE70 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP9 SWAP1 SWAP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP7 SWAP9 SWAP6 SWAP8 POP SWAP4 SWAP6 SWAP3 SWAP5 PUSH1 0xFF SWAP1 SWAP4 AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 ADD SLOAD DUP4 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO EQ PUSH2 0xEF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD PUSH2 0xA26 SWAP3 PUSH1 0x4 SWAP1 SWAP3 ADD SWAP2 DUP6 ADD SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD DUP8 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xF4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xF74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP13 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP10 MLOAD PUSH2 0xFE7 SWAP3 DUP12 ADD SWAP1 PUSH2 0x126D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP10 MLOAD PUSH2 0x1017 SWAP4 SWAP2 SWAP1 SWAP3 ADD SWAP2 SWAP1 DUP11 ADD SWAP1 PUSH2 0x126D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP8 MLOAD PUSH2 0x1047 SWAP3 PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 DUP10 ADD SWAP1 PUSH2 0x126D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP7 MLOAD PUSH2 0x1077 SWAP3 PUSH1 0x3 SWAP1 SWAP3 ADD SWAP2 DUP9 ADD SWAP1 PUSH2 0x126D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP6 MLOAD PUSH2 0x10A7 SWAP3 PUSH1 0x4 SWAP1 SWAP3 ADD SWAP2 DUP8 ADD SWAP1 PUSH2 0x126D JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP7 ISZERO ISZERO SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP6 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x10F7 JUMPI POP PUSH2 0x10F7 PUSH2 0x1267 JUMP JUMPDEST DUP1 PUSH2 0x1105 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x115A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x130F PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1185 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE PUSH1 0xC DUP1 DUP5 MSTORE PUSH32 0x466972737420456E746974790000000000000000000000000000000000000000 SWAP4 SWAP1 SWAP2 ADD SWAP3 DUP4 MSTORE SWAP1 SWAP2 PUSH2 0x11F4 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x126D JUMP JUMPDEST POP POP DUP1 ISZERO PUSH2 0x1208 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 ADD SLOAD DUP4 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO EQ PUSH2 0x123E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD PUSH2 0xA26 SWAP3 DUP6 ADD SWAP1 PUSH2 0x126D JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x12A3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x12E9 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x12BC JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x12E9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x12E9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x12E9 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x12CE JUMP JUMPDEST POP PUSH2 0x12F5 SWAP3 SWAP2 POP PUSH2 0x12F9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x12F5 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x12FA JUMP INVALID 0x49 PUSH15 0x697469616C697A61626C653A20636F PUSH15 0x747261637420697320616C72656164 PUSH26 0x20696E697469616C697A6564A2646970667358221220C304DEAA 0xE8 0xB4 SWAP6 0xBF 0xE2 MOD POP 0x2F 0x2B 0xCD SWAP13 PUSH27 0x761D926DD5365DB49F4B2EA64B0DEE7264736F6C63430007060033 ",
              "sourceMap": "224:5431:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3157:177;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3157:177:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3157:177:0;;-1:-1:-1;3157:177:0;;-1:-1:-1;;;;;3157:177:0:i;:::-;;2734:164;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2734:164:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2734:164:0;;-1:-1:-1;2734:164:0;;-1:-1:-1;;;;;2734:164:0:i;3612:197::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3612:197:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3612:197:0;;-1:-1:-1;3612:197:0;;-1:-1:-1;;;;;3612:197:0:i;5560:93::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4861:551;;;;;;;;;;;;;;;;-1:-1:-1;4861:551:0;-1:-1:-1;;;;;4861:551:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4861:551:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4861:551:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4861:551:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4861:551:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4065:173;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4065:173:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4065:173:0;;-1:-1:-1;4065:173:0;;-1:-1:-1;;;;;4065:173:0:i;1530:617::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1530:617:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1530:617:0;;;;;;;;-1:-1:-1;1530:617:0;;-1:-1:-1;;1530:617:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1530:617:0;;;;;;;;-1:-1:-1;1530:617:0;;-1:-1:-1;;1530:617:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1530:617:0;;;;;;;;-1:-1:-1;1530:617:0;;-1:-1:-1;;1530:617:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1530:617:0;;;;;;;;-1:-1:-1;1530:617:0;;-1:-1:-1;;1530:617:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1530:617:0;;-1:-1:-1;;;;1530:617:0;;;;-1:-1:-1;1530:617:0;:::i;785:214::-;;;;;;;;;;;;;;;;-1:-1:-1;785:214:0;-1:-1:-1;;;;;785:214:0;;:::i;2358:168::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2358:168:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2358:168:0;;-1:-1:-1;2358:168:0;;-1:-1:-1;;;;;2358:168:0:i;3157:177::-;-1:-1:-1;;;;;612:25:0;;;;;;:8;:25;;;;;;;;:32;;;3260:14;;612:32;;;;:40;;;604:49;;;;;;-1:-1:-1;;;;;3284:24:0;::::1;;::::0;;;:8:::1;:24;::::0;;;;;;;:45;;::::1;::::0;:33:::1;::::0;;::::1;::::0;:45;::::1;::::0;::::1;:::i;:::-;;3157:177:::0;;;:::o;2734:164::-;-1:-1:-1;;;;;612:25:0;;;;;;:8;:25;;;;;;;;:32;;;2834:14;;612:32;;;;:40;;;604:49;;;;;;-1:-1:-1;;;;;2858:24:0;::::1;;::::0;;;:8:::1;:24;::::0;;;;;;;:35;;::::1;::::0;:28;;;::::1;::::0;:35;;::::1;::::0;::::1;:::i;3612:197::-:0;-1:-1:-1;;;;;612:25:0;;;;;;:8;:25;;;;;;;;:32;;;3725:14;;612:32;;;;:40;;;604:49;;;;;;-1:-1:-1;;;;;3749:24:0;::::1;;::::0;;;:8:::1;:24;::::0;;;;;;;:55;;::::1;::::0;:38:::1;::::0;;::::1;::::0;:55;::::1;::::0;::::1;:::i;5560:93::-:0;5605:16;5636:12;5629:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5629:19:0;;;;;;;;;;;;;;;;;;;;;;;5560:93;:::o;4861:551::-;-1:-1:-1;;;;;5129:24:0;;5094:12;5129:24;;;:8;:24;;;;;;;;5121:37;;;;;;;;;;;-1:-1:-1;;5121:37:0;;;;;;;;;;;;;;;;;;;;;;;;;;4944:19;;;;;;;;;;5129:24;5121:37;;5129:24;5121:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;5171:24:0;;;;;;:8;:24;;;;;;;;;:28;;5164:35;;;;;;;;;;;-1:-1:-1;;5164:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;5121:37;;-1:-1:-1;5164:35:0;;5171:28;-1:-1:-1;5164:35:0;;5171:28;5164:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;5217:24:0;;;;;;:8;:24;;;;;;;;;:33;;;;5205:45;;;;;;;;;;-1:-1:-1;;5205:45:0;;;;;;;;;;;;;;;;;;;;;;;;5164:35;;-1:-1:-1;5205:45:0;;5217:33;-1:-1:-1;5205:45:0;;5217:33;5205:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;5273:24:0;;;;;;:8;:24;;;;;;;;;:38;;5256:55;;;;;;;;;;;-1:-1:-1;;5256:55:0;;;;;;;;;;;;;;;;;;;;;;;;;;5205:45;;-1:-1:-1;5256:55:0;;5273:38;-1:-1:-1;5256:55:0;;5273:38;5256:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;5328:24:0;;;;;;:8;:24;;;;;;;;;:32;;5317:43;;;;;;;;;;;-1:-1:-1;;5317:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;5256:55;;-1:-1:-1;5317:43:0;;5328:32;-1:-1:-1;5317:43:0;;5328:32;5317:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;5376:24:0;;;;;;;;:8;:24;;;;;:31;;;4861:551;;;;-1:-1:-1;4861:551:0;;;;5376:31;;;;;4861:551;-1:-1:-1;;4861:551:0:o;4065:173::-;-1:-1:-1;;;;;612:25:0;;;;;;:8;:25;;;;;;;;:32;;;4166:14;;612:32;;;;:40;;;604:49;;;;;;-1:-1:-1;;;;;4190:24:0;::::1;;::::0;;;:8:::1;:24;::::0;;;;;;;:43;;::::1;::::0;:32:::1;::::0;;::::1;::::0;:43;::::1;::::0;::::1;:::i;1530:617::-:0;-1:-1:-1;;;;;736:25:0;;;;;;:8;:25;;;;;:32;;;1764:14;;736:32;;735:33;727:42;;;;;;1799:10:::1;612:25;::::0;;;:8:::1;:25;::::0;;;;;;;:32:::1;;::::0;::::1;;:40;;;604:49;;;::::0;::::1;;1817:12:::2;:33:::0;;::::2;::::0;;::::2;::::0;;;;::::2;::::0;;-1:-1:-1;;1817:33:0::2;-1:-1:-1::0;;;;;1817:33:0;::::2;::::0;;::::2;::::0;;;-1:-1:-1;1856:24:0;;;1817:33:::2;1856:24:::0;;;;;;:37;;::::2;::::0;;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;;;;;;1899:24:0;::::2;;::::0;;;:8:::2;:24;::::0;;;;;;;:35;;::::2;::::0;:28;;;::::2;::::0;:35;;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;;;;;;1940:24:0;::::2;;::::0;;;:8:::2;:24;::::0;;;;;;;:45;;::::2;::::0;:33:::2;::::0;;::::2;::::0;:45;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;;;;;;1991:24:0;::::2;;::::0;;;:8:::2;:24;::::0;;;;;;;:55;;::::2;::::0;:38:::2;::::0;;::::2;::::0;:55;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;;;;;;2052:24:0;::::2;;::::0;;;:8:::2;:24;::::0;;;;;;;:43;;::::2;::::0;:32:::2;::::0;;::::2;::::0;:43;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;;;;;;;;2101:24:0;;;::::2;;::::0;;;:8:::2;:24;::::0;;;;:31:::2;;:41:::0;;-1:-1:-1;;2101:41:0::2;::::0;::::2;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;1530:617:0:o;785:214::-;1472:13:7;;;;;;;;:33;;;1489:16;:14;:16::i;:::-;1472:50;;;-1:-1:-1;1510:12:7;;;;1509:13;1472:50;1464:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1584:19;1607:13;;;;;;1606:14;1630:98;;;;1664:13;:20;;-1:-1:-1;;;;1664:20:7;;;;;1698:19;1680:4;1698:19;;;1630:98;-1:-1:-1;;;;;894:24:0;::::1;854:37;894:24:::0;;;:8:::1;:24;::::0;;;;;;;;924:21:::1;::::0;::::1;:28:::0;;-1:-1:-1;;924:28:0::1;::::0;;::::1;::::0;;;958:36;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;894:24;;958:36:::1;::::0;894:24;;958:36;::::1;:::i;:::-;;1738:1:7;1754:14:::0;1750:66;;;1800:5;1784:21;;-1:-1:-1;;1784:21:7;;;1750:66;785:214:0;;:::o;2358:168::-;-1:-1:-1;;;;;612:25:0;;;;;;:8;:25;;;;;;;;:32;;;2460:14;;612:32;;;;:40;;;604:49;;;;;;-1:-1:-1;;;;;2484:24:0;::::1;;::::0;;;:8:::1;:24;::::0;;;;;;;:37;;::::1;::::0;;::::1;::::0;::::1;:::i;1912:593:7:-:0;2348:4;2456:17;2491:7;1912:593;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "addEntity(address,string,string,string,string,string,bool)": "c4c02333",
              "entitiesList()": "6e7a216b",
              "getEntity(address)": "75894e8c",
              "initialize(address)": "c4d66de8",
              "setCifEntity(address,string)": "1e5f6f01",
              "setNameEntity(address,string)": "eb5c426c",
              "setUrlAOA(address,string)": "8e672cf7",
              "setUrlCreateAID(address,string)": "4b7a1859",
              "setUrlLogo(address,string)": "0ff72ef2"
            }
          }
        },
        "IAidEntity": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_firstIdentity",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "initialize(address)": "c4d66de8"
            }
          }
        }
      },
      "contracts/identityManager/AlastriaIdentityIssuer.sol": {
        "AlastriaIdentityIssuer": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_identityIssuer",
                  "type": "address"
                },
                {
                  "internalType": "enum Eidas.EidasLevel",
                  "name": "_level",
                  "type": "uint8"
                }
              ],
              "name": "addIdentityIssuer",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_identityIssuer",
                  "type": "address"
                }
              ],
              "name": "deleteIdentityIssuer",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_identityIssuer",
                  "type": "address"
                }
              ],
              "name": "getEidasLevel",
              "outputs": [
                {
                  "internalType": "enum Eidas.EidasLevel",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_firstIdentity",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_identityIssuer",
                  "type": "address"
                }
              ],
              "name": "isIdentityIssuer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_identityIssuer",
                  "type": "address"
                },
                {
                  "internalType": "enum Eidas.EidasLevel",
                  "name": "_level",
                  "type": "uint8"
                }
              ],
              "name": "updateIdentityIssuerEidasLevel",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {
                "contracts/libs/Eidas.sol": {
                  "Eidas": [
                    {
                      "length": 20,
                      "start": 484
                    },
                    {
                      "length": 20,
                      "start": 778
                    }
                  ]
                }
              },
              "object": "608060405234801561001057600080fd5b506105b1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100655760e060020a60003504630e5a4fbb811461006a57806344963610146100b15780636554adf0146100e2578063889776a81461011c578063c4d66de81461014b578063cb69159914610171575b600080fd5b6100906004803603602081101561008057600080fd5b5035600160a060020a0316610197565b604051808260048111156100a057fe5b815260200191505060405180910390f35b6100e0600480360360408110156100c757600080fd5b508035600160a060020a0316906020013560ff166101b5565b005b610108600480360360208110156100f857600080fd5b5035600160a060020a03166102b8565b604080519115158252519081900360200190f35b6100e06004803603604081101561013257600080fd5b508035600160a060020a0316906020013560ff166102db565b6100e06004803603602081101561016157600080fd5b5035600160a060020a0316610418565b6100e06004803603602081101561018757600080fd5b5035600160a060020a0316610503565b600160a060020a031660009081526001602052604090205460ff1690565b808060048111156101c257fe5b73__$b5d371e22ff22cab27859fc31c8dd39ea9$__630fa78bf790916040518263ffffffff1660e060020a0281526004018082600481111561020057fe5b815260200191505060206040518083038186803b15801561022057600080fd5b505af4158015610234573d6000803e3d6000fd5b505050506040513d602081101561024a57600080fd5b505161025557600080fd5b33600081815260016020526040902054610100900460ff1661027657600080fd5b600160a060020a0384166000908152600160208190526040909120805490918591839160ff19909116908360048111156102ac57fe5b02179055505050505050565b600160a060020a0316600090815260016020526040902054610100900460ff1690565b808060048111156102e857fe5b73__$b5d371e22ff22cab27859fc31c8dd39ea9$__630fa78bf790916040518263ffffffff1660e060020a0281526004018082600481111561032657fe5b815260200191505060206040518083038186803b15801561034657600080fd5b505af415801561035a573d6000803e3d6000fd5b505050506040513d602081101561037057600080fd5b505161037b57600080fd5b600160a060020a0383166000908152600160205260409020548390610100900460ff16156103a857600080fd5b33600081815260016020526040902054610100900460ff166103c957600080fd5b600160a060020a0385166000908152600160208190526040909120805490918691839160ff19909116908360048111156103ff57fe5b0217905550805461ff0019166101001790555050505050565b600054610100900460ff16806104315750610431610547565b8061043f575060005460ff16155b610494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061054e602e913960400191505060405180910390fd5b600054610100900460ff161580156104bf576000805460ff1961ff0019909116610100171660011790555b600160a060020a03821660009081526001602052604090208054600460ff199091161761ff00191661010017905580156104ff576000805461ff00191690555b5050565b33600081815260016020526040902054610100900460ff1661052457600080fd5b50600160a060020a03166000908152600160205260409020805461ffff19169055565b303b159056fe496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a2646970667358221220e695e1da8d50c19223e0962954b9af891facea6f6240fe69cd328f049f5060c164736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B1 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x65 JUMPI PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV PUSH4 0xE5A4FBB DUP2 EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0x44963610 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x6554ADF0 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x889776A8 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0xCB691599 EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x197 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA0 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0xFF AND PUSH2 0x1B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0xFF AND PUSH2 0x2DB JUMP JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x418 JUMP JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x503 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1C2 JUMPI INVALID JUMPDEST PUSH20 0x0 PUSH4 0xFA78BF7 SWAP1 SWAP2 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x200 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x234 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP6 SWAP2 DUP4 SWAP2 PUSH1 0xFF NOT SWAP1 SWAP2 AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2AC JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2E8 JUMPI INVALID JUMPDEST PUSH20 0x0 PUSH4 0xFA78BF7 SWAP1 SWAP2 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x326 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x35A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP7 SWAP2 DUP4 SWAP2 PUSH1 0xFF NOT SWAP1 SWAP2 AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3FF JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x431 JUMPI POP PUSH2 0x431 PUSH2 0x547 JUMP JUMPDEST DUP1 PUSH2 0x43F JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x494 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x54E PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x4 PUSH1 0xFF NOT SWAP1 SWAP2 AND OR PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP INVALID 0x49 PUSH15 0x697469616C697A61626C653A20636F PUSH15 0x747261637420697320616C72656164 PUSH26 0x20696E697469616C697A6564A2646970667358221220E695E1DA DUP14 POP 0xC1 SWAP3 0x23 0xE0 SWAP7 0x29 SLOAD 0xB9 0xAF DUP10 0x1F 0xAC 0xEA PUSH16 0x6240FE69CD328F049F5060C164736F6C PUSH4 0x43000706 STOP CALLER ",
              "sourceMap": "308:1907:1:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {
                "contracts/libs/Eidas.sol": {
                  "Eidas": [
                    {
                      "length": 20,
                      "start": 452
                    },
                    {
                      "length": 20,
                      "start": 746
                    }
                  ]
                }
              },
              "object": "608060405234801561001057600080fd5b50600436106100655760e060020a60003504630e5a4fbb811461006a57806344963610146100b15780636554adf0146100e2578063889776a81461011c578063c4d66de81461014b578063cb69159914610171575b600080fd5b6100906004803603602081101561008057600080fd5b5035600160a060020a0316610197565b604051808260048111156100a057fe5b815260200191505060405180910390f35b6100e0600480360360408110156100c757600080fd5b508035600160a060020a0316906020013560ff166101b5565b005b610108600480360360208110156100f857600080fd5b5035600160a060020a03166102b8565b604080519115158252519081900360200190f35b6100e06004803603604081101561013257600080fd5b508035600160a060020a0316906020013560ff166102db565b6100e06004803603602081101561016157600080fd5b5035600160a060020a0316610418565b6100e06004803603602081101561018757600080fd5b5035600160a060020a0316610503565b600160a060020a031660009081526001602052604090205460ff1690565b808060048111156101c257fe5b73__$b5d371e22ff22cab27859fc31c8dd39ea9$__630fa78bf790916040518263ffffffff1660e060020a0281526004018082600481111561020057fe5b815260200191505060206040518083038186803b15801561022057600080fd5b505af4158015610234573d6000803e3d6000fd5b505050506040513d602081101561024a57600080fd5b505161025557600080fd5b33600081815260016020526040902054610100900460ff1661027657600080fd5b600160a060020a0384166000908152600160208190526040909120805490918591839160ff19909116908360048111156102ac57fe5b02179055505050505050565b600160a060020a0316600090815260016020526040902054610100900460ff1690565b808060048111156102e857fe5b73__$b5d371e22ff22cab27859fc31c8dd39ea9$__630fa78bf790916040518263ffffffff1660e060020a0281526004018082600481111561032657fe5b815260200191505060206040518083038186803b15801561034657600080fd5b505af415801561035a573d6000803e3d6000fd5b505050506040513d602081101561037057600080fd5b505161037b57600080fd5b600160a060020a0383166000908152600160205260409020548390610100900460ff16156103a857600080fd5b33600081815260016020526040902054610100900460ff166103c957600080fd5b600160a060020a0385166000908152600160208190526040909120805490918691839160ff19909116908360048111156103ff57fe5b0217905550805461ff0019166101001790555050505050565b600054610100900460ff16806104315750610431610547565b8061043f575060005460ff16155b610494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061054e602e913960400191505060405180910390fd5b600054610100900460ff161580156104bf576000805460ff1961ff0019909116610100171660011790555b600160a060020a03821660009081526001602052604090208054600460ff199091161761ff00191661010017905580156104ff576000805461ff00191690555b5050565b33600081815260016020526040902054610100900460ff1661052457600080fd5b50600160a060020a03166000908152600160205260409020805461ffff19169055565b303b159056fe496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a2646970667358221220e695e1da8d50c19223e0962954b9af891facea6f6240fe69cd328f049f5060c164736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x65 JUMPI PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV PUSH4 0xE5A4FBB DUP2 EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0x44963610 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x6554ADF0 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x889776A8 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0xCB691599 EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x197 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA0 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0xFF AND PUSH2 0x1B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0xFF AND PUSH2 0x2DB JUMP JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x418 JUMP JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x503 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1C2 JUMPI INVALID JUMPDEST PUSH20 0x0 PUSH4 0xFA78BF7 SWAP1 SWAP2 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x200 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x234 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP6 SWAP2 DUP4 SWAP2 PUSH1 0xFF NOT SWAP1 SWAP2 AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2AC JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2E8 JUMPI INVALID JUMPDEST PUSH20 0x0 PUSH4 0xFA78BF7 SWAP1 SWAP2 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x326 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x35A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP7 SWAP2 DUP4 SWAP2 PUSH1 0xFF NOT SWAP1 SWAP2 AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3FF JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x431 JUMPI POP PUSH2 0x431 PUSH2 0x547 JUMP JUMPDEST DUP1 PUSH2 0x43F JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x494 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x54E PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x4 PUSH1 0xFF NOT SWAP1 SWAP2 AND OR PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP INVALID 0x49 PUSH15 0x697469616C697A61626C653A20636F PUSH15 0x747261637420697320616C72656164 PUSH26 0x20696E697469616C697A6564A2646970667358221220E695E1DA DUP14 POP 0xC1 SWAP3 0x23 0xE0 SWAP7 0x29 SLOAD 0xB9 0xAF DUP10 0x1F 0xAC 0xEA PUSH16 0x6240FE69CD328F049F5060C164736F6C PUSH4 0x43000706 STOP CALLER ",
              "sourceMap": "308:1907:1:-:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;308:1907:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1947:135;;;;;;;;;;;;;;;;-1:-1:-1;1947:135:1;-1:-1:-1;;;;;1947:135:1;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1415:271;;;;;;;;;;;;;;;;-1:-1:-1;1415:271:1;;-1:-1:-1;;;;;1415:271:1;;;;;;;;:::i;:::-;;2086:127;;;;;;;;;;;;;;;;-1:-1:-1;2086:127:1;-1:-1:-1;;;;;2086:127:1;;:::i;:::-;;;;;;;;;;;;;;;;;;1080:331;;;;;;;;;;;;;;;;-1:-1:-1;1080:331:1;;-1:-1:-1;;;;;1080:331:1;;;;;;;;:::i;855:221::-;;;;;;;;;;;;;;;;-1:-1:-1;855:221:1;-1:-1:-1;;;;;855:221:1;;:::i;1690:253::-;;;;;;;;;;;;;;;;-1:-1:-1;1690:253:1;-1:-1:-1;;;;;1690:253:1;;:::i;1947:135::-;-1:-1:-1;;;;;2047:24:1;2016:16;2047:24;;;:7;:24;;;;;:30;;;;1947:135::o;1415:271::-;1531:6;819;:17;;;;;;;;;;;;:19;;;;;-1:-1:-1;;;819:19:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;819:19:1;811:28;;;;;;1562:10:::1;597:24;::::0;;;:7:::1;:24;::::0;;;;:31;::::1;::::0;::::1;;;589:40;;;::::0;::::1;;-1:-1:-1::0;;;;;1622:24:1;::::2;1582:37;1622:24:::0;;;:7:::2;:24;::::0;;;;;;;1652:29;;1622:24;;1675:6;;1622:24;;-1:-1:-1;;1652:29:1;;::::2;::::0;1675:6;1652:29:::2;::::0;::::2;;;;;;;;;;;635:1;845::::1;1415:271:::0;;;:::o;2086:127::-;-1:-1:-1;;;;;2177:24:1;2158:4;2177:24;;;:7;:24;;;;;:31;;;;;;;2086:127::o;1080:331::-;1183:6;819;:17;;;;;;;;;;;;:19;;;;;-1:-1:-1;;;819:19:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;819:19:1;811:28;;;;;;-1:-1:-1;;;;;712:24:1;::::1;;::::0;;;:7:::1;:24;::::0;;;;:31;:24;;:31:::1;::::0;::::1;;;711:32;703:41;;;::::0;::::1;;1253:10:::2;597:24;::::0;;;:7:::2;:24;::::0;;;;:31;::::2;::::0;::::2;;;589:40;;;::::0;::::2;;-1:-1:-1::0;;;;;1313:24:1;::::3;1273:37;1313:24:::0;;;:7:::3;:24;::::0;;;;;;;1343:29;;1313:24;;1366:6;;1313:24;;-1:-1:-1;;1343:29:1;;::::3;::::0;1366:6;1343:29:::3;::::0;::::3;;;;;;;;::::0;;-1:-1:-1;1378:28:1;;-1:-1:-1;;1378:28:1::3;;;::::0;;-1:-1:-1;;;;;1080:331:1:o;855:221::-;1472:13:7;;;;;;;;:33;;;1489:16;:14;:16::i;:::-;1472:50;;;-1:-1:-1;1510:12:7;;;;1509:13;1472:50;1464:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1584:19;1607:13;;;;;;1606:14;1630:98;;;;1664:13;:20;;-1:-1:-1;;;;1664:20:7;;;;;1698:19;1680:4;1698:19;;;1630:98;-1:-1:-1;;;;;964:23:1;::::1;924:37;964:23:::0;;;:7:::1;:23;::::0;;;;993:44;;1016:21:::1;-1:-1:-1::0;;993:44:1;;::::1;;-1:-1:-1::0;;1043:28:1::1;;;::::0;;1750:66:7;;;;1800:5;1784:21;;-1:-1:-1;;1784:21:7;;;1750:66;855:221:1;;:::o;1690:253::-;1771:10;597:24;;;;:7;:24;;;;;:31;;;;;;589:40;;;;;;-1:-1:-1;;;;;;1829:24:1::1;1789:37;1829:24:::0;;;:7:::1;:24;::::0;;;;1859:44;;-1:-1:-1;;1909:29:1;;;1690:253::o;1912:593:7:-;2348:4;2456:17;2491:7;1912:593;:::o"
            },
            "methodIdentifiers": {
              "addIdentityIssuer(address,uint8)": "889776a8",
              "deleteIdentityIssuer(address)": "cb691599",
              "getEidasLevel(address)": "0e5a4fbb",
              "initialize(address)": "c4d66de8",
              "isIdentityIssuer(address)": "6554adf0",
              "updateIdentityIssuerEidasLevel(address,uint8)": "44963610"
            }
          }
        },
        "IAidIssuer": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_firstIdentity",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_identityIssuer",
                  "type": "address"
                }
              ],
              "name": "isIdentityIssuer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "initialize(address)": "c4d66de8",
              "isIdentityIssuer(address)": "6554adf0"
            }
          }
        }
      },
      "contracts/identityManager/AlastriaIdentityManager.sol": {
        "AlastriaIdentityManager": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "identity",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "creator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "IdentityCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "oldAccount",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "newAccount",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "serviceProvider",
                  "type": "address"
                }
              ],
              "name": "IdentityRecovered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "string",
                  "name": "method",
                  "type": "string"
                }
              ],
              "name": "OperationWasNotSupported",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "signAddress",
                  "type": "address"
                }
              ],
              "name": "PreparedAlastriaID",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "addPublicKeyCallData",
                  "type": "bytes"
                }
              ],
              "name": "createAlastriaIdentity",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_destination",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "_data",
                  "type": "bytes"
                }
              ],
              "name": "delegateCall",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "identityKeys",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_aidEntity",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_aidIssuer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_aidServiceProvider",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_credentialRegistry",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_presentationRegistry",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_publicKeyRegistry",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "pendingIDs",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_signAddress",
                  "type": "address"
                }
              ],
              "name": "prepareAlastriaID",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "accountLost",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "newAccount",
                  "type": "address"
                }
              ],
              "name": "recoverAccount",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50611463806100206000396000f3fe608060405234801561001057600080fd5b506004361061007b5760e060020a60003504630c91465e81146100805780632773d0fa146100c257806345748b42146100fa57806354fd4d5014610122578063597b2e9b1461012a5780636d69d99a1461025a578063c71cbcf314610300578063cc2a9a5b1461032e575b600080fd5b6100a66004803603602081101561009657600080fd5b5035600160a060020a031661037c565b60408051600160a060020a039092168252519081900360200190f35b6100e8600480360360208110156100d857600080fd5b5035600160a060020a0316610397565b60408051918252519081900360200190f35b6101206004803603602081101561011057600080fd5b5035600160a060020a03166103a9565b005b6100e86104bf565b6101e56004803603606081101561014057600080fd5b600160a060020a038235169160208101359181019060608101604082013564010000000081111561017057600080fd5b82018360208201111561018257600080fd5b803590602001918460018302840111640100000000831117156101a457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506104c5945050505050565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561021f578181015183820152602001610207565b50505050905090810190601f16801561024c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101206004803603602081101561027057600080fd5b81019060208101813564010000000081111561028b57600080fd5b82018360208201111561029d57600080fd5b803590602001918460018302840111640100000000831117156102bf57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506106b9945050505050565b6101206004803603604081101561031657600080fd5b50600160a060020a0381358116916020013516610919565b610120600480360360c081101561034457600080fd5b50600160a060020a038135811691602081013582169160408201358116916060810135821691608082013581169160a0013516610a66565b600660205260009081526040902054600160a060020a031681565b60076020526000908152604090205481565b6005546040805160e460020a6306554adf0281523360048201529051600160a060020a0390921691636554adf091602480820192602092909190829003018186803b1580156103f757600080fd5b505afa15801561040b573d6000803e3d6000fd5b505050506040513d602081101561042157600080fd5b5051610477576040805160e560020a62461bcd02815260206004820152601860248201527f4f6e6c7920697373756572732061726520616c6c6f7765640000000000000000604482015290519081900360640190fd5b600160a060020a03811660008181526007602052604080822042612710019055517fb95ece7391a260096614d2b042c6cca83dcc5d131f72bc57a157ee2502e7ce539190a250565b60015481565b33600090815260066020526040902054606090600160a060020a03166104ea57600080fd5b33600090815260066020908152604080832054905160e060020a63d7f31eb9028152600160a060020a038881166004830190815260248301899052606060448401908152885160648501528851929094169594869463d7f31eb9948c948c948c9490939260840191908501908083838d5b8381101561057357818101518382015260200161055b565b50505050905090810190601f1680156105a05780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1580156105c157600080fd5b505af11580156105d5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156105fe57600080fd5b810190808051604051939291908464010000000082111561061e57600080fd5b90830190602082018581111561063357600080fd5b825164010000000081118282018810171561064d57600080fd5b82525081516020918201929091019080838360005b8381101561067a578181015183820152602001610662565b50505050905090810190601f1680156106a75780820380516001836020036101000a031916815260200191505b50604052509198975050505050505050565b33806106c457600080fd5b33600081815260076020526040902054158015906106f95750600160a060020a03811660009081526007602052604090205442105b61070257600080fd5b600060405161071090610d03565b604051809103906000f08015801561072c573d6000803e3d6000fd5b503360009081526006602090815260408083208054600160a060020a031916600160a060020a038681169182179092556007845282852085905560048054935160e060020a63d7f31eb902815293909216918301828152602484018690526060604485019081528b5160648601528b51979850919663d7f31eb996939593948c9492939260849091019190850190808383895b838110156107d75781810151838201526020016107bf565b50505050905090810190601f1680156108045780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b15801561082557600080fd5b505af1158015610839573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561086257600080fd5b810190808051604051939291908464010000000082111561088257600080fd5b90830190602082018581111561089757600080fd5b82516401000000008111828201881017156108b157600080fd5b82525081516020918201929091019080838360005b838110156108de5781810151838201526020016108c6565b50505050905090810190601f16801561090b5780820380516001836020036101000a031916815260200191505b506040525050505050505050565b6005546040805160e460020a6306554adf0281523360048201529051600160a060020a0390921691636554adf091602480820192602092909190829003018186803b15801561096757600080fd5b505afa15801561097b573d6000803e3d6000fd5b505050506040513d602081101561099157600080fd5b50516109e7576040805160e560020a62461bcd02815260206004820152601860248201527f4f6e6c7920697373756572732061726520616c6c6f7765640000000000000000604482015290519081900360640190fd5b600160a060020a0382811660008181526006602090815260408083208054878716808652838620805492909816600160a060020a0319928316179097559385905280549093169092558151938452905133937ff5cf2e915faa705d003410f0f65cd59606d22f8e7fb7361a015d6a00b7723d9992908290030190a35050565b600054610100900460ff1680610a7f5750610a7f610cfd565b80610a8d575060005460ff16155b610acb5760405160e560020a62461bcd02815260040180806020018281038252602e815260200180611400602e913960400191505060405180910390fd5b600054610100900460ff16158015610af6576000805460ff1961ff0019909116610100171660011790555b60028054600160a060020a03808716600160a060020a031992831617909255600380548684169083161790556004805492851692909116919091179055604051600090610b4290610d03565b604051809103906000f080158015610b5e573d6000803e3d6000fd5b50336000908152600660205260408082208054600160a060020a0319908116600160a060020a03868116918217909355600580549092168d8416179182905583517fc4d66de800000000000000000000000000000000000000000000000000000000815260048101919091529251949550169263c4d66de89260248084019391929182900301818387803b158015610bf557600080fd5b505af1158015610c09573d6000803e3d6000fd5b5050505085600160a060020a031663c4d66de8826040518263ffffffff1660e060020a0281526004018082600160a060020a03168152602001915050600060405180830381600087803b158015610c5f57600080fd5b505af1158015610c73573d6000803e3d6000fd5b5050505087600160a060020a031663c4d66de8826040518263ffffffff1660e060020a0281526004018082600160a060020a03168152602001915050600060405180830381600087803b158015610cc957600080fd5b505af1158015610cdd573d6000803e3d6000fd5b50505050508015610cf4576000805461ff00191690555b50505050505050565b303b1590565b6106ef80610d118339019056fe608060405234801561001057600080fd5b506000610024640100000000610073810204565b60008054600160a060020a031916600160a060020a0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610077565b3390565b610669806100866000396000f3fe608060405234801561001057600080fd5b5060043610610068577c01000000000000000000000000000000000000000000000000000000006000350463715018a6811461006d5780638da5cb5b14610077578063d7f31eb91461009b578063f2fde38b146101cb575b600080fd5b6100756101f1565b005b61007f6102a3565b60408051600160a060020a039092168252519081900360200190f35b610156600480360360608110156100b157600080fd5b600160a060020a03823516916020810135918101906060810160408201356401000000008111156100e157600080fd5b8201836020820111156100f357600080fd5b8035906020019184600183028401116401000000008311171561011557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506102b2945050505050565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610190578181015183820152602001610178565b50505050905090810190601f1680156101bd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610075600480360360208110156101e157600080fd5b5035600160a060020a03166104de565b6101f96105e9565b600054600160a060020a0390811691161461024c576040805160e560020a62461bcd0281526020600482018190526024820152600080516020610614833981519152604482015290519081900360640190fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031690565b60606102bc6105e9565b600054600160a060020a0390811691161461030f576040805160e560020a62461bcd0281526020600482018190526024820152600080516020610614833981519152604482015290519081900360640190fd5b60008085600160a060020a031685856040518082805190602001908083835b6020831061034d5780518252601f19909201916020918201910161032e565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146103af576040519150601f19603f3d011682016040523d82523d6000602084013e6103b4565b606091505b5091509150816103c357600080fd5b85600160a060020a03167f8cd7411f6d2d65dd25e1b8e9e19f9b5b720c01622c9e25049b72837b1bbc1743868684604051808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610438578181015183820152602001610420565b50505050905090810190601f1680156104655780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015610498578181015183820152602001610480565b50505050905090810190601f1680156104c55780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a295945050505050565b6104e66105e9565b600054600160a060020a03908116911614610539576040805160e560020a62461bcd0281526020600482018190526024820152600080516020610614833981519152604482015290519081900360640190fd5b600160a060020a0381166105815760405160e560020a62461bcd0281526004018080602001828103825260268152602001806105ee6026913960400191505060405180910390fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a264697066735822122013d702fb00cf97f6aef347863ef9ada968e712c2310ed3594e593ab9dc152e8e64736f6c63430007060033496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a2646970667358221220c010ed9fb00b326e78d7230837e616d9b71e51b39752e9d220aa894815e037b364736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1463 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV PUSH4 0xC91465E DUP2 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x2773D0FA EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x45748B42 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x597B2E9B EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x6D69D99A EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xC71CBCF3 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xCC2A9A5B EQ PUSH2 0x32E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x37C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x397 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x3A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE8 PUSH2 0x4BF JUMP JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x4C5 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x207 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x24C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x6B9 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x120 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x919 JUMP JUMPDEST PUSH2 0x120 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x80 DUP3 ADD CALLDATALOAD DUP2 AND SWAP2 PUSH1 0xA0 ADD CALLDATALOAD AND PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xE4 PUSH1 0x2 EXP PUSH4 0x6554ADF MUL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x6554ADF0 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x40B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x477 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920697373756572732061726520616C6C6F7765640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 TIMESTAMP PUSH2 0x2710 ADD SWAP1 SSTORE MLOAD PUSH32 0xB95ECE7391A260096614D2B042C6CCA83DCC5D131F72BC57A157EE2502E7CE53 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0xD7F31EB9 MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x24 DUP4 ADD DUP10 SWAP1 MSTORE PUSH1 0x60 PUSH1 0x44 DUP5 ADD SWAP1 DUP2 MSTORE DUP9 MLOAD PUSH1 0x64 DUP6 ADD MSTORE DUP9 MLOAD SWAP3 SWAP1 SWAP5 AND SWAP6 SWAP5 DUP7 SWAP5 PUSH4 0xD7F31EB9 SWAP5 DUP13 SWAP5 DUP13 SWAP5 DUP13 SWAP5 SWAP1 SWAP4 SWAP3 PUSH1 0x84 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 DUP14 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x573 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x55B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x5A0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x61E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x64D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x67A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x662 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x6A7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP SWAP2 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER DUP1 PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x6F9 JUMPI POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT JUMPDEST PUSH2 0x702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x710 SWAP1 PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x72C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x7 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP6 SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP4 MLOAD PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0xD7F31EB9 MUL DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND SWAP2 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x24 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 PUSH1 0x44 DUP6 ADD SWAP1 DUP2 MSTORE DUP12 MLOAD PUSH1 0x64 DUP7 ADD MSTORE DUP12 MLOAD SWAP8 SWAP9 POP SWAP2 SWAP7 PUSH4 0xD7F31EB9 SWAP7 SWAP4 SWAP6 SWAP4 SWAP5 DUP13 SWAP5 SWAP3 SWAP4 SWAP3 PUSH1 0x84 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 DUP10 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7D7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7BF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x804 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x825 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x839 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x862 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x882 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x897 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x8B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8DE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x8C6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x90B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xE4 PUSH1 0x2 EXP PUSH4 0x6554ADF MUL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x6554ADF0 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x967 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x97B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x991 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x9E7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920697373756572732061726520616C6C6F7765640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP8 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD SWAP3 SWAP1 SWAP9 AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP8 SSTORE SWAP4 DUP6 SWAP1 MSTORE DUP1 SLOAD SWAP1 SWAP4 AND SWAP1 SWAP3 SSTORE DUP2 MLOAD SWAP4 DUP5 MSTORE SWAP1 MLOAD CALLER SWAP4 PUSH32 0xF5CF2E915FAA705D003410F0F65CD59606D22F8E7FB7361A015D6A00B7723D99 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xA7F JUMPI POP PUSH2 0xA7F PUSH2 0xCFD JUMP JUMPDEST DUP1 PUSH2 0xA8D JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xACB JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1400 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xAF6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP8 AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x3 DUP1 SLOAD DUP7 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 DUP6 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH2 0xB42 SWAP1 PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0xB5E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP4 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP1 SWAP3 AND DUP14 DUP5 AND OR SWAP2 DUP3 SWAP1 SSTORE DUP4 MLOAD PUSH32 0xC4D66DE800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 MLOAD SWAP5 SWAP6 POP AND SWAP3 PUSH4 0xC4D66DE8 SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC09 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0xC4D66DE8 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC73 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0xC4D66DE8 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCDD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP DUP1 ISZERO PUSH2 0xCF4 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x6EF DUP1 PUSH2 0xD11 DUP4 CODECOPY ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x24 PUSH5 0x100000000 PUSH2 0x73 DUP2 MUL DIV JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x77 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x669 DUP1 PUSH2 0x86 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x68 JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x715018A6 DUP2 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0xD7F31EB9 EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1CB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75 PUSH2 0x1F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7F PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x2B2 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x190 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x178 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1BD JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x24C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x614 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2BC PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x30F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x614 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x34D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x32E JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH32 0x8CD7411F6D2D65DD25E1B8E9E19F9B5B720C01622C9E25049B72837B1BBC1743 DUP7 DUP7 DUP5 PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x438 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x420 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x465 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x498 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x480 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4C5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4E6 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x539 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x614 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x581 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5EE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A264697066735822122013D7 MUL 0xFB STOP 0xCF SWAP8 0xF6 0xAE RETURN SELFBALANCE DUP7 RETURNDATACOPY 0xF9 0xAD 0xA9 PUSH9 0xE712C2310ED3594E59 GASPRICE 0xB9 0xDC ISZERO 0x2E DUP15 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER 0x49 PUSH15 0x697469616C697A61626C653A20636F PUSH15 0x747261637420697320616C72656164 PUSH26 0x20696E697469616C697A6564A2646970667358221220C010ED9F 0xB0 SIGNEXTEND ORIGIN PUSH15 0x78D7230837E616D9B71E51B39752E9 0xD2 KECCAK256 0xAA DUP10 0x48 ISZERO 0xE0 CALLDATACOPY 0xB3 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
              "sourceMap": "336:3682:2:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061007b5760e060020a60003504630c91465e81146100805780632773d0fa146100c257806345748b42146100fa57806354fd4d5014610122578063597b2e9b1461012a5780636d69d99a1461025a578063c71cbcf314610300578063cc2a9a5b1461032e575b600080fd5b6100a66004803603602081101561009657600080fd5b5035600160a060020a031661037c565b60408051600160a060020a039092168252519081900360200190f35b6100e8600480360360208110156100d857600080fd5b5035600160a060020a0316610397565b60408051918252519081900360200190f35b6101206004803603602081101561011057600080fd5b5035600160a060020a03166103a9565b005b6100e86104bf565b6101e56004803603606081101561014057600080fd5b600160a060020a038235169160208101359181019060608101604082013564010000000081111561017057600080fd5b82018360208201111561018257600080fd5b803590602001918460018302840111640100000000831117156101a457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506104c5945050505050565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561021f578181015183820152602001610207565b50505050905090810190601f16801561024c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101206004803603602081101561027057600080fd5b81019060208101813564010000000081111561028b57600080fd5b82018360208201111561029d57600080fd5b803590602001918460018302840111640100000000831117156102bf57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506106b9945050505050565b6101206004803603604081101561031657600080fd5b50600160a060020a0381358116916020013516610919565b610120600480360360c081101561034457600080fd5b50600160a060020a038135811691602081013582169160408201358116916060810135821691608082013581169160a0013516610a66565b600660205260009081526040902054600160a060020a031681565b60076020526000908152604090205481565b6005546040805160e460020a6306554adf0281523360048201529051600160a060020a0390921691636554adf091602480820192602092909190829003018186803b1580156103f757600080fd5b505afa15801561040b573d6000803e3d6000fd5b505050506040513d602081101561042157600080fd5b5051610477576040805160e560020a62461bcd02815260206004820152601860248201527f4f6e6c7920697373756572732061726520616c6c6f7765640000000000000000604482015290519081900360640190fd5b600160a060020a03811660008181526007602052604080822042612710019055517fb95ece7391a260096614d2b042c6cca83dcc5d131f72bc57a157ee2502e7ce539190a250565b60015481565b33600090815260066020526040902054606090600160a060020a03166104ea57600080fd5b33600090815260066020908152604080832054905160e060020a63d7f31eb9028152600160a060020a038881166004830190815260248301899052606060448401908152885160648501528851929094169594869463d7f31eb9948c948c948c9490939260840191908501908083838d5b8381101561057357818101518382015260200161055b565b50505050905090810190601f1680156105a05780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1580156105c157600080fd5b505af11580156105d5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156105fe57600080fd5b810190808051604051939291908464010000000082111561061e57600080fd5b90830190602082018581111561063357600080fd5b825164010000000081118282018810171561064d57600080fd5b82525081516020918201929091019080838360005b8381101561067a578181015183820152602001610662565b50505050905090810190601f1680156106a75780820380516001836020036101000a031916815260200191505b50604052509198975050505050505050565b33806106c457600080fd5b33600081815260076020526040902054158015906106f95750600160a060020a03811660009081526007602052604090205442105b61070257600080fd5b600060405161071090610d03565b604051809103906000f08015801561072c573d6000803e3d6000fd5b503360009081526006602090815260408083208054600160a060020a031916600160a060020a038681169182179092556007845282852085905560048054935160e060020a63d7f31eb902815293909216918301828152602484018690526060604485019081528b5160648601528b51979850919663d7f31eb996939593948c9492939260849091019190850190808383895b838110156107d75781810151838201526020016107bf565b50505050905090810190601f1680156108045780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b15801561082557600080fd5b505af1158015610839573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561086257600080fd5b810190808051604051939291908464010000000082111561088257600080fd5b90830190602082018581111561089757600080fd5b82516401000000008111828201881017156108b157600080fd5b82525081516020918201929091019080838360005b838110156108de5781810151838201526020016108c6565b50505050905090810190601f16801561090b5780820380516001836020036101000a031916815260200191505b506040525050505050505050565b6005546040805160e460020a6306554adf0281523360048201529051600160a060020a0390921691636554adf091602480820192602092909190829003018186803b15801561096757600080fd5b505afa15801561097b573d6000803e3d6000fd5b505050506040513d602081101561099157600080fd5b50516109e7576040805160e560020a62461bcd02815260206004820152601860248201527f4f6e6c7920697373756572732061726520616c6c6f7765640000000000000000604482015290519081900360640190fd5b600160a060020a0382811660008181526006602090815260408083208054878716808652838620805492909816600160a060020a0319928316179097559385905280549093169092558151938452905133937ff5cf2e915faa705d003410f0f65cd59606d22f8e7fb7361a015d6a00b7723d9992908290030190a35050565b600054610100900460ff1680610a7f5750610a7f610cfd565b80610a8d575060005460ff16155b610acb5760405160e560020a62461bcd02815260040180806020018281038252602e815260200180611400602e913960400191505060405180910390fd5b600054610100900460ff16158015610af6576000805460ff1961ff0019909116610100171660011790555b60028054600160a060020a03808716600160a060020a031992831617909255600380548684169083161790556004805492851692909116919091179055604051600090610b4290610d03565b604051809103906000f080158015610b5e573d6000803e3d6000fd5b50336000908152600660205260408082208054600160a060020a0319908116600160a060020a03868116918217909355600580549092168d8416179182905583517fc4d66de800000000000000000000000000000000000000000000000000000000815260048101919091529251949550169263c4d66de89260248084019391929182900301818387803b158015610bf557600080fd5b505af1158015610c09573d6000803e3d6000fd5b5050505085600160a060020a031663c4d66de8826040518263ffffffff1660e060020a0281526004018082600160a060020a03168152602001915050600060405180830381600087803b158015610c5f57600080fd5b505af1158015610c73573d6000803e3d6000fd5b5050505087600160a060020a031663c4d66de8826040518263ffffffff1660e060020a0281526004018082600160a060020a03168152602001915050600060405180830381600087803b158015610cc957600080fd5b505af1158015610cdd573d6000803e3d6000fd5b50505050508015610cf4576000805461ff00191690555b50505050505050565b303b1590565b6106ef80610d118339019056fe608060405234801561001057600080fd5b506000610024640100000000610073810204565b60008054600160a060020a031916600160a060020a0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610077565b3390565b610669806100866000396000f3fe608060405234801561001057600080fd5b5060043610610068577c01000000000000000000000000000000000000000000000000000000006000350463715018a6811461006d5780638da5cb5b14610077578063d7f31eb91461009b578063f2fde38b146101cb575b600080fd5b6100756101f1565b005b61007f6102a3565b60408051600160a060020a039092168252519081900360200190f35b610156600480360360608110156100b157600080fd5b600160a060020a03823516916020810135918101906060810160408201356401000000008111156100e157600080fd5b8201836020820111156100f357600080fd5b8035906020019184600183028401116401000000008311171561011557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506102b2945050505050565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610190578181015183820152602001610178565b50505050905090810190601f1680156101bd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610075600480360360208110156101e157600080fd5b5035600160a060020a03166104de565b6101f96105e9565b600054600160a060020a0390811691161461024c576040805160e560020a62461bcd0281526020600482018190526024820152600080516020610614833981519152604482015290519081900360640190fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031690565b60606102bc6105e9565b600054600160a060020a0390811691161461030f576040805160e560020a62461bcd0281526020600482018190526024820152600080516020610614833981519152604482015290519081900360640190fd5b60008085600160a060020a031685856040518082805190602001908083835b6020831061034d5780518252601f19909201916020918201910161032e565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146103af576040519150601f19603f3d011682016040523d82523d6000602084013e6103b4565b606091505b5091509150816103c357600080fd5b85600160a060020a03167f8cd7411f6d2d65dd25e1b8e9e19f9b5b720c01622c9e25049b72837b1bbc1743868684604051808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610438578181015183820152602001610420565b50505050905090810190601f1680156104655780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015610498578181015183820152602001610480565b50505050905090810190601f1680156104c55780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a295945050505050565b6104e66105e9565b600054600160a060020a03908116911614610539576040805160e560020a62461bcd0281526020600482018190526024820152600080516020610614833981519152604482015290519081900360640190fd5b600160a060020a0381166105815760405160e560020a62461bcd0281526004018080602001828103825260268152602001806105ee6026913960400191505060405180910390fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a264697066735822122013d702fb00cf97f6aef347863ef9ada968e712c2310ed3594e593ab9dc152e8e64736f6c63430007060033496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a2646970667358221220c010ed9fb00b326e78d7230837e616d9b71e51b39752e9d220aa894815e037b364736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV PUSH4 0xC91465E DUP2 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x2773D0FA EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x45748B42 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x597B2E9B EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x6D69D99A EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xC71CBCF3 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xCC2A9A5B EQ PUSH2 0x32E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x37C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x397 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x3A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE8 PUSH2 0x4BF JUMP JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x4C5 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x207 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x24C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x6B9 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x120 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x919 JUMP JUMPDEST PUSH2 0x120 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x80 DUP3 ADD CALLDATALOAD DUP2 AND SWAP2 PUSH1 0xA0 ADD CALLDATALOAD AND PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xE4 PUSH1 0x2 EXP PUSH4 0x6554ADF MUL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x6554ADF0 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x40B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x477 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920697373756572732061726520616C6C6F7765640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 TIMESTAMP PUSH2 0x2710 ADD SWAP1 SSTORE MLOAD PUSH32 0xB95ECE7391A260096614D2B042C6CCA83DCC5D131F72BC57A157EE2502E7CE53 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0xD7F31EB9 MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x24 DUP4 ADD DUP10 SWAP1 MSTORE PUSH1 0x60 PUSH1 0x44 DUP5 ADD SWAP1 DUP2 MSTORE DUP9 MLOAD PUSH1 0x64 DUP6 ADD MSTORE DUP9 MLOAD SWAP3 SWAP1 SWAP5 AND SWAP6 SWAP5 DUP7 SWAP5 PUSH4 0xD7F31EB9 SWAP5 DUP13 SWAP5 DUP13 SWAP5 DUP13 SWAP5 SWAP1 SWAP4 SWAP3 PUSH1 0x84 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 DUP14 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x573 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x55B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x5A0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x61E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x64D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x67A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x662 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x6A7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP SWAP2 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER DUP1 PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x6F9 JUMPI POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT JUMPDEST PUSH2 0x702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x710 SWAP1 PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x72C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x7 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP6 SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP4 MLOAD PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0xD7F31EB9 MUL DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND SWAP2 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x24 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 PUSH1 0x44 DUP6 ADD SWAP1 DUP2 MSTORE DUP12 MLOAD PUSH1 0x64 DUP7 ADD MSTORE DUP12 MLOAD SWAP8 SWAP9 POP SWAP2 SWAP7 PUSH4 0xD7F31EB9 SWAP7 SWAP4 SWAP6 SWAP4 SWAP5 DUP13 SWAP5 SWAP3 SWAP4 SWAP3 PUSH1 0x84 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 DUP10 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7D7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7BF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x804 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x825 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x839 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x862 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x882 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x897 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x8B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8DE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x8C6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x90B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xE4 PUSH1 0x2 EXP PUSH4 0x6554ADF MUL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x6554ADF0 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x967 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x97B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x991 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x9E7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920697373756572732061726520616C6C6F7765640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP8 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD SWAP3 SWAP1 SWAP9 AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP8 SSTORE SWAP4 DUP6 SWAP1 MSTORE DUP1 SLOAD SWAP1 SWAP4 AND SWAP1 SWAP3 SSTORE DUP2 MLOAD SWAP4 DUP5 MSTORE SWAP1 MLOAD CALLER SWAP4 PUSH32 0xF5CF2E915FAA705D003410F0F65CD59606D22F8E7FB7361A015D6A00B7723D99 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xA7F JUMPI POP PUSH2 0xA7F PUSH2 0xCFD JUMP JUMPDEST DUP1 PUSH2 0xA8D JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xACB JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1400 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xAF6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP8 AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x3 DUP1 SLOAD DUP7 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 DUP6 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH2 0xB42 SWAP1 PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0xB5E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP4 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP1 SWAP3 AND DUP14 DUP5 AND OR SWAP2 DUP3 SWAP1 SSTORE DUP4 MLOAD PUSH32 0xC4D66DE800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 MLOAD SWAP5 SWAP6 POP AND SWAP3 PUSH4 0xC4D66DE8 SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC09 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0xC4D66DE8 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC73 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0xC4D66DE8 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCDD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP DUP1 ISZERO PUSH2 0xCF4 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x6EF DUP1 PUSH2 0xD11 DUP4 CODECOPY ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x24 PUSH5 0x100000000 PUSH2 0x73 DUP2 MUL DIV JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x77 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x669 DUP1 PUSH2 0x86 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x68 JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x715018A6 DUP2 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0xD7F31EB9 EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1CB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75 PUSH2 0x1F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7F PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x2B2 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x190 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x178 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1BD JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x24C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x614 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2BC PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x30F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x614 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x34D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x32E JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH32 0x8CD7411F6D2D65DD25E1B8E9E19F9B5B720C01622C9E25049B72837B1BBC1743 DUP7 DUP7 DUP5 PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x438 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x420 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x465 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x498 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x480 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4C5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4E6 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x539 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x614 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x581 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5EE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A264697066735822122013D7 MUL 0xFB STOP 0xCF SWAP8 0xF6 0xAE RETURN SELFBALANCE DUP7 RETURNDATACOPY 0xF9 0xAD 0xA9 PUSH9 0xE712C2310ED3594E59 GASPRICE 0xB9 0xDC ISZERO 0x2E DUP15 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER 0x49 PUSH15 0x697469616C697A61626C653A20636F PUSH15 0x747261637420697320616C72656164 PUSH26 0x20696E697469616C697A6564A2646970667358221220C010ED9F 0xB0 SIGNEXTEND ORIGIN PUSH15 0x78D7230837E616D9B71E51B39752E9 0xD2 KECCAK256 0xAA DUP10 0x48 ISZERO 0xE0 CALLDATACOPY 0xB3 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
              "sourceMap": "336:3682:2:-:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;336:3682:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;611:47;;;;;;;;;;;;;;;;-1:-1:-1;611:47:2;-1:-1:-1;;;;;611:47:2;;:::i;:::-;;;;-1:-1:-1;;;;;611:47:2;;;;;;;;;;;;;;704:45;;;;;;;;;;;;;;;;-1:-1:-1;704:45:2;-1:-1:-1;;;;;704:45:2;;:::i;:::-;;;;;;;;;;;;;;;;2327:246;;;;;;;;;;;;;;;;-1:-1:-1;2327:246:2;-1:-1:-1;;;;;2327:246:2;;:::i;:::-;;404:22;;;:::i;3332:355::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3332:355:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3332:355:2;;-1:-1:-1;3332:355:2;;-1:-1:-1;;;;;3332:355:2:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2872:383;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2872:383:2;;-1:-1:-1;2872:383:2;;-1:-1:-1;;;;;2872:383:2:i;3691:325::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3691:325:2;;;;;;;;;;:::i;1410:901::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1410:901:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;611:47::-;;;;;;;;;;;;-1:-1:-1;;;;;611:47:2;;:::o;704:45::-;;;;;;;;;;;;;:::o;2327:246::-;2397:9;;:38;;;-1:-1:-1;;;;;2397:38:2;;2424:10;2397:38;;;;;;-1:-1:-1;;;;;2397:9:2;;;;:26;;:38;;;;;;;;;;;;;;;:9;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2397:38:2;2389:75;;;;;-1:-1:-1;;;;;2389:75:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2470:24:2;;;;;;:10;:24;;;;;;2497:15;469:5;2497:28;2470:55;;2536:32;;;2470:24;2536:32;2327:246;:::o;404:22::-;;;;:::o;3332:355::-;3485:10;3508:1;3472:24;;;:12;:24;;;;;;3444:12;;-1:-1:-1;;;;;3472:24:2;3464:47;;;;;;3577:10;3517:22;3564:24;;;:12;:24;;;;;;;;;3618:45;;-1:-1:-1;;;;;3618:45:2;;-1:-1:-1;;;;;3618:45:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3564:24;;;;;3517:22;3564:24;;3618:16;;:45;;;;;;;;;;;;;;;;;;;3517:22;3618:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3618:45:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3618:45:2;;;;;;;;;;-1:-1:-1;3618:45:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3618:45:2;;-1:-1:-1;3596:67:2;;3332:355;-1:-1:-1;;;;;;;;3332:355:2:o;2872:383::-;2967:10;1359:18;1351:27;;;;;;3002:10:::1;1203:1;1176:24:::0;;;:10:::1;:24;::::0;;;;;:28;;;;:74:::1;;-1:-1:-1::0;;;;;;1208:24:2;::::1;;::::0;;;:10:::1;:24;::::0;;;;;1235:15:::1;-1:-1:-1::0;1176:74:2::1;1168:83;;;::::0;::::1;;3022:22:::2;3047:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;3085:10:2::2;3072:24;::::0;;;:12:::2;:24;::::0;;;;;;;:44;;-1:-1:-1;;;;;;3072:44:2::2;-1:-1:-1::0;;;;;3072:44:2;;::::2;::::0;;::::2;::::0;;;3122:10:::2;:22:::0;;;;;:26;;;3171:20:::2;::::0;;3154:63;;-1:-1:-1;;;;;3154:63:2;;3171:20;;;::::2;3154:63:::0;;::::2;::::0;;;;;;;;;;;;;;;;;;;;;;;;3072:44;;-1:-1:-1;3072:44:2;;3154:16:::2;::::0;3171:20;;3072:24;;3154:63;;;;;;;;;;;;::::2;::::0;;;;3072:24;3154:63:::2;;;;;;;::::0;;::::2;::::0;;;::::2;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;::::0;;::::2;-1:-1:-1::0;;3154:63:2::2;::::0;::::2;;::::0;::::2;::::0;::::2;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;;;;;::::0;::::2;;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;-1:-1:-1;3154:63:2::2;;;;;::::0;::::2;;::::0;;-1:-1:-1;3154:63:2;;::::2;::::0;;::::2;::::0;;;::::2;::::0;;;;::::2;;;;;;;;::::0;;::::2;::::0;;;::::2;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;1257:1;1384::::1;2872:383:::0;;:::o;3691:325::-;3777:9;;:38;;;-1:-1:-1;;;;;3777:38:2;;3804:10;3777:38;;;;;;-1:-1:-1;;;;;3777:9:2;;;;:26;;:38;;;;;;;;;;;;;;;:9;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3777:38:2;3769:75;;;;;-1:-1:-1;;;;;3769:75:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3877:25:2;;;;;;;:12;:25;;;;;;;;;;3850:24;;;;;;;;;:52;;3877:25;;;;-1:-1:-1;;;;;;3850:52:2;;;;;;;3908:25;;;;:38;;;;;;;;3957:54;;;;;;;4000:10;;3957:54;;;;;;;;;3691:325;;:::o;1410:901::-;1472:13:7;;;;;;;;:33;;;1489:16;:14;:16::i;:::-;1472:50;;;-1:-1:-1;1510:12:7;;;;1509:13;1472:50;1464:109;;;;-1:-1:-1;;;;;1464:109:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1584:19;1607:13;;;;;;1606:14;1630:98;;;;1664:13;:20;;-1:-1:-1;;;;1664:20:7;;;;;1698:19;1680:4;1698:19;;;1630:98;1740:21:2::1;:43:::0;;-1:-1:-1;;;;;1740:43:2;;::::1;-1:-1:-1::0;;;;;;1740:43:2;;::::1;;::::0;;;1789:23:::1;:47:::0;;;;::::1;::::0;;::::1;;::::0;;1842:20:::1;:41:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;1963:19:::1;::::0;1740:21:::1;::::0;1963:19:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;2047:10:2::1;2034:24;::::0;;;:12:::1;:24;::::0;;;;;:44;;-1:-1:-1;;;;;;2034:44:2;;::::1;-1:-1:-1::0;;;;;2034:44:2;;::::1;::::0;;::::1;::::0;;;2084:9:::1;:34:::0;;;;::::1;::::0;;::::1;;::::0;;;;2124:39;;;;;::::1;::::0;::::1;::::0;;;;;;2034:44;;-1:-1:-1;2124:9:2::1;::::0;:20:::1;::::0;:39;;;;;2034:24;;2124:39;;;;;;2034:24;2124:9;:39;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2189:19;-1:-1:-1::0;;;;;2169:51:2::1;;2229:8;2169:70;;;;;-1:-1:-1::0;;;2169:70:2::1;;;;;;;-1:-1:-1::0;;;;;2169:70:2::1;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2265:10;-1:-1:-1::0;;;;;2245:42:2::1;;2296:8;2245:61;;;;;-1:-1:-1::0;;;2245:61:2::1;;;;;;;-1:-1:-1::0;;;;;2245:61:2::1;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1738:1:7;1754:14:::0;1750:66;;;1800:5;1784:21;;-1:-1:-1;;1784:21:7;;;1750:66;1410:901:2;;;;;;;:::o;1912:593:7:-;2348:4;2456:17;2491:7;1912:593;:::o;-1:-1:-1:-;;;;;;;;:::o"
            },
            "methodIdentifiers": {
              "createAlastriaIdentity(bytes)": "6d69d99a",
              "delegateCall(address,uint256,bytes)": "597b2e9b",
              "identityKeys(address)": "0c91465e",
              "initialize(address,address,address,address,address,address)": "cc2a9a5b",
              "pendingIDs(address)": "2773d0fa",
              "prepareAlastriaID(address)": "45748b42",
              "recoverAccount(address,address)": "c71cbcf3",
              "version()": "54fd4d50"
            }
          }
        }
      },
      "contracts/identityManager/AlastriaIdentityServiceProvider.sol": {
        "AlastriaIdentityServiceProvider": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_identityServiceProvider",
                  "type": "address"
                }
              ],
              "name": "addIdentityServiceProvider",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_identityServiceProvider",
                  "type": "address"
                }
              ],
              "name": "deleteIdentityServiceProvider",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_firstIdentity",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_identityServiceProvider",
                  "type": "address"
                }
              ],
              "name": "isIdentityServiceProvider",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5061031f806100206000396000f3fe608060405234801561001057600080fd5b5060043610610068577c010000000000000000000000000000000000000000000000000000000060003504630ebbbffc811461006d5780633bf4721514610095578063c4d66de8146100bb578063d024d9a4146100e1575b600080fd5b6100936004803603602081101561008357600080fd5b5035600160a060020a031661011b565b005b610093600480360360208110156100ab57600080fd5b5035600160a060020a031661016b565b610093600480360360208110156100d157600080fd5b5035600160a060020a03166101b4565b610107600480360360208110156100f757600080fd5b5035600160a060020a0316610297565b604080519115158252519081900360200190f35b3361012581610297565b61012e57600080fd5b8161013881610297565b1561014257600080fd5b5050600160a060020a03166000908152600160208190526040909120805460ff19169091179055565b8061017581610297565b61017e57600080fd5b3361018881610297565b61019157600080fd5b5050600160a060020a03166000908152600160205260409020805460ff19169055565b600054610100900460ff16806101cd57506101cd6102b5565b806101db575060005460ff16155b610230576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806102bc602e913960400191505060405180910390fd5b600054610100900460ff1615801561025b576000805460ff1961ff0019909116610100171660011790555b600160a060020a0382166000908152600160208190526040909120805460ff191690911790558015610293576000805461ff00191690555b5050565b600160a060020a031660009081526001602052604090205460ff1690565b303b159056fe496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a26469706673582212200ab6baba1954c62fedf4acf10cc72413c67163f4b4143b2a1bcdcd3467ce4c1564736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31F DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x68 JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV PUSH4 0xEBBBFFC DUP2 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x3BF47215 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xD024D9A4 EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x11B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x16B JUMP JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x297 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLER PUSH2 0x125 DUP2 PUSH2 0x297 JUMP JUMPDEST PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH2 0x138 DUP2 PUSH2 0x297 JUMP JUMPDEST ISZERO PUSH2 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x175 DUP2 PUSH2 0x297 JUMP JUMPDEST PUSH2 0x17E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH2 0x188 DUP2 PUSH2 0x297 JUMP JUMPDEST PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1CD JUMPI POP PUSH2 0x1CD PUSH2 0x2B5 JUMP JUMPDEST DUP1 PUSH2 0x1DB JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x230 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BC PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x25B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP INVALID 0x49 PUSH15 0x697469616C697A61626C653A20636F PUSH15 0x747261637420697320616C72656164 PUSH26 0x20696E697469616C697A6564A26469706673582212200AB6BABA NOT SLOAD 0xC6 0x2F 0xED DELEGATECALL 0xAC CALL 0xC 0xC7 0x24 SGT 0xC6 PUSH18 0x63F4B4143B2A1BCDCD3467CE4C1564736F6C PUSH4 0x43000706 STOP CALLER ",
              "sourceMap": "232:1237:3:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5060043610610068577c010000000000000000000000000000000000000000000000000000000060003504630ebbbffc811461006d5780633bf4721514610095578063c4d66de8146100bb578063d024d9a4146100e1575b600080fd5b6100936004803603602081101561008357600080fd5b5035600160a060020a031661011b565b005b610093600480360360208110156100ab57600080fd5b5035600160a060020a031661016b565b610093600480360360208110156100d157600080fd5b5035600160a060020a03166101b4565b610107600480360360208110156100f757600080fd5b5035600160a060020a0316610297565b604080519115158252519081900360200190f35b3361012581610297565b61012e57600080fd5b8161013881610297565b1561014257600080fd5b5050600160a060020a03166000908152600160208190526040909120805460ff19169091179055565b8061017581610297565b61017e57600080fd5b3361018881610297565b61019157600080fd5b5050600160a060020a03166000908152600160205260409020805460ff19169055565b600054610100900460ff16806101cd57506101cd6102b5565b806101db575060005460ff16155b610230576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806102bc602e913960400191505060405180910390fd5b600054610100900460ff1615801561025b576000805460ff1961ff0019909116610100171660011790555b600160a060020a0382166000908152600160208190526040909120805460ff191690911790558015610293576000805461ff00191690555b5050565b600160a060020a031660009081526001602052604090205460ff1690565b303b159056fe496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a26469706673582212200ab6baba1954c62fedf4acf10cc72413c67163f4b4143b2a1bcdcd3467ce4c1564736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x68 JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV PUSH4 0xEBBBFFC DUP2 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x3BF47215 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xD024D9A4 EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x11B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x16B JUMP JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x297 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLER PUSH2 0x125 DUP2 PUSH2 0x297 JUMP JUMPDEST PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH2 0x138 DUP2 PUSH2 0x297 JUMP JUMPDEST ISZERO PUSH2 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x175 DUP2 PUSH2 0x297 JUMP JUMPDEST PUSH2 0x17E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH2 0x188 DUP2 PUSH2 0x297 JUMP JUMPDEST PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1CD JUMPI POP PUSH2 0x1CD PUSH2 0x2B5 JUMP JUMPDEST DUP1 PUSH2 0x1DB JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x230 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BC PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x25B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP INVALID 0x49 PUSH15 0x697469616C697A61626C653A20636F PUSH15 0x747261637420697320616C72656164 PUSH26 0x20696E697469616C697A6564A26469706673582212200AB6BABA NOT SLOAD 0xC6 0x2F 0xED DELEGATECALL 0xAC CALL 0xC 0xC7 0x24 SGT 0xC6 PUSH18 0x63F4B4143B2A1BCDCD3467CE4C1564736F6C PUSH4 0x43000706 STOP CALLER ",
              "sourceMap": "232:1237:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;836:229;;;;;;;;;;;;;;;;-1:-1:-1;836:229:3;-1:-1:-1;;;;;836:229:3;;:::i;:::-;;1071:234;;;;;;;;;;;;;;;;-1:-1:-1;1071:234:3;-1:-1:-1;;;;;1071:234:3;;:::i;718:112::-;;;;;;;;;;;;;;;;-1:-1:-1;718:112:3;-1:-1:-1;;;;;718:112:3;;:::i;1311:155::-;;;;;;;;;;;;;;;;-1:-1:-1;1311:155:3;-1:-1:-1;;;;;1311:155:3;;:::i;:::-;;;;;;;;;;;;;;;;;;836:229;941:10;476:51;502:24;476:25;:51::i;:::-;467:61;;;;;;980:24:::1;642:51;668:24;642:25;:51::i;:::-;641:52;632:62;;;::::0;::::1;;-1:-1:-1::0;;;;;;;1016:35:3::2;;::::0;;;1054:4:::2;1016:35;::::0;;;;;;;:42;;-1:-1:-1;;1016:42:3::2;::::0;;::::2;::::0;;836:229::o;1071:234::-;1179:24;476:51;502:24;476:25;:51::i;:::-;467:61;;;;;;1233:10:::1;476:51;502:24;476:25;:51::i;:::-;467:61;;;::::0;::::1;;-1:-1:-1::0;;;;;;;1255:35:3::2;1293:5;1255:35:::0;;;:9:::2;:35;::::0;;;;:43;;-1:-1:-1;;1255:43:3::2;::::0;;1071:234::o;718:112::-;1472:13:7;;;;;;;;:33;;;1489:16;:14;:16::i;:::-;1472:50;;;-1:-1:-1;1510:12:7;;;;1509:13;1472:50;1464:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1584:19;1607:13;;;;;;1606:14;1630:98;;;;1664:13;:20;;-1:-1:-1;;;;1664:20:7;;;;;1698:19;1680:4;1698:19;;;1630:98;-1:-1:-1;;;;;791:25:3;::::1;;::::0;;;819:4:::1;791:25;::::0;;;;;;;:32;;-1:-1:-1;;791:32:3::1;::::0;;::::1;::::0;;1750:66:7;;;;1800:5;1784:21;;-1:-1:-1;;1784:21:7;;;1750:66;718:112:3;;:::o;1311:155::-;-1:-1:-1;;;;;1424:35:3;1401:4;1424:35;;;:9;:35;;;;;;;;;1311:155::o;1912:593:7:-;2348:4;2456:17;2491:7;1912:593;:::o"
            },
            "methodIdentifiers": {
              "addIdentityServiceProvider(address)": "0ebbbffc",
              "deleteIdentityServiceProvider(address)": "3bf47215",
              "initialize(address)": "c4d66de8",
              "isIdentityServiceProvider(address)": "d024d9a4"
            }
          }
        },
        "IAidServiceProvider": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_firstIdentity",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "initialize(address)": "c4d66de8"
            }
          }
        }
      },
      "contracts/identityManager/AlastriaProxy.sol": {
        "AlastriaProxy": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "destination",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "result",
                  "type": "bytes"
                }
              ],
              "name": "Forwarded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "stateMutability": "nonpayable",
              "type": "fallback"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "destination",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "forward",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506000610024640100000000610073810204565b60008054600160a060020a031916600160a060020a0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610077565b3390565b610669806100866000396000f3fe608060405234801561001057600080fd5b5060043610610068577c01000000000000000000000000000000000000000000000000000000006000350463715018a6811461006d5780638da5cb5b14610077578063d7f31eb91461009b578063f2fde38b146101cb575b600080fd5b6100756101f1565b005b61007f6102a3565b60408051600160a060020a039092168252519081900360200190f35b610156600480360360608110156100b157600080fd5b600160a060020a03823516916020810135918101906060810160408201356401000000008111156100e157600080fd5b8201836020820111156100f357600080fd5b8035906020019184600183028401116401000000008311171561011557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506102b2945050505050565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610190578181015183820152602001610178565b50505050905090810190601f1680156101bd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610075600480360360208110156101e157600080fd5b5035600160a060020a03166104de565b6101f96105e9565b600054600160a060020a0390811691161461024c576040805160e560020a62461bcd0281526020600482018190526024820152600080516020610614833981519152604482015290519081900360640190fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031690565b60606102bc6105e9565b600054600160a060020a0390811691161461030f576040805160e560020a62461bcd0281526020600482018190526024820152600080516020610614833981519152604482015290519081900360640190fd5b60008085600160a060020a031685856040518082805190602001908083835b6020831061034d5780518252601f19909201916020918201910161032e565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146103af576040519150601f19603f3d011682016040523d82523d6000602084013e6103b4565b606091505b5091509150816103c357600080fd5b85600160a060020a03167f8cd7411f6d2d65dd25e1b8e9e19f9b5b720c01622c9e25049b72837b1bbc1743868684604051808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610438578181015183820152602001610420565b50505050905090810190601f1680156104655780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015610498578181015183820152602001610480565b50505050905090810190601f1680156104c55780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a295945050505050565b6104e66105e9565b600054600160a060020a03908116911614610539576040805160e560020a62461bcd0281526020600482018190526024820152600080516020610614833981519152604482015290519081900360640190fd5b600160a060020a0381166105815760405160e560020a62461bcd0281526004018080602001828103825260268152602001806105ee6026913960400191505060405180910390fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a264697066735822122013d702fb00cf97f6aef347863ef9ada968e712c2310ed3594e593ab9dc152e8e64736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x24 PUSH5 0x100000000 PUSH2 0x73 DUP2 MUL DIV JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x77 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x669 DUP1 PUSH2 0x86 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x68 JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x715018A6 DUP2 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0xD7F31EB9 EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1CB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75 PUSH2 0x1F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7F PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x2B2 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x190 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x178 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1BD JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x24C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x614 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2BC PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x30F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x614 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x34D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x32E JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH32 0x8CD7411F6D2D65DD25E1B8E9E19F9B5B720C01622C9E25049B72837B1BBC1743 DUP7 DUP7 DUP5 PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x438 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x420 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x465 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x498 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x480 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4C5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4E6 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x539 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x614 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x581 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5EE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A264697066735822122013D7 MUL 0xFB STOP 0xCF SWAP8 0xF6 0xAE RETURN SELFBALANCE DUP7 RETURNDATACOPY 0xF9 0xAD 0xA9 PUSH9 0xE712C2310ED3594E59 GASPRICE 0xB9 0xDC ISZERO 0x2E DUP15 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
              "sourceMap": "115:625:4:-:0;;;;;;;;;;;;-1:-1:-1;865:17:8;885:12;:10;;;;:12;:::i;:::-;907:6;:18;;-1:-1:-1;;907:18:8;-1:-1:-1;907:18:8;;;;;;;940:43;;907:18;;-1:-1:-1;907:18:8;940:43;;907:6;;940:43;840:150;115:625:4;;596:98:6;679:10;596:98;:::o;115:625:4:-;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5060043610610068577c01000000000000000000000000000000000000000000000000000000006000350463715018a6811461006d5780638da5cb5b14610077578063d7f31eb91461009b578063f2fde38b146101cb575b600080fd5b6100756101f1565b005b61007f6102a3565b60408051600160a060020a039092168252519081900360200190f35b610156600480360360608110156100b157600080fd5b600160a060020a03823516916020810135918101906060810160408201356401000000008111156100e157600080fd5b8201836020820111156100f357600080fd5b8035906020019184600183028401116401000000008311171561011557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506102b2945050505050565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610190578181015183820152602001610178565b50505050905090810190601f1680156101bd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610075600480360360208110156101e157600080fd5b5035600160a060020a03166104de565b6101f96105e9565b600054600160a060020a0390811691161461024c576040805160e560020a62461bcd0281526020600482018190526024820152600080516020610614833981519152604482015290519081900360640190fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031690565b60606102bc6105e9565b600054600160a060020a0390811691161461030f576040805160e560020a62461bcd0281526020600482018190526024820152600080516020610614833981519152604482015290519081900360640190fd5b60008085600160a060020a031685856040518082805190602001908083835b6020831061034d5780518252601f19909201916020918201910161032e565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146103af576040519150601f19603f3d011682016040523d82523d6000602084013e6103b4565b606091505b5091509150816103c357600080fd5b85600160a060020a03167f8cd7411f6d2d65dd25e1b8e9e19f9b5b720c01622c9e25049b72837b1bbc1743868684604051808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610438578181015183820152602001610420565b50505050905090810190601f1680156104655780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015610498578181015183820152602001610480565b50505050905090810190601f1680156104c55780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a295945050505050565b6104e66105e9565b600054600160a060020a03908116911614610539576040805160e560020a62461bcd0281526020600482018190526024820152600080516020610614833981519152604482015290519081900360640190fd5b600160a060020a0381166105815760405160e560020a62461bcd0281526004018080602001828103825260268152602001806105ee6026913960400191505060405180910390fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a264697066735822122013d702fb00cf97f6aef347863ef9ada968e712c2310ed3594e593ab9dc152e8e64736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x68 JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x715018A6 DUP2 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0xD7F31EB9 EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1CB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75 PUSH2 0x1F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7F PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x2B2 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x190 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x178 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1BD JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x24C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x614 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2BC PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x30F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x614 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x34D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x32E JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH32 0x8CD7411F6D2D65DD25E1B8E9E19F9B5B720C01622C9E25049B72837B1BBC1743 DUP7 DUP7 DUP5 PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x438 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x420 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x465 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x498 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x480 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4C5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4E6 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x539 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x614 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x581 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5EE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A264697066735822122013D7 MUL 0xFB STOP 0xCF SWAP8 0xF6 0xAE RETURN SELFBALANCE DUP7 RETURNDATACOPY 0xF9 0xAD 0xA9 PUSH9 0xE712C2310ED3594E59 GASPRICE 0xB9 0xDC ISZERO 0x2E DUP15 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
              "sourceMap": "115:625:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;419:8;;;1689:145:8;;;:::i;:::-;;1066:77;;;:::i;:::-;;;;-1:-1:-1;;;;;1066:77:8;;;;;;;;;;;;;;436:302:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;436:302:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;436:302:4;;-1:-1:-1;436:302:4;;-1:-1:-1;;;;;436:302:4:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1983:240:8;;;;;;;;;;;;;;;;-1:-1:-1;1983:240:8;-1:-1:-1;;;;;1983:240:8;;:::i;1689:145::-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:8;;;:6;;:22;1262:67;;;;;-1:-1:-1;;;;;1262:67:8;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;1262:67:8;;;;;;;;;;;;;;;1795:1:::1;1779:6:::0;;1758:40:::1;::::0;-1:-1:-1;;;;;1779:6:8;;::::1;::::0;1758:40:::1;::::0;1795:1;;1758:40:::1;1825:1;1808:19:::0;;-1:-1:-1;;1808:19:8::1;::::0;;1689:145::o;1066:77::-;1104:7;1130:6;-1:-1:-1;;;;;1130:6:8;;1066:77::o;436:302:4:-;550:12;1280::8;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:8;;;:6;;:22;1262:67;;;;;-1:-1:-1;;;;;1262:67:8;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;1262:67:8;;;;;;;;;;;;;;;571:8:4::1;581:19:::0;604:11:::1;-1:-1:-1::0;;;;;604:16:4::1;629:5;637:4;604:38;;;;;;;;;;;;;;;;;;;::::0;;;;-1:-1:-1;;604:38:4;;;;::::1;::::0;;::::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;570:72;;;;656:3;648:12;;;::::0;::::1;;681:11;-1:-1:-1::0;;;;;671:43:4::1;;694:5;701:4;707:6;671:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;;;::::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;671:43:4;;::::1;::::0;;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;::::1;;;;;;;;::::0;;::::1;::::0;;;::::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;727:6:::0;436:302;-1:-1:-1;;;;;436:302:4:o;1983:240:8:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:8;;;:6;;:22;1262:67;;;;;-1:-1:-1;;;;;1262:67:8;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;1262:67:8;;;;;;;;;;;;;;;-1:-1:-1;;;;;2071:22:8;::::1;2063:73;;;;-1:-1:-1::0;;;;;2063:73:8::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2172:6;::::0;;2151:38:::1;::::0;-1:-1:-1;;;;;2151:38:8;;::::1;::::0;2172:6;::::1;::::0;2151:38:::1;::::0;::::1;2199:6;:17:::0;;-1:-1:-1;;2199:17:8::1;-1:-1:-1::0;;;;;2199:17:8;;;::::1;::::0;;;::::1;::::0;;1983:240::o;596:98:6:-;679:10;596:98;:::o"
            },
            "methodIdentifiers": {
              "forward(address,uint256,bytes)": "d7f31eb9",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          }
        }
      },
      "contracts/libs/Eidas.sol": {
        "Eidas": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "enum Eidas.EidasLevel",
                  "name": "_eidasLevel",
                  "type": "Eidas.EidasLevel"
                },
                {
                  "internalType": "enum Eidas.EidasLevel",
                  "name": "_level",
                  "type": "Eidas.EidasLevel"
                }
              ],
              "name": "atLeast",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum Eidas.EidasLevel",
                  "name": "_eidasLevel",
                  "type": "Eidas.EidasLevel"
                }
              ],
              "name": "atLeastLow",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "61011c610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106059577c010000000000000000000000000000000000000000000000000000000060003504630fa78bf78114605e578063f264148314608f575b600080fd5b607b60048036036020811015607257600080fd5b503560ff1660b4565b604080519115158252519081900360200190f35b607b6004803603604081101560a357600080fd5b5060ff8135811691602001351660c5565b600060bf82600260c5565b92915050565b600081600481111560d257fe5b83600481111560dd57fe5b1015939250505056fea26469706673582212201d5e487d2ade674ce4b8b9fada1507804724d11cdef30fc9258117115145091664736f6c63430007060033",
              "opcodes": "PUSH2 0x11C PUSH2 0x26 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x19 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x59 JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV PUSH4 0xFA78BF7 DUP2 EQ PUSH1 0x5E JUMPI DUP1 PUSH4 0xF2641483 EQ PUSH1 0x8F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0xFF AND PUSH1 0xB4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x7B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH1 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH1 0xC5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xBF DUP3 PUSH1 0x2 PUSH1 0xC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH1 0xD2 JUMPI INVALID JUMPDEST DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH1 0xDD JUMPI INVALID JUMPDEST LT ISZERO SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0x5E 0x48 PUSH30 0x2ADE674CE4B8B9FADA1507804724D11CDEF30FC925811711514509166473 PUSH16 0x6C634300070600330000000000000000 ",
              "sourceMap": "66:1359:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600436106059577c010000000000000000000000000000000000000000000000000000000060003504630fa78bf78114605e578063f264148314608f575b600080fd5b607b60048036036020811015607257600080fd5b503560ff1660b4565b604080519115158252519081900360200190f35b607b6004803603604081101560a357600080fd5b5060ff8135811691602001351660c5565b600060bf82600260c5565b92915050565b600081600481111560d257fe5b83600481111560dd57fe5b1015939250505056fea26469706673582212201d5e487d2ade674ce4b8b9fada1507804724d11cdef30fc9258117115145091664736f6c63430007060033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x59 JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV PUSH4 0xFA78BF7 DUP2 EQ PUSH1 0x5E JUMPI DUP1 PUSH4 0xF2641483 EQ PUSH1 0x8F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0xFF AND PUSH1 0xB4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x7B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH1 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH1 0xC5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xBF DUP3 PUSH1 0x2 PUSH1 0xC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH1 0xD2 JUMPI INVALID JUMPDEST DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH1 0xDD JUMPI INVALID JUMPDEST LT ISZERO SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0x5E 0x48 PUSH30 0x2ADE674CE4B8B9FADA1507804724D11CDEF30FC925811711514509166473 PUSH16 0x6C634300070600330000000000000000 ",
              "sourceMap": "66:1359:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;656:125;;;;;;;;;;;;;;;;-1:-1:-1;656:125:5;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1055:146;;;;;;;;;;;;;;;;-1:-1:-1;1055:146:5;;;;;;;;;;;:::i;656:125::-;721:4;740:36;748:11;761:14;740:7;:36::i;:::-;733:43;656:125;-1:-1:-1;;656:125:5:o;1055:146::-;1136:4;1188:6;1180:15;;;;;;;;1164:11;1156:20;;;;;;;;:39;;;1055:146;-1:-1:-1;;;1055:146:5:o"
            },
            "methodIdentifiers": {
              "atLeast(Eidas.EidasLevel,Eidas.EidasLevel)": "f2641483",
              "atLeastLow(Eidas.EidasLevel)": "0fa78bf7"
            }
          }
        }
      },
      "contracts/openzeppelin/GSN/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          }
        }
      },
      "contracts/openzeppelin/Initializable.sol": {
        "Initializable": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          }
        }
      },
      "contracts/openzeppelin/ownership/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          }
        }
      },
      "contracts/openzeppelin/upgradeability/Proxy.sol": {
        "Proxy": {
          "abi": [
            {
              "stateMutability": "payable",
              "type": "fallback"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          }
        }
      },
      "contracts/openzeppelin/upgradeability/ProxyAdmin.sol": {
        "ProxyAdmin": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "contract TransparentUpgradeableProxy",
                  "name": "proxy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "newAdmin",
                  "type": "address"
                }
              ],
              "name": "changeProxyAdmin",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract TransparentUpgradeableProxy",
                  "name": "proxy",
                  "type": "address"
                }
              ],
              "name": "getProxyAdmin",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract TransparentUpgradeableProxy",
                  "name": "proxy",
                  "type": "address"
                }
              ],
              "name": "getProxyImplementation",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract TransparentUpgradeableProxy",
                  "name": "proxy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "name": "upgrade",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract TransparentUpgradeableProxy",
                  "name": "proxy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "upgradeAndCall",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506000610024640100000000610073810204565b60008054600160a060020a031916600160a060020a0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610077565b3390565b6108a3806100866000396000f3fe60806040526004361061006e5760e060020a6000350463204e1c7a8114610073578063715018a6146100c25780637eff275e146100d95780638da5cb5b146101145780639623609d1461012957806399a88ec4146101e8578063f2fde38b14610223578063f3b7dead14610256575b600080fd5b34801561007f57600080fd5b506100a66004803603602081101561009657600080fd5b5035600160a060020a0316610289565b60408051600160a060020a039092168252519081900360200190f35b3480156100ce57600080fd5b506100d7610334565b005b3480156100e557600080fd5b506100d7600480360360408110156100fc57600080fd5b50600160a060020a03813581169160200135166103e6565b34801561012057600080fd5b506100a66104af565b6100d76004803603606081101561013f57600080fd5b600160a060020a03823581169260208101359091169181019060608101604082013564010000000081111561017357600080fd5b82018360208201111561018557600080fd5b803590602001918460018302840111640100000000831117156101a757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506104be945050505050565b3480156101f457600080fd5b506100d76004803603604081101561020b57600080fd5b50600160a060020a03813581169160200135166105f3565b34801561022f57600080fd5b506100d76004803603602081101561024657600080fd5b5035600160a060020a03166106a0565b34801561026257600080fd5b506100a66004803603602081101561027957600080fd5b5035600160a060020a03166107ab565b600080600083600160a060020a031660405180807f5c60da1b000000000000000000000000000000000000000000000000000000008152506004019050600060405180830381855afa9150503d8060008114610301576040519150601f19603f3d011682016040523d82523d6000602084013e610306565b606091505b50915091508161031557600080fd5b80806020019051602081101561032a57600080fd5b5051949350505050565b61033c610823565b600054600160a060020a0390811691161461038f576040805160e560020a62461bcd028152602060048201819052602482015260008051602061084e833981519152604482015290519081900360640190fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6103ee610823565b600054600160a060020a03908116911614610441576040805160e560020a62461bcd028152602060048201819052602482015260008051602061084e833981519152604482015290519081900360640190fd5b81600160a060020a0316638f283970826040518263ffffffff1660e060020a0281526004018082600160a060020a03168152602001915050600060405180830381600087803b15801561049357600080fd5b505af11580156104a7573d6000803e3d6000fd5b505050505050565b600054600160a060020a031690565b6104c6610823565b600054600160a060020a03908116911614610519576040805160e560020a62461bcd028152602060048201819052602482015260008051602061084e833981519152604482015290519081900360640190fd5b82600160a060020a0316634f1ef2863484846040518463ffffffff1660e060020a0281526004018083600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610589578181015183820152602001610571565b50505050905090810190601f1680156105b65780820380516001836020036101000a031916815260200191505b5093505050506000604051808303818588803b1580156105d557600080fd5b505af11580156105e9573d6000803e3d6000fd5b5050505050505050565b6105fb610823565b600054600160a060020a0390811691161461064e576040805160e560020a62461bcd028152602060048201819052602482015260008051602061084e833981519152604482015290519081900360640190fd5b81600160a060020a0316633659cfe6826040518263ffffffff1660e060020a0281526004018082600160a060020a03168152602001915050600060405180830381600087803b15801561049357600080fd5b6106a8610823565b600054600160a060020a039081169116146106fb576040805160e560020a62461bcd028152602060048201819052602482015260008051602061084e833981519152604482015290519081900360640190fd5b600160a060020a0381166107435760405160e560020a62461bcd0281526004018080602001828103825260268152602001806108286026913960400191505060405180910390fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600080600083600160a060020a031660405180807ff851a440000000000000000000000000000000000000000000000000000000008152506004019050600060405180830381855afa9150503d8060008114610301576040519150601f19603f3d011682016040523d82523d6000602084013e610306565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212208118684f6e79a076fb4bbcb0a6cbdcb963f649a40413e0281f54f63acd5e70b564736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x24 PUSH5 0x100000000 PUSH2 0x73 DUP2 MUL DIV JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x77 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x8A3 DUP1 PUSH2 0x86 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6E JUMPI PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x204E1C7A DUP2 EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x7EFF275E EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x99A88EC4 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0xF3B7DEAD EQ PUSH2 0x256 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD7 PUSH2 0x334 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x3E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA6 PUSH2 0x4AF JUMP JUMPDEST PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x4BE SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x5F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x6A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x7AB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x40 MLOAD DUP1 DUP1 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x4 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x301 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x306 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x33C PUSH2 0x823 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x38F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x84E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3EE PUSH2 0x823 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x441 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x84E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0x8F283970 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x4C6 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x519 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x84E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0x4F1EF286 CALLVALUE DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x589 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x571 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x5B6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5FB PUSH2 0x823 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x64E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x84E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0x3659CFE6 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6A8 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x6FB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x84E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x743 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x828 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x40 MLOAD DUP1 DUP1 PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x4 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x301 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x306 JUMP JUMPDEST CALLER SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A26469706673582212208118 PUSH9 0x4F6E79A076FB4BBCB0 0xA6 0xCB 0xDC 0xB9 PUSH4 0xF649A404 SGT 0xE0 0x28 0x1F SLOAD 0xF6 GASPRICE 0xCD 0x5E PUSH17 0xB564736F6C634300070600330000000000 ",
              "sourceMap": "385:2410:10:-:0;;;;;;;;;;;;-1:-1:-1;865:17:8;885:12;:10;;;;:12;:::i;:::-;907:6;:18;;-1:-1:-1;;;;;;907:18:8;-1:-1:-1;;;;;907:18:8;;;;;;;940:43;;907:18;;-1:-1:-1;907:18:8;940:43;;907:6;;940:43;840:150;385:2410:10;;596:98:6;679:10;596:98;:::o;385:2410:10:-;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806040526004361061006e5760e060020a6000350463204e1c7a8114610073578063715018a6146100c25780637eff275e146100d95780638da5cb5b146101145780639623609d1461012957806399a88ec4146101e8578063f2fde38b14610223578063f3b7dead14610256575b600080fd5b34801561007f57600080fd5b506100a66004803603602081101561009657600080fd5b5035600160a060020a0316610289565b60408051600160a060020a039092168252519081900360200190f35b3480156100ce57600080fd5b506100d7610334565b005b3480156100e557600080fd5b506100d7600480360360408110156100fc57600080fd5b50600160a060020a03813581169160200135166103e6565b34801561012057600080fd5b506100a66104af565b6100d76004803603606081101561013f57600080fd5b600160a060020a03823581169260208101359091169181019060608101604082013564010000000081111561017357600080fd5b82018360208201111561018557600080fd5b803590602001918460018302840111640100000000831117156101a757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506104be945050505050565b3480156101f457600080fd5b506100d76004803603604081101561020b57600080fd5b50600160a060020a03813581169160200135166105f3565b34801561022f57600080fd5b506100d76004803603602081101561024657600080fd5b5035600160a060020a03166106a0565b34801561026257600080fd5b506100a66004803603602081101561027957600080fd5b5035600160a060020a03166107ab565b600080600083600160a060020a031660405180807f5c60da1b000000000000000000000000000000000000000000000000000000008152506004019050600060405180830381855afa9150503d8060008114610301576040519150601f19603f3d011682016040523d82523d6000602084013e610306565b606091505b50915091508161031557600080fd5b80806020019051602081101561032a57600080fd5b5051949350505050565b61033c610823565b600054600160a060020a0390811691161461038f576040805160e560020a62461bcd028152602060048201819052602482015260008051602061084e833981519152604482015290519081900360640190fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6103ee610823565b600054600160a060020a03908116911614610441576040805160e560020a62461bcd028152602060048201819052602482015260008051602061084e833981519152604482015290519081900360640190fd5b81600160a060020a0316638f283970826040518263ffffffff1660e060020a0281526004018082600160a060020a03168152602001915050600060405180830381600087803b15801561049357600080fd5b505af11580156104a7573d6000803e3d6000fd5b505050505050565b600054600160a060020a031690565b6104c6610823565b600054600160a060020a03908116911614610519576040805160e560020a62461bcd028152602060048201819052602482015260008051602061084e833981519152604482015290519081900360640190fd5b82600160a060020a0316634f1ef2863484846040518463ffffffff1660e060020a0281526004018083600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610589578181015183820152602001610571565b50505050905090810190601f1680156105b65780820380516001836020036101000a031916815260200191505b5093505050506000604051808303818588803b1580156105d557600080fd5b505af11580156105e9573d6000803e3d6000fd5b5050505050505050565b6105fb610823565b600054600160a060020a0390811691161461064e576040805160e560020a62461bcd028152602060048201819052602482015260008051602061084e833981519152604482015290519081900360640190fd5b81600160a060020a0316633659cfe6826040518263ffffffff1660e060020a0281526004018082600160a060020a03168152602001915050600060405180830381600087803b15801561049357600080fd5b6106a8610823565b600054600160a060020a039081169116146106fb576040805160e560020a62461bcd028152602060048201819052602482015260008051602061084e833981519152604482015290519081900360640190fd5b600160a060020a0381166107435760405160e560020a62461bcd0281526004018080602001828103825260268152602001806108286026913960400191505060405180910390fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600080600083600160a060020a031660405180807ff851a440000000000000000000000000000000000000000000000000000000008152506004019050600060405180830381855afa9150503d8060008114610301576040519150601f19603f3d011682016040523d82523d6000602084013e610306565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212208118684f6e79a076fb4bbcb0a6cbdcb963f649a40413e0281f54f63acd5e70b564736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6E JUMPI PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x204E1C7A DUP2 EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x7EFF275E EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x99A88EC4 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0xF3B7DEAD EQ PUSH2 0x256 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD7 PUSH2 0x334 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x3E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA6 PUSH2 0x4AF JUMP JUMPDEST PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x4BE SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x5F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x6A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x7AB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x40 MLOAD DUP1 DUP1 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x4 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x301 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x306 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x33C PUSH2 0x823 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x38F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x84E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3EE PUSH2 0x823 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x441 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x84E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0x8F283970 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x4C6 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x519 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x84E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0x4F1EF286 CALLVALUE DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x589 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x571 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x5B6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5FB PUSH2 0x823 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x64E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x84E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0x3659CFE6 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6A8 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x6FB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x84E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x743 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x828 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x40 MLOAD DUP1 DUP1 PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x4 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x301 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x306 JUMP JUMPDEST CALLER SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A26469706673582212208118 PUSH9 0x4F6E79A076FB4BBCB0 0xA6 0xCB 0xDC 0xB9 PUSH4 0xF649A404 SGT 0xE0 0x28 0x1F SLOAD 0xF6 GASPRICE 0xCD 0x5E PUSH17 0xB564736F6C634300070600330000000000 ",
              "sourceMap": "385:2410:10:-:0;;;;;;;;-1:-1:-1;;;385:2410:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;597:435;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;597:435:10;-1:-1:-1;;;;;597:435:10;;:::i;:::-;;;;-1:-1:-1;;;;;597:435:10;;;;;;;;;;;;;;1689:145:8;;;;;;;;;;;;;:::i;:::-;;1805:142:10;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1805:142:10;;;;;;;;;;:::i;1066:77:8:-;;;;;;;;;;;;;:::i;2584:208:10:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2584:208:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2584:208:10;;-1:-1:-1;2584:208:10;;-1:-1:-1;;;;;2584:208:10:i;2163:143::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2163:143:10;;;;;;;;;;:::i;1983:240:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1983:240:8;-1:-1:-1;;;;;1983:240:8;;:::i;1203:417:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1203:417:10;-1:-1:-1;;;;;1203:417:10;;:::i;597:435::-;685:7;865:12;879:23;914:5;-1:-1:-1;;;;;906:25:10;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;864:82;;;;965:7;957:16;;;;;;1002:10;991:33;;;;;;;;;;;;;;;-1:-1:-1;991:33:10;;597:435;-1:-1:-1;;;;597:435:10:o;1689:145:8:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:8;;;:22;;;1262:67;;;;;-1:-1:-1;;;;;1262:67:8;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:8;;;;;;;;;;;;;;;1795:1:::1;1779:6:::0;;1758:40:::1;::::0;-1:-1:-1;;;;;1779:6:8;;::::1;::::0;1758:40:::1;::::0;1795:1;;1758:40:::1;1825:1;1808:19:::0;;-1:-1:-1;;1808:19:8::1;::::0;;1689:145::o;1805:142:10:-;1280:12:8;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:8;;;:22;;;1262:67;;;;;-1:-1:-1;;;;;1262:67:8;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:8;;;;;;;;;;;;;;;1912:5:10::1;-1:-1:-1::0;;;;;1912:17:10::1;;1930:8;1912:27;;;;;-1:-1:-1::0;;;1912:27:10::1;;;;;;;-1:-1:-1::0;;;;;1912:27:10::1;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1805:142:::0;;:::o;1066:77:8:-;1104:7;1130:6;-1:-1:-1;;;;;1130:6:8;1066:77;:::o;2584:208:10:-;1280:12:8;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:8;;;:22;;;1262:67;;;;;-1:-1:-1;;;;;1262:67:8;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:8;;;;;;;;;;;;;;;2722:5:10::1;-1:-1:-1::0;;;;;2722:22:10::1;;2752:9;2763:14;2779:4;2722:62;;;;;-1:-1:-1::0;;;2722:62:10::1;;;;;;;-1:-1:-1::0;;;;;2722:62:10::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;;;::::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;2584:208:::0;;;:::o;2163:143::-;1280:12:8;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:8;;;:22;;;1262:67;;;;;-1:-1:-1;;;;;1262:67:8;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:8;;;;;;;;;;;;;;;2267:5:10::1;-1:-1:-1::0;;;;;2267:15:10::1;;2283:14;2267:31;;;;;-1:-1:-1::0;;;2267:31:10::1;;;;;;;-1:-1:-1::0;;;;;2267:31:10::1;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;1983:240:8::0;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:8;;;:22;;;1262:67;;;;;-1:-1:-1;;;;;1262:67:8;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:8;;;;;;;;;;;;;;;-1:-1:-1;;;;;2071:22:8;::::1;2063:73;;;;-1:-1:-1::0;;;;;2063:73:8::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2172:6;::::0;;2151:38:::1;::::0;-1:-1:-1;;;;;2151:38:8;;::::1;::::0;2172:6;::::1;::::0;2151:38:::1;::::0;::::1;2199:6;:17:::0;;-1:-1:-1;;2199:17:8::1;-1:-1:-1::0;;;;;2199:17:8;;;::::1;::::0;;;::::1;::::0;;1983:240::o;1203:417:10:-;1282:7;1453:12;1467:23;1502:5;-1:-1:-1;;;;;1494:25:10;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;596:98:6;679:10;596:98;:::o"
            },
            "methodIdentifiers": {
              "changeProxyAdmin(address,address)": "7eff275e",
              "getProxyAdmin(address)": "f3b7dead",
              "getProxyImplementation(address)": "204e1c7a",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b",
              "upgrade(address,address)": "99a88ec4",
              "upgradeAndCall(address,address,bytes)": "9623609d"
            }
          }
        }
      },
      "contracts/openzeppelin/upgradeability/TransparentUpgradeableProxy.sol": {
        "TransparentUpgradeableProxy": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_logic",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_admin",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "_data",
                  "type": "bytes"
                }
              ],
              "stateMutability": "payable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "previousAdmin",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "newAdmin",
                  "type": "address"
                }
              ],
              "name": "AdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "name": "Upgraded",
              "type": "event"
            },
            {
              "stateMutability": "payable",
              "type": "fallback"
            },
            {
              "inputs": [],
              "name": "admin",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "currentAdmin",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newAdmin",
                  "type": "address"
                }
              ],
              "name": "changeAdmin",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "implementation",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "_impl",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newImplementation",
                  "type": "address"
                }
              ],
              "name": "upgradeTo",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newImplementation",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "upgradeToAndCall",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60806040526040516109303803806109308339818101604052606081101561002657600080fd5b8151602083015160408085018051915193959294830192918464010000000082111561005157600080fd5b90830190602082018581111561006657600080fd5b825164010000000081118282018810171561008057600080fd5b82525081516020918201929091019080838360005b838110156100ad578181015183820152602001610095565b50505050905090810190601f1680156100da5780820380516001836020036101000a031916815260200191505b50604052508491508290506100f7826401000000006101d1810204565b8051156101af57600082600160a060020a0316826040518082805190602001908083835b6020831061013a5780518252601f19909201916020918201910161011b565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d806000811461019a576040519150601f19603f3d011682016040523d82523d6000602084013e61019f565b606091505b50509050806101ad57600080fd5b505b506101b79050565b6101c982640100000000610260810204565b50505061028a565b6101e7816401000000006103d361028482021704565b61023c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001806108fa6036913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b3b151590565b610661806102996000396000f3fe60806040526004361061006a577c010000000000000000000000000000000000000000000000000000000060003504633659cfe681146100815780634f1ef286146100b45780635c60da1b146101345780638f28397014610165578063f851a4401461019857610079565b36610079576100776101ad565b005b6100776101ad565b34801561008d57600080fd5b50610077600480360360208110156100a457600080fd5b5035600160a060020a03166101c7565b610077600480360360408110156100ca57600080fd5b600160a060020a0382351691908101906040810160208201356401000000008111156100f557600080fd5b82018360208201111561010757600080fd5b8035906020019184600183028401116401000000008311171561012957600080fd5b509092509050610201565b34801561014057600080fd5b506101496102ae565b60408051600160a060020a039092168252519081900360200190f35b34801561017157600080fd5b506100776004803603602081101561018857600080fd5b5035600160a060020a03166102eb565b3480156101a457600080fd5b506101496103a8565b6101b56103d9565b6101c56101c061043c565b610461565b565b6101cf610485565b600160a060020a031633600160a060020a031614156101f6576101f1816104aa565b6101fe565b6101fe6101ad565b50565b610209610485565b600160a060020a031633600160a060020a031614156102a15761022b836104aa565b600083600160a060020a031683836040518083838082843760405192019450600093509091505080830381855af49150503d8060008114610288576040519150601f19603f3d011682016040523d82523d6000602084013e61028d565b606091505b505090508061029b57600080fd5b506102a9565b6102a96101ad565b505050565b60006102b8610485565b600160a060020a031633600160a060020a031614156102e0576102d961043c565b90506102e8565b6102e86101ad565b90565b6102f3610485565b600160a060020a031633600160a060020a031614156101f657600160a060020a0381166103545760405160e560020a62461bcd02815260040180806020018281038252603a81526020018061057a603a913960400191505060405180910390fd5b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f61037d610485565b60408051600160a060020a03928316815291841660208301528051918290030190a16101f1816104ea565b60006103b2610485565b600160a060020a031633600160a060020a031614156102e0576102d9610485565b3b151590565b6103e1610485565b600160a060020a031633600160a060020a031614156104345760405160e560020a62461bcd0281526004018080602001828103825260428152602001806105ea6042913960600191505060405180910390fd5b6101c56101c5565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e808015610480573d6000f35b3d6000fd5b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b6104b38161050e565b604051600160a060020a038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b610517816103d3565b6105555760405160e560020a62461bcd0281526004018080602001828103825260368152602001806105b46036913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5556fe5472616e73706172656e745570677261646561626c6550726f78793a206e65772061646d696e20697320746865207a65726f20616464726573735570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e74726163745472616e73706172656e745570677261646561626c6550726f78793a2061646d696e2063616e6e6f742066616c6c6261636b20746f2070726f787920746172676574a264697066735822122089e39160efdcb1ad81c9907cce15a707617bdaac15e3a72ec1fe60031b09f86f64736f6c634300070600335570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x930 CODESIZE SUB DUP1 PUSH2 0x930 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD DUP1 MLOAD SWAP2 MLOAD SWAP4 SWAP6 SWAP3 SWAP5 DUP4 ADD SWAP3 SWAP2 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x95 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xDA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP DUP5 SWAP2 POP DUP3 SWAP1 POP PUSH2 0xF7 DUP3 PUSH5 0x100000000 PUSH2 0x1D1 DUP2 MUL DIV JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x13A JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x11B JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x19A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x19F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMPDEST POP PUSH2 0x1B7 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C9 DUP3 PUSH5 0x100000000 PUSH2 0x260 DUP2 MUL DIV JUMP JUMPDEST POP POP POP PUSH2 0x28A JUMP JUMPDEST PUSH2 0x1E7 DUP2 PUSH5 0x100000000 PUSH2 0x3D3 PUSH2 0x284 DUP3 MUL OR DIV JUMP JUMPDEST PUSH2 0x23C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8FA PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SSTORE JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SSTORE JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x661 DUP1 PUSH2 0x299 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6A JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x3659CFE6 DUP2 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x198 JUMPI PUSH2 0x79 JUMP JUMPDEST CALLDATASIZE PUSH2 0x79 JUMPI PUSH2 0x77 PUSH2 0x1AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x77 PUSH2 0x1AD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x77 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x77 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x201 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x149 PUSH2 0x2AE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x77 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x2EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x149 PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x1B5 PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x1C0 PUSH2 0x43C JUMP JUMPDEST PUSH2 0x461 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1CF PUSH2 0x485 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ ISZERO PUSH2 0x1F6 JUMPI PUSH2 0x1F1 DUP2 PUSH2 0x4AA JUMP JUMPDEST PUSH2 0x1FE JUMP JUMPDEST PUSH2 0x1FE PUSH2 0x1AD JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x209 PUSH2 0x485 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ ISZERO PUSH2 0x2A1 JUMPI PUSH2 0x22B DUP4 PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 MLOAD SWAP3 ADD SWAP5 POP PUSH1 0x0 SWAP4 POP SWAP1 SWAP2 POP POP DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x288 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x28D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A9 JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x1AD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B8 PUSH2 0x485 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ ISZERO PUSH2 0x2E0 JUMPI PUSH2 0x2D9 PUSH2 0x43C JUMP JUMPDEST SWAP1 POP PUSH2 0x2E8 JUMP JUMPDEST PUSH2 0x2E8 PUSH2 0x1AD JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2F3 PUSH2 0x485 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x354 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x57A PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH2 0x37D PUSH2 0x485 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 PUSH2 0x1F1 DUP2 PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B2 PUSH2 0x485 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ ISZERO PUSH2 0x2E0 JUMPI PUSH2 0x2D9 PUSH2 0x485 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x3E1 PUSH2 0x485 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ ISZERO PUSH2 0x434 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x42 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5EA PUSH1 0x42 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C5 PUSH2 0x1C5 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x480 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4B3 DUP2 PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SSTORE JUMP JUMPDEST PUSH2 0x517 DUP2 PUSH2 0x3D3 JUMP JUMPDEST PUSH2 0x555 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5B4 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SSTORE JUMP INVALID SLOAD PUSH19 0x616E73706172656E745570677261646561626C PUSH6 0x50726F78793A KECCAK256 PUSH15 0x65772061646D696E20697320746865 KECCAK256 PUSH27 0x65726F20616464726573735570677261646561626C6550726F7879 GASPRICE KECCAK256 PUSH15 0x657720696D706C656D656E74617469 PUSH16 0x6E206973206E6F74206120636F6E7472 PUSH2 0x6374 SLOAD PUSH19 0x616E73706172656E745570677261646561626C PUSH6 0x50726F78793A KECCAK256 PUSH2 0x646D PUSH10 0x6E2063616E6E6F742066 PUSH2 0x6C6C PUSH3 0x61636B KECCAK256 PUSH21 0x6F2070726F787920746172676574A2646970667358 0x22 SLT KECCAK256 DUP10 0xE3 SWAP2 PUSH1 0xEF 0xDC 0xB1 0xAD DUP2 0xC9 SWAP1 PUSH29 0xCE15A707617BDAAC15E3A72EC1FE60031B09F86F64736F6C6343000706 STOP CALLER SSTORE PUSH17 0x677261646561626C6550726F78793A206E PUSH6 0x7720696D706C PUSH6 0x6D656E746174 PUSH10 0x6F6E206973206E6F7420 PUSH2 0x2063 PUSH16 0x6E747261637400000000000000000000 ",
              "sourceMap": "1580:4751:11:-:0;;;1867:228;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1867:228:11;;;;;;;;;;-1:-1:-1;1867:228:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1867:228:11;;-1:-1:-1;1956:6:11;;-1:-1:-1;1964:5:11;;-1:-1:-1;1240:26:12;1259:6;1240:18;;;;:26;:::i;:::-;1277:12;;:16;1273:167;;1363:12;1381:6;-1:-1:-1;;;;;1381:19:12;1401:5;1381:26;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1381:26:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1362:45;;;1424:7;1416:16;;;;;;1273:167;;-1:-1:-1;1982:77:11::1;::::0;-1:-1:-1;1982:77:11;::::1;2070:17;2080:6:::0;2070:9:::1;;::::0;::::1;:17;:::i;:::-;1867:228:::0;;;1580:4751;;2554:362:12;2640:37;2659:17;2640:18;;;;;;:37;:::i;:::-;2624:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1841:66;2873:31;2864:47::o;5777:216:11:-;2484:66;5953:22;5938:48::o;965:616:13:-;1528:20;1566:8;;;965:616::o;1580:4751:11:-;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806040526004361061006a577c010000000000000000000000000000000000000000000000000000000060003504633659cfe681146100815780634f1ef286146100b45780635c60da1b146101345780638f28397014610165578063f851a4401461019857610079565b36610079576100776101ad565b005b6100776101ad565b34801561008d57600080fd5b50610077600480360360208110156100a457600080fd5b5035600160a060020a03166101c7565b610077600480360360408110156100ca57600080fd5b600160a060020a0382351691908101906040810160208201356401000000008111156100f557600080fd5b82018360208201111561010757600080fd5b8035906020019184600183028401116401000000008311171561012957600080fd5b509092509050610201565b34801561014057600080fd5b506101496102ae565b60408051600160a060020a039092168252519081900360200190f35b34801561017157600080fd5b506100776004803603602081101561018857600080fd5b5035600160a060020a03166102eb565b3480156101a457600080fd5b506101496103a8565b6101b56103d9565b6101c56101c061043c565b610461565b565b6101cf610485565b600160a060020a031633600160a060020a031614156101f6576101f1816104aa565b6101fe565b6101fe6101ad565b50565b610209610485565b600160a060020a031633600160a060020a031614156102a15761022b836104aa565b600083600160a060020a031683836040518083838082843760405192019450600093509091505080830381855af49150503d8060008114610288576040519150601f19603f3d011682016040523d82523d6000602084013e61028d565b606091505b505090508061029b57600080fd5b506102a9565b6102a96101ad565b505050565b60006102b8610485565b600160a060020a031633600160a060020a031614156102e0576102d961043c565b90506102e8565b6102e86101ad565b90565b6102f3610485565b600160a060020a031633600160a060020a031614156101f657600160a060020a0381166103545760405160e560020a62461bcd02815260040180806020018281038252603a81526020018061057a603a913960400191505060405180910390fd5b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f61037d610485565b60408051600160a060020a03928316815291841660208301528051918290030190a16101f1816104ea565b60006103b2610485565b600160a060020a031633600160a060020a031614156102e0576102d9610485565b3b151590565b6103e1610485565b600160a060020a031633600160a060020a031614156104345760405160e560020a62461bcd0281526004018080602001828103825260428152602001806105ea6042913960600191505060405180910390fd5b6101c56101c5565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e808015610480573d6000f35b3d6000fd5b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b6104b38161050e565b604051600160a060020a038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b610517816103d3565b6105555760405160e560020a62461bcd0281526004018080602001828103825260368152602001806105b46036913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5556fe5472616e73706172656e745570677261646561626c6550726f78793a206e65772061646d696e20697320746865207a65726f20616464726573735570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e74726163745472616e73706172656e745570677261646561626c6550726f78793a2061646d696e2063616e6e6f742066616c6c6261636b20746f2070726f787920746172676574a264697066735822122089e39160efdcb1ad81c9907cce15a707617bdaac15e3a72ec1fe60031b09f86f64736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6A JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x3659CFE6 DUP2 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x198 JUMPI PUSH2 0x79 JUMP JUMPDEST CALLDATASIZE PUSH2 0x79 JUMPI PUSH2 0x77 PUSH2 0x1AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x77 PUSH2 0x1AD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x77 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x77 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x201 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x149 PUSH2 0x2AE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x77 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x2EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x149 PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x1B5 PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x1C0 PUSH2 0x43C JUMP JUMPDEST PUSH2 0x461 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1CF PUSH2 0x485 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ ISZERO PUSH2 0x1F6 JUMPI PUSH2 0x1F1 DUP2 PUSH2 0x4AA JUMP JUMPDEST PUSH2 0x1FE JUMP JUMPDEST PUSH2 0x1FE PUSH2 0x1AD JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x209 PUSH2 0x485 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ ISZERO PUSH2 0x2A1 JUMPI PUSH2 0x22B DUP4 PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 MLOAD SWAP3 ADD SWAP5 POP PUSH1 0x0 SWAP4 POP SWAP1 SWAP2 POP POP DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x288 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x28D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A9 JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x1AD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B8 PUSH2 0x485 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ ISZERO PUSH2 0x2E0 JUMPI PUSH2 0x2D9 PUSH2 0x43C JUMP JUMPDEST SWAP1 POP PUSH2 0x2E8 JUMP JUMPDEST PUSH2 0x2E8 PUSH2 0x1AD JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2F3 PUSH2 0x485 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x354 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x57A PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH2 0x37D PUSH2 0x485 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 PUSH2 0x1F1 DUP2 PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B2 PUSH2 0x485 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ ISZERO PUSH2 0x2E0 JUMPI PUSH2 0x2D9 PUSH2 0x485 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x3E1 PUSH2 0x485 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ ISZERO PUSH2 0x434 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x42 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5EA PUSH1 0x42 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C5 PUSH2 0x1C5 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x480 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4B3 DUP2 PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SSTORE JUMP JUMPDEST PUSH2 0x517 DUP2 PUSH2 0x3D3 JUMP JUMPDEST PUSH2 0x555 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5B4 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SSTORE JUMP INVALID SLOAD PUSH19 0x616E73706172656E745570677261646561626C PUSH6 0x50726F78793A KECCAK256 PUSH15 0x65772061646D696E20697320746865 KECCAK256 PUSH27 0x65726F20616464726573735570677261646561626C6550726F7879 GASPRICE KECCAK256 PUSH15 0x657720696D706C656D656E74617469 PUSH16 0x6E206973206E6F74206120636F6E7472 PUSH2 0x6374 SLOAD PUSH19 0x616E73706172656E745570677261646561626C PUSH6 0x50726F78793A KECCAK256 PUSH2 0x646D PUSH10 0x6E2063616E6E6F742066 PUSH2 0x6C6C PUSH3 0x61636B KECCAK256 PUSH21 0x6F2070726F787920746172676574A2646970667358 0x22 SLT KECCAK256 DUP10 0xE3 SWAP2 PUSH1 0xEF 0xDC 0xB1 0xAD DUP2 0xC9 SWAP1 PUSH29 0xCE15A707617BDAAC15E3A72EC1FE60031B09F86F64736F6C6343000706 STOP CALLER ",
              "sourceMap": "1580:4751:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2885:11:9;:9;:11::i;:::-;1580:4751:11;;2661:11:9;:9;:11::i;4607:111:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4607:111:11;-1:-1:-1;;;;;4607:111:11;;:::i;5104:299::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5104:299:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5104:299:11;;-1:-1:-1;5104:299:11;-1:-1:-1;5104:299:11;:::i;3865:110::-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;3865:110:11;;;;;;;;;;;;;;4191:248;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4191:248:11;-1:-1:-1;;;;;4191:248:11;;:::i;3291:101::-;;;;;;;;;;;;;:::i;2313:105:9:-;2354:17;:15;:17::i;:::-;2382:28;2392:17;:15;:17::i;:::-;2382:9;:28::i;:::-;2313:105::o;4607:111:11:-;2745:10;:8;:10::i;:::-;-1:-1:-1;;;;;2731:24:11;:10;-1:-1:-1;;;;;2731:24:11;;2727:102;;;4681:29:::1;4692:17;4681:10;:29::i;:::-;2727:102:::0;;;2806:11;:9;:11::i;:::-;4607:111;:::o;5104:299::-;2745:10;:8;:10::i;:::-;-1:-1:-1;;;;;2731:24:11;:10;-1:-1:-1;;;;;2731:24:11;;2727:102;;;5214:29:::1;5225:17;5214:10;:29::i;:::-;5315:12;5332:17;-1:-1:-1::0;;;;;5332:30:11::1;5363:4;;5332:36;;;;;;;;;;::::0;;::::1;::::0;-1:-1:-1;5332:36:11::1;::::0;-1:-1:-1;5332:36:11;;-1:-1:-1;;5332:36:11;;::::1;::::0;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5314:54;;;5387:7;5379:16;;;::::0;::::1;;2772:1;2727:102:::0;;;2806:11;:9;:11::i;:::-;5104:299;;;:::o;3865:110::-;3917:13;2745:10;:8;:10::i;:::-;-1:-1:-1;;;;;2731:24:11;:10;-1:-1:-1;;;;;2731:24:11;;2727:102;;;3950:17:::1;:15;:17::i;:::-;3943:24;;2727:102:::0;;;2806:11;:9;:11::i;:::-;3865:110;:::o;4191:248::-;2745:10;:8;:10::i;:::-;-1:-1:-1;;;;;2731:24:11;:10;-1:-1:-1;;;;;2731:24:11;;2727:102;;;-1:-1:-1;;;;;4266:22:11;::::1;4258:93;;;;-1:-1:-1::0;;;;;4258:93:11::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4367:34;4380:10;:8;:10::i;:::-;4367:34;::::0;;-1:-1:-1;;;;;4367:34:11;;::::1;::::0;;;;::::1;;::::0;::::1;::::0;;;;;;;;;::::1;4412:19;4422:8;4412:9;:19::i;3291:101::-:0;3334:20;2745:10;:8;:10::i;:::-;-1:-1:-1;;;;;2731:24:11;:10;-1:-1:-1;;;;;2731:24:11;;2727:102;;;3374:10:::1;:8;:10::i;965:616:13:-:0;1528:20;1566:8;;;965:616::o;6119:209:11:-;6205:10;:8;:10::i;:::-;-1:-1:-1;;;;;6191:24:11;:10;-1:-1:-1;;;;;6191:24:11;;;6183:103;;;;-1:-1:-1;;;;;6183:103:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6297:23;:21;:23::i;1983:224:12:-;1841:66;2184:11;;2167:35::o;913:907:9:-;1305:14;1302:1;1299;1286:34;1523:1;1520;1504:14;1501:1;1485:14;1478:5;1465:60;1602:16;1599:1;1596;1581:38;1642:6;1711:38;;;;1783:16;1780:1;1773:27;1711:38;1730:16;1727:1;1720:27;5469:221:11;2484:66;5661:11;;5639:44::o;2321:145:12:-;2384:37;2403:17;2384:18;:37::i;:::-;2433:27;;-1:-1:-1;;;;;2433:27:12;;;;;;;;2321:145;:::o;5777:216:11:-;2484:66;5953:22;5938:48::o;2554:362:12:-;2640:37;2659:17;2640:18;:37::i;:::-;2624:125;;;;-1:-1:-1;;;;;2624:125:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1841:66;2873:31;2864:47::o"
            },
            "methodIdentifiers": {
              "admin()": "f851a440",
              "changeAdmin(address)": "8f283970",
              "implementation()": "5c60da1b",
              "upgradeTo(address)": "3659cfe6",
              "upgradeToAndCall(address,bytes)": "4f1ef286"
            }
          }
        }
      },
      "contracts/openzeppelin/upgradeability/UpgradeableProxy.sol": {
        "UpgradeableProxy": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_logic",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "_data",
                  "type": "bytes"
                }
              ],
              "stateMutability": "payable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "name": "Upgraded",
              "type": "event"
            },
            {
              "stateMutability": "payable",
              "type": "fallback"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60806040526040516103383803806103388339818101604052604081101561002657600080fd5b81516020830180516040519294929383019291908464010000000082111561004d57600080fd5b90830190602082018581111561006257600080fd5b825164010000000081118282018810171561007c57600080fd5b82525081516020918201929091019080838360005b838110156100a9578181015183820152602001610091565b50505050905090810190601f1680156100d65780820380516001836020036101000a031916815260200191505b50604052506100e3915050565b6100f5826401000000006101b4810204565b8051156101ad57600082600160a060020a0316826040518082805190602001908083835b602083106101385780518252601f199092019160209182019101610119565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114610198576040519150601f19603f3d011682016040523d82523d6000602084013e61019d565b606091505b50509050806101ab57600080fd5b505b5050610249565b6101ca8164010000000061002761024382021704565b61021f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001806103026036913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b3b151590565b60ab806102576000396000f3fe608060405236601057600e6013565b005b600e5b60196025565b60256021602d565b6052565b565b3b151590565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e8080156070573d6000f35b3d6000fdfea264697066735822122010604fbb5528b2f22c277ee5647036c3d9770c26d0c5a63e3e7fa02b329d033c64736f6c634300070600335570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x338 CODESIZE SUB DUP1 PUSH2 0x338 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP3 SWAP5 SWAP3 SWAP4 DUP4 ADD SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x91 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xD6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP PUSH2 0xE3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF5 DUP3 PUSH5 0x100000000 PUSH2 0x1B4 DUP2 MUL DIV JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x138 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x119 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x19D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMPDEST POP POP PUSH2 0x249 JUMP JUMPDEST PUSH2 0x1CA DUP2 PUSH5 0x100000000 PUSH2 0x27 PUSH2 0x243 DUP3 MUL OR DIV JUMP JUMPDEST PUSH2 0x21F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x302 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SSTORE JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0xAB DUP1 PUSH2 0x257 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0x10 JUMPI PUSH1 0xE PUSH1 0x13 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xE JUMPDEST PUSH1 0x19 PUSH1 0x25 JUMP JUMPDEST PUSH1 0x25 PUSH1 0x21 PUSH1 0x2D JUMP JUMPDEST PUSH1 0x52 JUMP JUMPDEST JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x70 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT PUSH1 0x4F 0xBB SSTORE 0x28 0xB2 CALLCODE 0x2C 0x27 PUSH31 0xE5647036C3D9770C26D0C5A63E3E7FA02B329D033C64736F6C634300070600 CALLER SSTORE PUSH17 0x677261646561626C6550726F78793A206E PUSH6 0x7720696D706C PUSH6 0x6D656E746174 PUSH10 0x6F6E206973206E6F7420 PUSH2 0x2063 PUSH16 0x6E747261637400000000000000000000 ",
              "sourceMap": "701:2218:12:-:0;;;1075:370;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1075:370:12;;;;;;;;;;-1:-1:-1;1075:370:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1075:370:12;;-1:-1:-1;1138:95:12;;-1:-1:-1;;1138:95:12;;1240:26;1259:6;1240:18;;;;:26;:::i;:::-;1277:12;;:16;1273:167;;1363:12;1381:6;-1:-1:-1;;;;;1381:19:12;1401:5;1381:26;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1381:26:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1362:45;;;1424:7;1416:16;;;;;;1273:167;;1075:370;;701:2218;;2554:362;2640:37;2659:17;2640:18;;;;;;:37;:::i;:::-;2624:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1841:66;2873:31;2864:47::o;965:616:13:-;1528:20;1566:8;;;965:616::o;701:2218:12:-;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405236601057600e6013565b005b600e5b60196025565b60256021602d565b6052565b565b3b151590565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e8080156070573d6000f35b3d6000fdfea264697066735822122010604fbb5528b2f22c277ee5647036c3d9770c26d0c5a63e3e7fa02b329d033c64736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0x10 JUMPI PUSH1 0xE PUSH1 0x13 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xE JUMPDEST PUSH1 0x19 PUSH1 0x25 JUMP JUMPDEST PUSH1 0x25 PUSH1 0x21 PUSH1 0x2D JUMP JUMPDEST PUSH1 0x52 JUMP JUMPDEST JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x70 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT PUSH1 0x4F 0xBB SSTORE 0x28 0xB2 CALLCODE 0x2C 0x27 PUSH31 0xE5647036C3D9770C26D0C5A63E3E7FA02B329D033C64736F6C634300070600 CALLER ",
              "sourceMap": "701:2218:12:-:0;;;;;;2885:11:9;:9;:11::i;:::-;701:2218:12;;2661:11:9;2313:105;2354:17;:15;:17::i;:::-;2382:28;2392:17;:15;:17::i;:::-;2382:9;:28::i;:::-;2313:105::o;965:616:13:-;1528:20;1566:8;;;965:616::o;1983:224:12:-;1841:66;2184:11;;2167:35::o;913:907:9:-;1305:14;1302:1;1299;1286:34;1523:1;1520;1504:14;1501:1;1485:14;1478:5;1465:60;1602:16;1599:1;1596;1581:38;1642:6;1711:38;;;;1783:16;1780:1;1773:27;1711:38;1730:16;1727:1;1720:27"
            },
            "methodIdentifiers": {}
          }
        }
      },
      "contracts/openzeppelin/utils/Address.sol": {
        "OpenZeppelinUpgradesAddress": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220959462bd0be9e9bb3cc9067021b1f41a0ec516a187d51960a6d626161e38006964736f6c63430007060033",
              "opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 SWAP5 PUSH3 0xBD0BE9 0xE9 0xBB EXTCODECOPY 0xC9 MOD PUSH17 0x21B1F41A0EC516A187D51960A6D626161E CODESIZE STOP PUSH10 0x64736F6C634300070600 CALLER ",
              "sourceMap": "567:1016:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220959462bd0be9e9bb3cc9067021b1f41a0ec516a187d51960a6d626161e38006964736f6c63430007060033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 SWAP5 PUSH3 0xBD0BE9 0xE9 0xBB EXTCODECOPY 0xC9 MOD PUSH17 0x21B1F41A0EC516A187D51960A6D626161E CODESIZE STOP PUSH10 0x64736F6C634300070600 CALLER ",
              "sourceMap": "567:1016:13:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          }
        }
      },
      "contracts/registry/AlastriaCredentialRegistry.sol": {
        "AlastriaCredentialRegistry": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "issuerCredentialHash",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "enum AlastriaCredentialRegistry.Status",
                  "name": "status",
                  "type": "uint8"
                }
              ],
              "name": "IssuerCredentialRevoked",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "subjectCredentialHash",
                  "type": "bytes32"
                }
              ],
              "name": "SubjectCredentialDeleted",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "issuerCredentialHash",
                  "type": "bytes32"
                }
              ],
              "name": "addIssuerCredential",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "subjectCredentialHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "URI",
                  "type": "string"
                }
              ],
              "name": "addSubjectCredential",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "subjectCredentialHash",
                  "type": "bytes32"
                }
              ],
              "name": "deleteSubjectCredential",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum AlastriaCredentialRegistry.Status",
                  "name": "subjectStatus",
                  "type": "uint8"
                },
                {
                  "internalType": "enum AlastriaCredentialRegistry.Status",
                  "name": "issuerStatus",
                  "type": "uint8"
                }
              ],
              "name": "getCredentialStatus",
              "outputs": [
                {
                  "internalType": "enum AlastriaCredentialRegistry.Status",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "issuerCredentialHash",
                  "type": "bytes32"
                }
              ],
              "name": "getIssuerCredentialStatus",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "enum AlastriaCredentialRegistry.Status",
                  "name": "status",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "subject",
                  "type": "address"
                }
              ],
              "name": "getSubjectCredentialList",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "",
                  "type": "bytes32[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "subject",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "subjectCredentialHash",
                  "type": "bytes32"
                }
              ],
              "name": "getSubjectCredentialStatus",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "enum AlastriaCredentialRegistry.Status",
                  "name": "status",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_previousPublishedVersion",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "issuerCredentialList",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "previousPublishedVersion",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "subjectCredentialList",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "name": "subjectCredentialRegistry",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "enum AlastriaCredentialRegistry.Status",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "URI",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "issuerCredentialHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum AlastriaCredentialRegistry.Status",
                  "name": "status",
                  "type": "uint8"
                }
              ],
              "name": "updateCredentialStatus",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "",
                  "type": "int256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50610ca0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100e7576000357c010000000000000000000000000000000000000000000000000000000090048063aeda232a11610099578063aeda232a14610335578063c43f6b3614610361578063c4d66de81461038d578063dc11e39b146103b5578063dd517e10146103d2578063dff9a1a9146103f8578063e04ce02c14610415576100e7565b806341e61ff8146100ec5780634510b1cb1461012a57806354fd4d50146101ab57806355d64732146101b35780635faf7d94146102095780636104464f146102525780636792223d14610276575b600080fd5b6101186004803603604081101561010257600080fd5b50600160a060020a0381351690602001356104c2565b60408051918252519081900360200190f35b6101506004803603602081101561014057600080fd5b5035600160a060020a03166104f3565b6040518083815260200180602001828103825283818151815260200191508051906020019060200280838360005b8381101561019657818101518382015260200161017e565b50505050905001935050505060405180910390f35b610118610568565b6101df600480360360408110156101c957600080fd5b50600160a060020a03813516906020013561056e565b6040518083151581526020018260038111156101f757fe5b81526020019250505060405180910390f35b6102316004803603604081101561021f57600080fd5b5060ff813581169160200135166105bd565b6040518082600381111561024157fe5b815260200191505060405180910390f35b61025a610653565b60408051600160a060020a039092168252519081900360200190f35b6102a26004803603604081101561028c57600080fd5b50600160a060020a038135169060200135610662565b6040518084151581526020018360038111156102ba57fe5b815260200180602001828103825283818151815260200191508051906020019080838360005b838110156102f85781810151838201526020016102e0565b50505050905090810190601f1680156103255780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6101df6004803603604081101561034b57600080fd5b50600160a060020a03813516906020013561071b565b6101186004803603604081101561037757600080fd5b50600160a060020a03813516906020013561076a565b6103b3600480360360208110156103a357600080fd5b5035600160a060020a0316610786565b005b6103b3600480360360208110156103cb57600080fd5b5035610870565b6103b3600480360360408110156103e857600080fd5b508035906020013560ff1661091f565b6103b36004803603602081101561040e57600080fd5b5035610a36565b6103b36004803603604081101561042b57600080fd5b8135919081019060408101602082013564010000000081111561044d57600080fd5b82018360208201111561045f57600080fd5b8035906020019184600183028401116401000000008311171561048157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610abf945050505050565b600660205281600052604060002081815481106104de57600080fd5b90600052602060002001600091509150505481565b600160a060020a038116600090815260046020908152604080832080548251818502810185019093528083526060939092908290849083018282801561055857602002820191906000526020600020905b815481526020019060010190808311610544575b5050505050905091509150915091565b60015481565b60008083600160a060020a03811661058557600080fd5b505050600160a060020a03919091166000908152600360209081526040808320938352929052205460ff808216926101009092041690565b600082818160038111156105cd57fe5b101580156105e7575060038160038111156105e457fe5b11155b6105f057600080fd5b8260008160038111156105ff57fe5b101580156106195750600381600381111561061657fe5b11155b61062257600080fd5b83600381111561062e57fe5b85600381111561063a57fe5b106106475784925061064b565b8392505b505092915050565b600254600160a060020a031681565b6003602090815260009283526040808420825291835291819020805460018083018054855160026101009483161585026000190190921691909104601f810188900488028201880190965285815260ff80851697939094049093169490918301828280156107115780601f106106e657610100808354040283529160200191610711565b820191906000526020600020905b8154815290600101906020018083116106f457829003601f168201915b5050505050905083565b60008083600160a060020a03811661073257600080fd5b505050600160a060020a03919091166000908152600560209081526040808320938352929052205460ff808216926101009092041690565b600460205281600052604060002081815481106104de57600080fd5b600054610100900460ff168061079f575061079f610b95565b806107ad575060005460ff16155b610802576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610c3d602e913960400191505060405180910390fd5b600054610100900460ff1615801561082d576000805460ff1961ff0019909116610100171660011790555b60036001556002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038416179055801561086c576000805461ff00191690555b5050565b33600090815260056020908152604080832084845290915290205460ff161561089857600080fd5b6040805180820190915260018152602081016000905233600090815260056020908152604080832085845282529091208251815460ff191690151517808255918301519091829061ff0019166101008360038111156108f357fe5b021790555050336000908152600660209081526040822080546001810182559083529120019190915550565b80600081600381111561092e57fe5b101580156109485750600381600381111561094557fe5b11155b61095157600080fd5b33600090815260056020908152604080832086845290915290208054610100900460ff16600381111561098057fe5b83600381111561098c57fe5b1115610a305760018360038111156109a057fe5b14806109b7575060028360038111156109b557fe5b145b15610a3057805460ff19166001178082558390829061ff0019166101008360038111156109e057fe5b02179055507f0bc6eed115cb12ced57d22ce88a4be72a3b052cf01e5a1947a1f901f8ff26b1a848460405180838152602001826003811115610a1e57fe5b81526020019250505060405180910390a15b50505050565b3360009081526003602090815260408083208484529091529020805460ff168015610a76575060038154610100900460ff166003811115610a7357fe5b14155b1561086c57805461ff0019166103001781556040805183815290517fc83f14fb22d6787113e4b492b1b27daac6284e516a3c61d454359fd426d04c299181900360200190a15050565b33600090815260036020908152604080832085845290915290205460ff1615610ae757600080fd5b604080516060810190915260018152602081016000815260209081018390523360009081526003808352604080832087845284529091208351815460ff1916901515178082559284015190929091839161ff00191690610100908490811115610b4c57fe5b021790555060408201518051610b6c916001840191602090910190610b9b565b505033600090815260046020908152604082208054600181018255908352912001929092555050565b303b1590565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282610bd15760008555610c17565b82601f10610bea57805160ff1916838001178555610c17565b82800160010185558215610c17579182015b82811115610c17578251825591602001919060010190610bfc565b50610c23929150610c27565b5090565b5b80821115610c235760008155600101610c2856fe496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a264697066735822122012c31b9a368dea1e49c3d20fdccb7d3e2206b097ddb05172694dc291d05aac5f64736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCA0 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0xAEDA232A GT PUSH2 0x99 JUMPI DUP1 PUSH4 0xAEDA232A EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xC43F6B36 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xDC11E39B EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xDD517E10 EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0xDFF9A1A9 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xE04CE02C EQ PUSH2 0x415 JUMPI PUSH2 0xE7 JUMP JUMPDEST DUP1 PUSH4 0x41E61FF8 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x4510B1CB EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x55D64732 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x5FAF7D94 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x6104464F EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x6792223D EQ PUSH2 0x276 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x196 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x17E JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH2 0x568 JUMP JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x56E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F7 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x241 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25A PUSH2 0x653 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2BA JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2F8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2E0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x325 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x71B JUMP JUMPDEST PUSH2 0x118 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x76A JUMP JUMPDEST PUSH2 0x3B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x786 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x870 JUMP JUMPDEST PUSH2 0x3B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0xFF AND PUSH2 0x91F JUMP JUMPDEST PUSH2 0x3B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xA36 JUMP JUMPDEST PUSH2 0x3B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x44D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xABF SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 DUP3 SWAP1 DUP5 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x558 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x544 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF DUP1 DUP3 AND SWAP3 PUSH2 0x100 SWAP1 SWAP3 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5CD JUMPI INVALID JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x5E7 JUMPI POP PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5E4 JUMPI INVALID JUMPDEST GT ISZERO JUMPDEST PUSH2 0x5F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5FF JUMPI INVALID JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x619 JUMPI POP PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x616 JUMPI INVALID JUMPDEST GT ISZERO JUMPDEST PUSH2 0x622 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x62E JUMPI INVALID JUMPDEST DUP6 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x63A JUMPI INVALID JUMPDEST LT PUSH2 0x647 JUMPI DUP5 SWAP3 POP PUSH2 0x64B JUMP JUMPDEST DUP4 SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP3 MSTORE SWAP2 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP4 ADD DUP1 SLOAD DUP6 MLOAD PUSH1 0x2 PUSH2 0x100 SWAP5 DUP4 AND ISZERO DUP6 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 DIV PUSH1 0x1F DUP2 ADD DUP9 SWAP1 DIV DUP9 MUL DUP3 ADD DUP9 ADD SWAP1 SWAP7 MSTORE DUP6 DUP2 MSTORE PUSH1 0xFF DUP1 DUP6 AND SWAP8 SWAP4 SWAP1 SWAP5 DIV SWAP1 SWAP4 AND SWAP5 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x711 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x711 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6F4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x732 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF DUP1 DUP3 AND SWAP3 PUSH2 0x100 SWAP1 SWAP3 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x79F JUMPI POP PUSH2 0x79F PUSH2 0xB95 JUMP JUMPDEST DUP1 PUSH2 0x7AD JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x802 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC3D PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x82D JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x3 PUSH1 0x1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x86C JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x898 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD PUSH1 0x0 SWAP1 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO OR DUP1 DUP3 SSTORE SWAP2 DUP4 ADD MLOAD SWAP1 SWAP2 DUP3 SWAP1 PUSH2 0xFF00 NOT AND PUSH2 0x100 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8F3 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x92E JUMPI INVALID JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x948 JUMPI POP PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x945 JUMPI INVALID JUMPDEST GT ISZERO JUMPDEST PUSH2 0x951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x980 JUMPI INVALID JUMPDEST DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x98C JUMPI INVALID JUMPDEST GT ISZERO PUSH2 0xA30 JUMPI PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9A0 JUMPI INVALID JUMPDEST EQ DUP1 PUSH2 0x9B7 JUMPI POP PUSH1 0x2 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9B5 JUMPI INVALID JUMPDEST EQ JUMPDEST ISZERO PUSH2 0xA30 JUMPI DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP1 DUP3 SSTORE DUP4 SWAP1 DUP3 SWAP1 PUSH2 0xFF00 NOT AND PUSH2 0x100 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9E0 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0xBC6EED115CB12CED57D22CE88A4BE72A3B052CF01E5A1947A1F901F8FF26B1A DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA1E JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xA76 JUMPI POP PUSH1 0x3 DUP2 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA73 JUMPI INVALID JUMPDEST EQ ISZERO JUMPDEST ISZERO PUSH2 0x86C JUMPI DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x300 OR DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD PUSH32 0xC83F14FB22D6787113E4B492B1B27DAAC6284E516A3C61D454359FD426D04C29 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE DUP5 MSTORE SWAP1 SWAP2 KECCAK256 DUP4 MLOAD DUP2 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO OR DUP1 DUP3 SSTORE SWAP3 DUP5 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH2 0xFF00 NOT AND SWAP1 PUSH2 0x100 SWAP1 DUP5 SWAP1 DUP2 GT ISZERO PUSH2 0xB4C JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0xB6C SWAP2 PUSH1 0x1 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xB9B JUMP JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD SWAP3 SWAP1 SWAP3 SSTORE POP POP JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xBD1 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xC17 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xBEA JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xC17 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xC17 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xC17 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xBFC JUMP JUMPDEST POP PUSH2 0xC23 SWAP3 SWAP2 POP PUSH2 0xC27 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xC23 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xC28 JUMP INVALID 0x49 PUSH15 0x697469616C697A61626C653A20636F PUSH15 0x747261637420697320616C72656164 PUSH26 0x20696E697469616C697A6564A264697066735822122012C31B9A CALLDATASIZE DUP14 0xEA 0x1E 0x49 0xC3 0xD2 0xF 0xDC 0xCB PUSH30 0x3E2206B097DDB05172694DC291D05AAC5F64736F6C634300070600330000 ",
              "sourceMap": "111:5858:14:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100e7576000357c010000000000000000000000000000000000000000000000000000000090048063aeda232a11610099578063aeda232a14610335578063c43f6b3614610361578063c4d66de81461038d578063dc11e39b146103b5578063dd517e10146103d2578063dff9a1a9146103f8578063e04ce02c14610415576100e7565b806341e61ff8146100ec5780634510b1cb1461012a57806354fd4d50146101ab57806355d64732146101b35780635faf7d94146102095780636104464f146102525780636792223d14610276575b600080fd5b6101186004803603604081101561010257600080fd5b50600160a060020a0381351690602001356104c2565b60408051918252519081900360200190f35b6101506004803603602081101561014057600080fd5b5035600160a060020a03166104f3565b6040518083815260200180602001828103825283818151815260200191508051906020019060200280838360005b8381101561019657818101518382015260200161017e565b50505050905001935050505060405180910390f35b610118610568565b6101df600480360360408110156101c957600080fd5b50600160a060020a03813516906020013561056e565b6040518083151581526020018260038111156101f757fe5b81526020019250505060405180910390f35b6102316004803603604081101561021f57600080fd5b5060ff813581169160200135166105bd565b6040518082600381111561024157fe5b815260200191505060405180910390f35b61025a610653565b60408051600160a060020a039092168252519081900360200190f35b6102a26004803603604081101561028c57600080fd5b50600160a060020a038135169060200135610662565b6040518084151581526020018360038111156102ba57fe5b815260200180602001828103825283818151815260200191508051906020019080838360005b838110156102f85781810151838201526020016102e0565b50505050905090810190601f1680156103255780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6101df6004803603604081101561034b57600080fd5b50600160a060020a03813516906020013561071b565b6101186004803603604081101561037757600080fd5b50600160a060020a03813516906020013561076a565b6103b3600480360360208110156103a357600080fd5b5035600160a060020a0316610786565b005b6103b3600480360360208110156103cb57600080fd5b5035610870565b6103b3600480360360408110156103e857600080fd5b508035906020013560ff1661091f565b6103b36004803603602081101561040e57600080fd5b5035610a36565b6103b36004803603604081101561042b57600080fd5b8135919081019060408101602082013564010000000081111561044d57600080fd5b82018360208201111561045f57600080fd5b8035906020019184600183028401116401000000008311171561048157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610abf945050505050565b600660205281600052604060002081815481106104de57600080fd5b90600052602060002001600091509150505481565b600160a060020a038116600090815260046020908152604080832080548251818502810185019093528083526060939092908290849083018282801561055857602002820191906000526020600020905b815481526020019060010190808311610544575b5050505050905091509150915091565b60015481565b60008083600160a060020a03811661058557600080fd5b505050600160a060020a03919091166000908152600360209081526040808320938352929052205460ff808216926101009092041690565b600082818160038111156105cd57fe5b101580156105e7575060038160038111156105e457fe5b11155b6105f057600080fd5b8260008160038111156105ff57fe5b101580156106195750600381600381111561061657fe5b11155b61062257600080fd5b83600381111561062e57fe5b85600381111561063a57fe5b106106475784925061064b565b8392505b505092915050565b600254600160a060020a031681565b6003602090815260009283526040808420825291835291819020805460018083018054855160026101009483161585026000190190921691909104601f810188900488028201880190965285815260ff80851697939094049093169490918301828280156107115780601f106106e657610100808354040283529160200191610711565b820191906000526020600020905b8154815290600101906020018083116106f457829003601f168201915b5050505050905083565b60008083600160a060020a03811661073257600080fd5b505050600160a060020a03919091166000908152600560209081526040808320938352929052205460ff808216926101009092041690565b600460205281600052604060002081815481106104de57600080fd5b600054610100900460ff168061079f575061079f610b95565b806107ad575060005460ff16155b610802576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610c3d602e913960400191505060405180910390fd5b600054610100900460ff1615801561082d576000805460ff1961ff0019909116610100171660011790555b60036001556002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038416179055801561086c576000805461ff00191690555b5050565b33600090815260056020908152604080832084845290915290205460ff161561089857600080fd5b6040805180820190915260018152602081016000905233600090815260056020908152604080832085845282529091208251815460ff191690151517808255918301519091829061ff0019166101008360038111156108f357fe5b021790555050336000908152600660209081526040822080546001810182559083529120019190915550565b80600081600381111561092e57fe5b101580156109485750600381600381111561094557fe5b11155b61095157600080fd5b33600090815260056020908152604080832086845290915290208054610100900460ff16600381111561098057fe5b83600381111561098c57fe5b1115610a305760018360038111156109a057fe5b14806109b7575060028360038111156109b557fe5b145b15610a3057805460ff19166001178082558390829061ff0019166101008360038111156109e057fe5b02179055507f0bc6eed115cb12ced57d22ce88a4be72a3b052cf01e5a1947a1f901f8ff26b1a848460405180838152602001826003811115610a1e57fe5b81526020019250505060405180910390a15b50505050565b3360009081526003602090815260408083208484529091529020805460ff168015610a76575060038154610100900460ff166003811115610a7357fe5b14155b1561086c57805461ff0019166103001781556040805183815290517fc83f14fb22d6787113e4b492b1b27daac6284e516a3c61d454359fd426d04c299181900360200190a15050565b33600090815260036020908152604080832085845290915290205460ff1615610ae757600080fd5b604080516060810190915260018152602081016000815260209081018390523360009081526003808352604080832087845284529091208351815460ff1916901515178082559284015190929091839161ff00191690610100908490811115610b4c57fe5b021790555060408201518051610b6c916001840191602090910190610b9b565b505033600090815260046020908152604082208054600181018255908352912001929092555050565b303b1590565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282610bd15760008555610c17565b82601f10610bea57805160ff1916838001178555610c17565b82800160010185558215610c17579182015b82811115610c17578251825591602001919060010190610bfc565b50610c23929150610c27565b5090565b5b80821115610c235760008155600101610c2856fe496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a264697066735822122012c31b9a368dea1e49c3d20fdccb7d3e2206b097ddb05172694dc291d05aac5f64736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0xAEDA232A GT PUSH2 0x99 JUMPI DUP1 PUSH4 0xAEDA232A EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xC43F6B36 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xDC11E39B EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xDD517E10 EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0xDFF9A1A9 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xE04CE02C EQ PUSH2 0x415 JUMPI PUSH2 0xE7 JUMP JUMPDEST DUP1 PUSH4 0x41E61FF8 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x4510B1CB EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x55D64732 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x5FAF7D94 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x6104464F EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x6792223D EQ PUSH2 0x276 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x196 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x17E JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH2 0x568 JUMP JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x56E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F7 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x241 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25A PUSH2 0x653 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2BA JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2F8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2E0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x325 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x71B JUMP JUMPDEST PUSH2 0x118 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x76A JUMP JUMPDEST PUSH2 0x3B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x786 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x870 JUMP JUMPDEST PUSH2 0x3B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0xFF AND PUSH2 0x91F JUMP JUMPDEST PUSH2 0x3B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xA36 JUMP JUMPDEST PUSH2 0x3B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x44D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xABF SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 DUP3 SWAP1 DUP5 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x558 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x544 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF DUP1 DUP3 AND SWAP3 PUSH2 0x100 SWAP1 SWAP3 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5CD JUMPI INVALID JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x5E7 JUMPI POP PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5E4 JUMPI INVALID JUMPDEST GT ISZERO JUMPDEST PUSH2 0x5F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5FF JUMPI INVALID JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x619 JUMPI POP PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x616 JUMPI INVALID JUMPDEST GT ISZERO JUMPDEST PUSH2 0x622 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x62E JUMPI INVALID JUMPDEST DUP6 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x63A JUMPI INVALID JUMPDEST LT PUSH2 0x647 JUMPI DUP5 SWAP3 POP PUSH2 0x64B JUMP JUMPDEST DUP4 SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP3 MSTORE SWAP2 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP4 ADD DUP1 SLOAD DUP6 MLOAD PUSH1 0x2 PUSH2 0x100 SWAP5 DUP4 AND ISZERO DUP6 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 DIV PUSH1 0x1F DUP2 ADD DUP9 SWAP1 DIV DUP9 MUL DUP3 ADD DUP9 ADD SWAP1 SWAP7 MSTORE DUP6 DUP2 MSTORE PUSH1 0xFF DUP1 DUP6 AND SWAP8 SWAP4 SWAP1 SWAP5 DIV SWAP1 SWAP4 AND SWAP5 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x711 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x711 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6F4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x732 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF DUP1 DUP3 AND SWAP3 PUSH2 0x100 SWAP1 SWAP3 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x79F JUMPI POP PUSH2 0x79F PUSH2 0xB95 JUMP JUMPDEST DUP1 PUSH2 0x7AD JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x802 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC3D PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x82D JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x3 PUSH1 0x1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x86C JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x898 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD PUSH1 0x0 SWAP1 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO OR DUP1 DUP3 SSTORE SWAP2 DUP4 ADD MLOAD SWAP1 SWAP2 DUP3 SWAP1 PUSH2 0xFF00 NOT AND PUSH2 0x100 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8F3 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x92E JUMPI INVALID JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x948 JUMPI POP PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x945 JUMPI INVALID JUMPDEST GT ISZERO JUMPDEST PUSH2 0x951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x980 JUMPI INVALID JUMPDEST DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x98C JUMPI INVALID JUMPDEST GT ISZERO PUSH2 0xA30 JUMPI PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9A0 JUMPI INVALID JUMPDEST EQ DUP1 PUSH2 0x9B7 JUMPI POP PUSH1 0x2 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9B5 JUMPI INVALID JUMPDEST EQ JUMPDEST ISZERO PUSH2 0xA30 JUMPI DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP1 DUP3 SSTORE DUP4 SWAP1 DUP3 SWAP1 PUSH2 0xFF00 NOT AND PUSH2 0x100 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9E0 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0xBC6EED115CB12CED57D22CE88A4BE72A3B052CF01E5A1947A1F901F8FF26B1A DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA1E JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xA76 JUMPI POP PUSH1 0x3 DUP2 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA73 JUMPI INVALID JUMPDEST EQ ISZERO JUMPDEST ISZERO PUSH2 0x86C JUMPI DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x300 OR DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD PUSH32 0xC83F14FB22D6787113E4B492B1B27DAAC6284E516A3C61D454359FD426D04C29 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE DUP5 MSTORE SWAP1 SWAP2 KECCAK256 DUP4 MLOAD DUP2 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO OR DUP1 DUP3 SSTORE SWAP3 DUP5 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH2 0xFF00 NOT AND SWAP1 PUSH2 0x100 SWAP1 DUP5 SWAP1 DUP2 GT ISZERO PUSH2 0xB4C JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0xB6C SWAP2 PUSH1 0x1 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xB9B JUMP JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD SWAP3 SWAP1 SWAP3 SSTORE POP POP JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xBD1 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xC17 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xBEA JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xC17 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xC17 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xC17 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xBFC JUMP JUMPDEST POP PUSH2 0xC23 SWAP3 SWAP2 POP PUSH2 0xC27 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xC23 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xC28 JUMP INVALID 0x49 PUSH15 0x697469616C697A61626C653A20636F PUSH15 0x747261637420697320616C72656164 PUSH26 0x20696E697469616C697A6564A264697066735822122012C31B9A CALLDATASIZE DUP14 0xEA 0x1E 0x49 0xC3 0xD2 0xF 0xDC 0xCB PUSH30 0x3E2206B097DDB05172694DC291D05AAC5F64736F6C634300070600330000 ",
              "sourceMap": "111:5858:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1977:57;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1977:57:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4345:191;;;;;;;;;;;;;;;;-1:-1:-1;4345:191:14;-1:-1:-1;;;;;4345:191:14;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1021:18;;;:::i;4031:308::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4031:308:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5668:299;;;;;;;;;;;;;;;;-1:-1:-1;5668:299:14;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1045:39;;;:::i;:::-;;;;-1:-1:-1;;;;;1045:39:14;;;;;;;;;;;;;;1572:90;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1572:90:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5231:300;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5231:300:14;;;;;;;;:::i;1668:58::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1668:58:14;;;;;;;;:::i;2614:164::-;;;;;;;;;;;;;;;;-1:-1:-1;2614:164:14;-1:-1:-1;;;;;2614:164:14;;:::i;:::-;;3157:334;;;;;;;;;;;;;;;;-1:-1:-1;3157:334:14;;:::i;4542:561::-;;;;;;;;;;;;;;;;-1:-1:-1;4542:561:14;;;;;;;;;:::i;3497:406::-;;;;;;;;;;;;;;;;-1:-1:-1;3497:406:14;;:::i;2784:367::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2784:367:14;;-1:-1:-1;2784:367:14;;-1:-1:-1;;;;;2784:367:14:i;1977:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4345:191::-;-1:-1:-1;;;;;4459:30:14;;4417:4;4459:30;;;:21;:30;;;;;;;;:37;;4451:78;;;;;;;;;;;;;;;4423:16;;4459:37;;4451:78;4459:30;;:37;;4451:78;;4459:30;:37;4451:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4345:191;;;:::o;1021:18::-;;;;:::o;4031:308::-;4158:11;;4140:7;-1:-1:-1;;;;;2351:18:14;;2343:27;;;;;;-1:-1:-1;;;;;;;;4230:34:14;;;::::1;4196:31;4230:34:::0;;;:25:::1;:34;::::0;;;;;;;:57;;;;;;;4305:12;::::1;::::0;;::::1;::::0;::::1;4319::::0;;::::1;;::::0;4031:308::o;5668:299::-;5814:6;5764:13;5814:6;2506;:22;;;;;;;;;;:47;;;;-1:-1:-1;1393:23:14;2532:6;:21;;;;;;;;;;2506:47;2497:57;;;;;;5791:12;1345::::1;2506:6;:22;;;;;;;;;;:47;;;;-1:-1:-1::0;1393:23:14::1;2532:6;:21;;;;;;;;;;2506:47;2497:57;;;::::0;::::1;;5852:12:::2;5835:29;;;;;;;;:13;:29;;;;;;;;;5831:130;;5887:13;5880:20;;;;5831:130;5938:12;5931:19;;5831:130;2564:1:::1;5668:299:::0;;;;;:::o;1045:39::-;;;-1:-1:-1;;;;;1045:39:14;;:::o;1572:90::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1572:90:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5231:300::-;5354:11;;5337:6;-1:-1:-1;;;;;2351:18:14;;2343:27;;;;;;-1:-1:-1;;;;;;;;5425:32:14;;;::::1;5392:30;5425:32:::0;;;:24:::1;:32;::::0;;;;;;;:54;;;;;;;5497:12;::::1;::::0;;::::1;::::0;::::1;5511::::0;;::::1;;::::0;5231:300::o;1668:58::-;;;;;;;;;;;;;;;;;;;;2614:164;1472:13:7;;;;;;;;:33;;;1489:16;:14;:16::i;:::-;1472:50;;;-1:-1:-1;1510:12:7;;;;1509:13;1472:50;1464:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1584:19;1607:13;;;;;;1606:14;1630:98;;;;1664:13;:20;;-1:-1:-1;;;;1664:20:7;;;;;1698:19;1680:4;1698:19;;;1630:98;2708:1:14::1;2698:7;:11:::0;2719:24:::1;:52:::0;;-1:-1:-1;;2719:52:14::1;-1:-1:-1::0;;;;;2719:52:14;::::1;;::::0;;1750:66:7;;;;1800:5;1784:21;;-1:-1:-1;;1784:21:7;;;1750:66;2614:164:14;;:::o;3157:334::-;3267:10;3242:36;;;;:24;:36;;;;;;;;:58;;;;;;;;:65;;;3241:66;3233:75;;;;;;3379:36;;;;;;;;;3396:4;3379:36;;;;;-1:-1:-1;3379:36:14;;3343:10;3318:36;;;;:24;:36;;;;;;;;:58;;;;;;;;:97;;;;-1:-1:-1;;3318:97:14;;;;;;;;;;;;:58;;;;-1:-1:-1;;3318:97:14;;;;;;;;;;;;;;;-1:-1:-1;;3446:10:14;3425:32;;;;:20;:32;;;;;;;:59;;;;;;;;;;;;;;;;;-1:-1:-1;3157:334:14:o;4542:561::-;4632:6;1345:12;2506:6;:22;;;;;;;;;;:47;;;;-1:-1:-1;1393:23:14;2532:6;:21;;;;;;;;;;2506:47;2497:57;;;;;;4715:10:::1;4657:30;4690:36:::0;;;:24:::1;:36;::::0;;;;;;;:58;;;;;;;;4832:12;;::::1;::::0;::::1;;;4823:21;::::0;::::1;;;;;;:6;:21;;;;;;;;;4819:278;;;4874:16;4864:6;:26;;;;;;;;;:54;;;-1:-1:-1::0;4904:14:14::1;4894:6;:24;;;;;;;;;4864:54;4860:227;;;4938:19:::0;;-1:-1:-1;;4938:19:14::1;4953:4;4938:19;::::0;;;4990:6;;4938:5;;-1:-1:-1;;4975:21:14::1;4938:19;4990:6:::0;4975:21:::1;::::0;::::1;;;;;;;;;;;5019:53;5043:20;5065:6;5019:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4860:227;2564:1;4542:561:::0;;;:::o;3497:406::-;3638:10;3578:31;3612:37;;;:25;:37;;;;;;;;:60;;;;;;;;3711:12;;;;:55;;;;-1:-1:-1;3743:23:14;3727:12;;;;;;;:39;;;;;;;;;;3711:55;3707:190;;;3782:38;;-1:-1:-1;;3782:38:14;;;;;3839:47;;;;;;;;;;;;;;;;;3497:406;;:::o;2784:367::-;2916:10;2890:37;;;;:25;:37;;;;;;;;:60;;;;;;;;:67;;;2889:68;2881:77;;;;;;3031:42;;;;;;;;;3049:4;3031:42;;;;;-1:-1:-1;3031:42:14;;;;;;;;;2994:10;-1:-1:-1;2968:37:14;;;:25;:37;;;;;;;:60;;;;;;;;:105;;;;-1:-1:-1;;2968:105:14;;;;;;;;;;;;:60;;:105;;:60;;-1:-1:-1;;2968:105:14;;;;;;;;;;;;;;;;;-1:-1:-1;2968:105:14;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;3105:10:14;3083:33;;;;:21;:33;;;;;;;:61;;;;;;;;;;;;;;;;;-1:-1:-1;;2784:367:14:o;1912:593:7:-;2348:4;2456:17;2491:7;1912:593;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "addIssuerCredential(bytes32)": "dc11e39b",
              "addSubjectCredential(bytes32,string)": "e04ce02c",
              "deleteSubjectCredential(bytes32)": "dff9a1a9",
              "getCredentialStatus(uint8,uint8)": "5faf7d94",
              "getIssuerCredentialStatus(address,bytes32)": "aeda232a",
              "getSubjectCredentialList(address)": "4510b1cb",
              "getSubjectCredentialStatus(address,bytes32)": "55d64732",
              "initialize(address)": "c4d66de8",
              "issuerCredentialList(address,uint256)": "41e61ff8",
              "previousPublishedVersion()": "6104464f",
              "subjectCredentialList(address,uint256)": "c43f6b36",
              "subjectCredentialRegistry(address,bytes32)": "6792223d",
              "updateCredentialStatus(bytes32,uint8)": "dd517e10",
              "version()": "54fd4d50"
            }
          }
        }
      },
      "contracts/registry/AlastriaPresentationRegistry.sol": {
        "AlastriaPresentationRegistry": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "enum AlastriaPresentationRegistry.Status",
                  "name": "status",
                  "type": "uint8"
                }
              ],
              "name": "PresentationUpdated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "subjectPresentationHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "URI",
                  "type": "string"
                }
              ],
              "name": "addSubjectPresentation",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum AlastriaPresentationRegistry.Status",
                  "name": "subjectStatus",
                  "type": "uint8"
                },
                {
                  "internalType": "enum AlastriaPresentationRegistry.Status",
                  "name": "receiverStatus",
                  "type": "uint8"
                }
              ],
              "name": "getPresentationStatus",
              "outputs": [
                {
                  "internalType": "enum AlastriaPresentationRegistry.Status",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "receiverPresentationHash",
                  "type": "bytes32"
                }
              ],
              "name": "getReceiverPresentationStatus",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "enum AlastriaPresentationRegistry.Status",
                  "name": "status",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "subject",
                  "type": "address"
                }
              ],
              "name": "getSubjectPresentationList",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "",
                  "type": "bytes32[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "subject",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "subjectPresentationHash",
                  "type": "bytes32"
                }
              ],
              "name": "getSubjectPresentationStatus",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "enum AlastriaPresentationRegistry.Status",
                  "name": "status",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_previousPublishedVersion",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "previousPublishedVersion",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "subjectPresentationListRegistry",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "name": "subjectPresentationRegistry",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "enum AlastriaPresentationRegistry.Status",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "URI",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "receiverPresentationHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum AlastriaPresentationRegistry.Status",
                  "name": "status",
                  "type": "uint8"
                }
              ],
              "name": "updateReceiverPresentation",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "subjectPresentationHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum AlastriaPresentationRegistry.Status",
                  "name": "status",
                  "type": "uint8"
                }
              ],
              "name": "updateSubjectPresentation",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "",
                  "type": "int256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "61010060405260016080818152600060a081905260c09290925260e09190915261002d90600390600461007c565b5060408051608081018252600080825260016020830181905292820152606081019190915261005f906004908161007c565b506005805460ff1916905534801561007657600080fd5b50610123565b6001830191839082156100fe5791602002820160005b838211156100cf57835183826101000a81548160ff0219169083151502179055509260200192600101602081600001049283019260010302610092565b80156100fc5782816101000a81549060ff02191690556001016020816000010492830192600103026100cf565b505b5061010a92915061010e565b5090565b5b8082111561010a576000815560010161010f565b610bf6806101326000396000f3fe608060405234801561001057600080fd5b50600436106100d1576000357c0100000000000000000000000000000000000000000000000000000000900480636104464f1161008e5780636104464f146103235780639373014a14610347578063c00dcd0e14610373578063c4d66de8146103f4578063e47345931461041a578063e64af93814610446576100d1565b8063034f8408146100d65780631e54e3251461011f5780633000dc39146101de5780634e3a5de5146102065780635205080f146102b357806354fd4d5014610309575b600080fd5b6100fe600480360360408110156100ec57600080fd5b5060ff8135811691602001351661046c565b6040518082600381111561010e57fe5b815260200191505060405180910390f35b61014b6004803603604081101561013557600080fd5b50600160a060020a038135169060200135610502565b60405180841515815260200183600381111561016357fe5b815260200180602001828103825283818151815260200191508051906020019080838360005b838110156101a1578181015183820152602001610189565b50505050905090810190601f1680156101ce5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b610204600480360360408110156101f457600080fd5b508035906020013560ff166105bb565b005b6102046004803603604081101561021c57600080fd5b8135919081019060408101602082013564010000000081111561023e57600080fd5b82018360208201111561025057600080fd5b8035906020019184600183028401116401000000008311171561027257600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506106f2945050505050565b6102df600480360360408110156102c957600080fd5b50600160a060020a0381351690602001356107c3565b6040518083151581526020018260038111156102f757fe5b81526020019250505060405180910390f35b610311610812565b60408051918252519081900360200190f35b61032b610818565b60408051600160a060020a039092168252519081900360200190f35b6102df6004803603604081101561035d57600080fd5b50600160a060020a038135169060200135610827565b6103996004803603602081101561038957600080fd5b5035600160a060020a0316610876565b6040518083815260200180602001828103825283818151815260200191508051906020019060200280838360005b838110156103df5781810151838201526020016103c7565b50505050905001935050505060405180910390f35b6102046004803603602081101561040a57600080fd5b5035600160a060020a03166108eb565b6103116004803603604081101561043057600080fd5b50600160a060020a0381351690602001356109d5565b6102046004803603604081101561045c57600080fd5b508035906020013560ff16610a06565b6000828181600381111561047c57fe5b101580156104965750600381600381111561049357fe5b11155b61049f57600080fd5b8260008160038111156104ae57fe5b101580156104c8575060038160038111156104c557fe5b11155b6104d157600080fd5b8360038111156104dd57fe5b8560038111156104e957fe5b106104f6578492506104fa565b8392505b505092915050565b6006602090815260009283526040808420825291835291819020805460018083018054855160026101009483161585026000190190921691909104601f810188900488028201880190965285815260ff80851697939094049093169490918301828280156105b15780601f10610586576101008083540402835291602001916105b1565b820191906000526020600020905b81548152906001019060200180831161059457829003601f168201915b5050505050905083565b8060008160038111156105ca57fe5b101580156105e4575060038160038111156105e157fe5b11155b6105ed57600080fd5b336000908152600860209081526040808320868452909152902060055460ff1615801561063957508054610100900460ff16600381111561062a57fe5b83600381111561063657fe5b11155b1561064457506106ed565b600483600381111561065257fe5b6004811061065c57fe5b602081049091015460ff601f9092166101000a900416156106eb57805460ff19166001178082558390829061ff00191661010083600381111561069b57fe5b02179055507f52035ff46a15e119b23cfbf756f83f68ee8740523a40b78f621fdd44f091fb388484604051808381526020018260038111156106d957fe5b81526020019250505060405180910390a15b505b505050565b33600090815260066020908152604080832085845290915290205460ff161561071a57600080fd5b60408051606081019091526001815260208101600081526020908101839052336000908152600682526040808220868352835290208251815460ff191690151517808255918301519091829061ff00191661010083600381111561077a57fe5b02179055506040820151805161079a916001840191602090910190610af1565b505033600090815260076020908152604082208054600181018255908352912001929092555050565b60008083600160a060020a0381166107da57600080fd5b505050600160a060020a03919091166000908152600660209081526040808320938352929052205460ff808216926101009092041690565b60015481565b600254600160a060020a031681565b60008083600160a060020a03811661083e57600080fd5b505050600160a060020a03919091166000908152600860209081526040808320938352929052205460ff808216926101009092041690565b600160a060020a03811660009081526007602090815260408083208054825181850281018501909352808352606093909290829084908301828280156108db57602002820191906000526020600020905b8154815260200190600101908083116108c7575b5050505050905091509150915091565b600054610100900460ff16806109045750610904610aeb565b80610912575060005460ff16155b610967576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610b93602e913960400191505060405180910390fd5b600054610100900460ff16158015610992576000805460ff1961ff0019909116610100171660011790555b60046001556002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03841617905580156109d1576000805461ff00191690555b5050565b600760205281600052604060002081815481106109f157600080fd5b90600052602060002001600091509150505481565b806000816003811115610a1557fe5b10158015610a2f57506003816003811115610a2c57fe5b11155b610a3857600080fd5b3360009081526006602090815260408083208684529091529020805460ff16610a6157506106ed565b60055460ff16158015610a9357508054610100900460ff166003811115610a8457fe5b836003811115610a9057fe5b11155b15610a9e57506106ed565b6003836003811115610aac57fe5b60048110610ab657fe5b602081049091015460ff601f9092166101000a900416156106eb5780548390829061ff00191661010083600381111561069b57fe5b303b1590565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282610b275760008555610b6d565b82601f10610b4057805160ff1916838001178555610b6d565b82800160010185558215610b6d579182015b82811115610b6d578251825591602001919060010190610b52565b50610b79929150610b7d565b5090565b5b80821115610b795760008155600101610b7e56fe496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a264697066735822122054fbc04bb3d899a5ff91d78a4fe6134b3154b4cb6187124e0b3be069ae58b58e64736f6c63430007060033",
              "opcodes": "PUSH2 0x100 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x80 DUP2 DUP2 MSTORE PUSH1 0x0 PUSH1 0xA0 DUP2 SWAP1 MSTORE PUSH1 0xC0 SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xE0 SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x2D SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x4 PUSH2 0x7C JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x5F SWAP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x7C JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SWAP2 DUP4 SWAP1 DUP3 ISZERO PUSH2 0xFE JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH2 0xCF JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x1 ADD PUSH1 0x20 DUP2 PUSH1 0x0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x92 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFC JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 ADD PUSH1 0x20 DUP2 PUSH1 0x0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0xCF JUMP JUMPDEST POP JUMPDEST POP PUSH2 0x10A SWAP3 SWAP2 POP PUSH2 0x10E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x10A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0xBF6 DUP1 PUSH2 0x132 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0x6104464F GT PUSH2 0x8E JUMPI DUP1 PUSH4 0x6104464F EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x9373014A EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xC00DCD0E EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xE4734593 EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0xE64AF938 EQ PUSH2 0x446 JUMPI PUSH2 0xD1 JUMP JUMPDEST DUP1 PUSH4 0x34F8408 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x1E54E325 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x3000DC39 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x4E3A5DE5 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x5205080F EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x309 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10E JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x163 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x189 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1CE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0xFF AND PUSH2 0x5BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x6F2 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2F7 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x311 PUSH2 0x812 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x32B PUSH2 0x818 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x827 JUMP JUMPDEST PUSH2 0x399 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x876 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3DF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3C7 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x9D5 JUMP JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0xFF AND PUSH2 0xA06 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x47C JUMPI INVALID JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x496 JUMPI POP PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x493 JUMPI INVALID JUMPDEST GT ISZERO JUMPDEST PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4AE JUMPI INVALID JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x4C8 JUMPI POP PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4C5 JUMPI INVALID JUMPDEST GT ISZERO JUMPDEST PUSH2 0x4D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4DD JUMPI INVALID JUMPDEST DUP6 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4E9 JUMPI INVALID JUMPDEST LT PUSH2 0x4F6 JUMPI DUP5 SWAP3 POP PUSH2 0x4FA JUMP JUMPDEST DUP4 SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP3 MSTORE SWAP2 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP4 ADD DUP1 SLOAD DUP6 MLOAD PUSH1 0x2 PUSH2 0x100 SWAP5 DUP4 AND ISZERO DUP6 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 DIV PUSH1 0x1F DUP2 ADD DUP9 SWAP1 DIV DUP9 MUL DUP3 ADD DUP9 ADD SWAP1 SWAP7 MSTORE DUP6 DUP2 MSTORE PUSH1 0xFF DUP1 DUP6 AND SWAP8 SWAP4 SWAP1 SWAP5 DIV SWAP1 SWAP4 AND SWAP5 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x5B1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x586 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5B1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x594 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5CA JUMPI INVALID JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x5E4 JUMPI POP PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5E1 JUMPI INVALID JUMPDEST GT ISZERO JUMPDEST PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x639 JUMPI POP DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x62A JUMPI INVALID JUMPDEST DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x636 JUMPI INVALID JUMPDEST GT ISZERO JUMPDEST ISZERO PUSH2 0x644 JUMPI POP PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x4 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x652 JUMPI INVALID JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x65C JUMPI INVALID JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND ISZERO PUSH2 0x6EB JUMPI DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP1 DUP3 SSTORE DUP4 SWAP1 DUP3 SWAP1 PUSH2 0xFF00 NOT AND PUSH2 0x100 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x69B JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x52035FF46A15E119B23CFBF756F83F68EE8740523A40B78F621FDD44F091FB38 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6D9 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x71A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP4 MSTORE DUP4 MSTORE SWAP1 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO OR DUP1 DUP3 SSTORE SWAP2 DUP4 ADD MLOAD SWAP1 SWAP2 DUP3 SWAP1 PUSH2 0xFF00 NOT AND PUSH2 0x100 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x77A JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x79A SWAP2 PUSH1 0x1 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xAF1 JUMP JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD SWAP3 SWAP1 SWAP3 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x7DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF DUP1 DUP3 AND SWAP3 PUSH2 0x100 SWAP1 SWAP3 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x83E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF DUP1 DUP3 AND SWAP3 PUSH2 0x100 SWAP1 SWAP3 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 DUP3 SWAP1 DUP5 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x8DB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x8C7 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x904 JUMPI POP PUSH2 0x904 PUSH2 0xAEB JUMP JUMPDEST DUP1 PUSH2 0x912 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x967 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB93 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x992 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x4 PUSH1 0x1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x9D1 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA15 JUMPI INVALID JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0xA2F JUMPI POP PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA2C JUMPI INVALID JUMPDEST GT ISZERO JUMPDEST PUSH2 0xA38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0xA61 JUMPI POP PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xA93 JUMPI POP DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA84 JUMPI INVALID JUMPDEST DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA90 JUMPI INVALID JUMPDEST GT ISZERO JUMPDEST ISZERO PUSH2 0xA9E JUMPI POP PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x3 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xAAC JUMPI INVALID JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0xAB6 JUMPI INVALID JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND ISZERO PUSH2 0x6EB JUMPI DUP1 SLOAD DUP4 SWAP1 DUP3 SWAP1 PUSH2 0xFF00 NOT AND PUSH2 0x100 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x69B JUMPI INVALID JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xB27 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xB6D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xB40 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xB6D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xB6D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB6D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB52 JUMP JUMPDEST POP PUSH2 0xB79 SWAP3 SWAP2 POP PUSH2 0xB7D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xB79 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xB7E JUMP INVALID 0x49 PUSH15 0x697469616C697A61626C653A20636F PUSH15 0x747261637420697320616C72656164 PUSH26 0x20696E697469616C697A6564A264697066735822122054FBC04B 0xB3 0xD8 SWAP10 0xA5 SELFDESTRUCT SWAP2 0xD7 DUP11 0x4F 0xE6 SGT 0x4B BALANCE SLOAD 0xB4 0xCB PUSH2 0x8712 0x4E SIGNEXTEND EXTCODESIZE 0xE0 PUSH10 0xAE58B58E64736F6C6343 STOP SMOD MOD STOP CALLER ",
              "sourceMap": "1079:99:15:-:0;112:5838;1079:99;1124:4;112:5838;1079:99;;;-1:-1:-1;1079:99:15;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1184:100:15;;;;;;;;-1:-1:-1;1184:100:15;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1290:35:15;;;-1:-1:-1;;1290:35:15;;;112:5838;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;112:5838:15;;;-1:-1:-1;112:5838:15;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100d1576000357c0100000000000000000000000000000000000000000000000000000000900480636104464f1161008e5780636104464f146103235780639373014a14610347578063c00dcd0e14610373578063c4d66de8146103f4578063e47345931461041a578063e64af93814610446576100d1565b8063034f8408146100d65780631e54e3251461011f5780633000dc39146101de5780634e3a5de5146102065780635205080f146102b357806354fd4d5014610309575b600080fd5b6100fe600480360360408110156100ec57600080fd5b5060ff8135811691602001351661046c565b6040518082600381111561010e57fe5b815260200191505060405180910390f35b61014b6004803603604081101561013557600080fd5b50600160a060020a038135169060200135610502565b60405180841515815260200183600381111561016357fe5b815260200180602001828103825283818151815260200191508051906020019080838360005b838110156101a1578181015183820152602001610189565b50505050905090810190601f1680156101ce5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b610204600480360360408110156101f457600080fd5b508035906020013560ff166105bb565b005b6102046004803603604081101561021c57600080fd5b8135919081019060408101602082013564010000000081111561023e57600080fd5b82018360208201111561025057600080fd5b8035906020019184600183028401116401000000008311171561027257600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506106f2945050505050565b6102df600480360360408110156102c957600080fd5b50600160a060020a0381351690602001356107c3565b6040518083151581526020018260038111156102f757fe5b81526020019250505060405180910390f35b610311610812565b60408051918252519081900360200190f35b61032b610818565b60408051600160a060020a039092168252519081900360200190f35b6102df6004803603604081101561035d57600080fd5b50600160a060020a038135169060200135610827565b6103996004803603602081101561038957600080fd5b5035600160a060020a0316610876565b6040518083815260200180602001828103825283818151815260200191508051906020019060200280838360005b838110156103df5781810151838201526020016103c7565b50505050905001935050505060405180910390f35b6102046004803603602081101561040a57600080fd5b5035600160a060020a03166108eb565b6103116004803603604081101561043057600080fd5b50600160a060020a0381351690602001356109d5565b6102046004803603604081101561045c57600080fd5b508035906020013560ff16610a06565b6000828181600381111561047c57fe5b101580156104965750600381600381111561049357fe5b11155b61049f57600080fd5b8260008160038111156104ae57fe5b101580156104c8575060038160038111156104c557fe5b11155b6104d157600080fd5b8360038111156104dd57fe5b8560038111156104e957fe5b106104f6578492506104fa565b8392505b505092915050565b6006602090815260009283526040808420825291835291819020805460018083018054855160026101009483161585026000190190921691909104601f810188900488028201880190965285815260ff80851697939094049093169490918301828280156105b15780601f10610586576101008083540402835291602001916105b1565b820191906000526020600020905b81548152906001019060200180831161059457829003601f168201915b5050505050905083565b8060008160038111156105ca57fe5b101580156105e4575060038160038111156105e157fe5b11155b6105ed57600080fd5b336000908152600860209081526040808320868452909152902060055460ff1615801561063957508054610100900460ff16600381111561062a57fe5b83600381111561063657fe5b11155b1561064457506106ed565b600483600381111561065257fe5b6004811061065c57fe5b602081049091015460ff601f9092166101000a900416156106eb57805460ff19166001178082558390829061ff00191661010083600381111561069b57fe5b02179055507f52035ff46a15e119b23cfbf756f83f68ee8740523a40b78f621fdd44f091fb388484604051808381526020018260038111156106d957fe5b81526020019250505060405180910390a15b505b505050565b33600090815260066020908152604080832085845290915290205460ff161561071a57600080fd5b60408051606081019091526001815260208101600081526020908101839052336000908152600682526040808220868352835290208251815460ff191690151517808255918301519091829061ff00191661010083600381111561077a57fe5b02179055506040820151805161079a916001840191602090910190610af1565b505033600090815260076020908152604082208054600181018255908352912001929092555050565b60008083600160a060020a0381166107da57600080fd5b505050600160a060020a03919091166000908152600660209081526040808320938352929052205460ff808216926101009092041690565b60015481565b600254600160a060020a031681565b60008083600160a060020a03811661083e57600080fd5b505050600160a060020a03919091166000908152600860209081526040808320938352929052205460ff808216926101009092041690565b600160a060020a03811660009081526007602090815260408083208054825181850281018501909352808352606093909290829084908301828280156108db57602002820191906000526020600020905b8154815260200190600101908083116108c7575b5050505050905091509150915091565b600054610100900460ff16806109045750610904610aeb565b80610912575060005460ff16155b610967576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610b93602e913960400191505060405180910390fd5b600054610100900460ff16158015610992576000805460ff1961ff0019909116610100171660011790555b60046001556002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03841617905580156109d1576000805461ff00191690555b5050565b600760205281600052604060002081815481106109f157600080fd5b90600052602060002001600091509150505481565b806000816003811115610a1557fe5b10158015610a2f57506003816003811115610a2c57fe5b11155b610a3857600080fd5b3360009081526006602090815260408083208684529091529020805460ff16610a6157506106ed565b60055460ff16158015610a9357508054610100900460ff166003811115610a8457fe5b836003811115610a9057fe5b11155b15610a9e57506106ed565b6003836003811115610aac57fe5b60048110610ab657fe5b602081049091015460ff601f9092166101000a900416156106eb5780548390829061ff00191661010083600381111561069b57fe5b303b1590565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282610b275760008555610b6d565b82601f10610b4057805160ff1916838001178555610b6d565b82800160010185558215610b6d579182015b82811115610b6d578251825591602001919060010190610b52565b50610b79929150610b7d565b5090565b5b80821115610b795760008155600101610b7e56fe496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a264697066735822122054fbc04bb3d899a5ff91d78a4fe6134b3154b4cb6187124e0b3be069ae58b58e64736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0x6104464F GT PUSH2 0x8E JUMPI DUP1 PUSH4 0x6104464F EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x9373014A EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xC00DCD0E EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xE4734593 EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0xE64AF938 EQ PUSH2 0x446 JUMPI PUSH2 0xD1 JUMP JUMPDEST DUP1 PUSH4 0x34F8408 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x1E54E325 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x3000DC39 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x4E3A5DE5 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x5205080F EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x309 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10E JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x163 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x189 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1CE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0xFF AND PUSH2 0x5BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x6F2 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2F7 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x311 PUSH2 0x812 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x32B PUSH2 0x818 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x827 JUMP JUMPDEST PUSH2 0x399 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x876 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3DF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3C7 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x9D5 JUMP JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0xFF AND PUSH2 0xA06 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x47C JUMPI INVALID JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x496 JUMPI POP PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x493 JUMPI INVALID JUMPDEST GT ISZERO JUMPDEST PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4AE JUMPI INVALID JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x4C8 JUMPI POP PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4C5 JUMPI INVALID JUMPDEST GT ISZERO JUMPDEST PUSH2 0x4D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4DD JUMPI INVALID JUMPDEST DUP6 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4E9 JUMPI INVALID JUMPDEST LT PUSH2 0x4F6 JUMPI DUP5 SWAP3 POP PUSH2 0x4FA JUMP JUMPDEST DUP4 SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP3 MSTORE SWAP2 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP4 ADD DUP1 SLOAD DUP6 MLOAD PUSH1 0x2 PUSH2 0x100 SWAP5 DUP4 AND ISZERO DUP6 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 DIV PUSH1 0x1F DUP2 ADD DUP9 SWAP1 DIV DUP9 MUL DUP3 ADD DUP9 ADD SWAP1 SWAP7 MSTORE DUP6 DUP2 MSTORE PUSH1 0xFF DUP1 DUP6 AND SWAP8 SWAP4 SWAP1 SWAP5 DIV SWAP1 SWAP4 AND SWAP5 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x5B1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x586 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5B1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x594 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5CA JUMPI INVALID JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x5E4 JUMPI POP PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5E1 JUMPI INVALID JUMPDEST GT ISZERO JUMPDEST PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x639 JUMPI POP DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x62A JUMPI INVALID JUMPDEST DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x636 JUMPI INVALID JUMPDEST GT ISZERO JUMPDEST ISZERO PUSH2 0x644 JUMPI POP PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x4 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x652 JUMPI INVALID JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x65C JUMPI INVALID JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND ISZERO PUSH2 0x6EB JUMPI DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP1 DUP3 SSTORE DUP4 SWAP1 DUP3 SWAP1 PUSH2 0xFF00 NOT AND PUSH2 0x100 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x69B JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x52035FF46A15E119B23CFBF756F83F68EE8740523A40B78F621FDD44F091FB38 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6D9 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x71A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP4 MSTORE DUP4 MSTORE SWAP1 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO OR DUP1 DUP3 SSTORE SWAP2 DUP4 ADD MLOAD SWAP1 SWAP2 DUP3 SWAP1 PUSH2 0xFF00 NOT AND PUSH2 0x100 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x77A JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x79A SWAP2 PUSH1 0x1 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xAF1 JUMP JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD SWAP3 SWAP1 SWAP3 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x7DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF DUP1 DUP3 AND SWAP3 PUSH2 0x100 SWAP1 SWAP3 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x83E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF DUP1 DUP3 AND SWAP3 PUSH2 0x100 SWAP1 SWAP3 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 DUP3 SWAP1 DUP5 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x8DB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x8C7 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x904 JUMPI POP PUSH2 0x904 PUSH2 0xAEB JUMP JUMPDEST DUP1 PUSH2 0x912 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x967 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB93 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x992 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x4 PUSH1 0x1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x9D1 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA15 JUMPI INVALID JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0xA2F JUMPI POP PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA2C JUMPI INVALID JUMPDEST GT ISZERO JUMPDEST PUSH2 0xA38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0xA61 JUMPI POP PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xA93 JUMPI POP DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA84 JUMPI INVALID JUMPDEST DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA90 JUMPI INVALID JUMPDEST GT ISZERO JUMPDEST ISZERO PUSH2 0xA9E JUMPI POP PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x3 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xAAC JUMPI INVALID JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0xAB6 JUMPI INVALID JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND ISZERO PUSH2 0x6EB JUMPI DUP1 SLOAD DUP4 SWAP1 DUP3 SWAP1 PUSH2 0xFF00 NOT AND PUSH2 0x100 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x69B JUMPI INVALID JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xB27 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xB6D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xB40 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xB6D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xB6D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB6D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB52 JUMP JUMPDEST POP PUSH2 0xB79 SWAP3 SWAP2 POP PUSH2 0xB7D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xB79 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xB7E JUMP INVALID 0x49 PUSH15 0x697469616C697A61626C653A20636F PUSH15 0x747261637420697320616C72656164 PUSH26 0x20696E697469616C697A6564A264697066735822122054FBC04B 0xB3 0xD8 SWAP10 0xA5 SELFDESTRUCT SWAP2 0xD7 DUP11 0x4F 0xE6 SGT 0x4B BALANCE SLOAD 0xB4 0xCB PUSH2 0x8712 0x4E SIGNEXTEND EXTCODESIZE 0xE0 PUSH10 0xAE58B58E64736F6C6343 STOP SMOD MOD STOP CALLER ",
              "sourceMap": "112:5838:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5639:309;;;;;;;;;;;;;;;;-1:-1:-1;5639:309:15;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1600:94;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1600:94:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4450:591;;;;;;;;;;;;;;;;-1:-1:-1;4450:591:15;;;;;;;;;:::i;:::-;;2735:393;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2735:393:15;;-1:-1:-1;2735:393:15;;-1:-1:-1;;;;;2735:393:15:i;3875:318::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3875:318:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;737:18;;;:::i;:::-;;;;;;;;;;;;;;;;761:39;;;:::i;:::-;;;;-1:-1:-1;;;;;761:39:15;;;;;;;;;;;;;;5173:326;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5173:326:15;;;;;;;;:::i;4199:213::-;;;;;;;;;;;;;;;;-1:-1:-1;4199:213:15;-1:-1:-1;;;;;4199:213:15;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2534:164;;;;;;;;;;;;;;;;-1:-1:-1;2534:164:15;-1:-1:-1;;;;;2534:164:15;;:::i;1700:68::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1700:68:15;;;;;;;;:::i;3134:609::-;;;;;;;;;;;;;;;;-1:-1:-1;3134:609:15;;;;;;;;;:::i;5639:309::-;5791:6;5739:13;5791:6;2445;:22;;;;;;;;;;:47;;;;-1:-1:-1;1012:27:15;2471:6;:21;;;;;;;;;;2445:47;2436:57;;;;;;5766:14;964:12:::1;2445:6;:22;;;;;;;;;;:47;;;;-1:-1:-1::0;1012:27:15::1;2471:6;:21;;;;;;;;;;2445:47;2436:57;;;::::0;::::1;;5829:14:::2;5812:31;;;;;;;;:13;:31;;;;;;;;;5808:134;;5866:13;5859:20;;;;5808:134;5917:14;5910:21;;5808:134;2503:1:::1;5639:309:::0;;;;;:::o;1600:94::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1600:94:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4450:591::-;4554:6;964:12;2445:6;:22;;;;;;;;;;:47;;;;-1:-1:-1;1012:27:15;2471:6;:21;;;;;;;;;;2445:47;2436:57;;;;;;4638:10:::1;4572:34;4609:40:::0;;;:28:::1;:40;::::0;;;;;;;:66;;;;;;;;4759:22:::1;::::0;::::1;;4758:23;:49:::0;::::1;;;-1:-1:-1::0;4795:12:15;;::::1;::::0;::::1;;;4785:22;::::0;::::1;;;;;;:6;:22;;;;;;;;;;4758:49;4754:86;;;4823:7;;;4754:86;4853:15;4874:6;4869:12;;;;;;;;4853:29;;;;;;;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;::::1;;::::0;::::1;;4849:186;;;4898:19:::0;;-1:-1:-1;;4898:19:15::1;4913:4;4898:19;::::0;;;4946:6;;4898:5;;-1:-1:-1;;4931:21:15::1;4898:19;4946:6:::0;4931:21:::1;::::0;::::1;;;;;;;;;;;4971:53;4991:24;5017:6;4971:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4849:186;2503:1;;4450:591:::0;;;:::o;2735:393::-;2873:10;2845:39;;;;:27;:39;;;;;;;;:64;;;;;;;;:71;;;2844:72;2836:81;;;;;;2994:44;;;;;;;;;3014:4;2994:44;;;;;-1:-1:-1;2994:44:15;;;;;;;;;2955:10;-1:-1:-1;2927:39:15;;;:27;:39;;;;;;:64;;;;;;;:111;;;;-1:-1:-1;;2927:111:15;;;;;;;;;;;;:64;;;;-1:-1:-1;;2927:111:15;;;;;;;;;;;;;;;-1:-1:-1;2927:111:15;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;3080:10:15;3048:43;;;;:31;:43;;;;;;;:73;;;;;;;;;;;;;;;;;-1:-1:-1;;2735:393:15:o;3875:318::-;4006:11;;3988:7;-1:-1:-1;;;;;2290:18:15;;2282:27;;;;;;-1:-1:-1;;;;;;;;4080:36:15;;;::::1;4044:33;4080:36:::0;;;:27:::1;:36;::::0;;;;;;;:61;;;;;;;4159:12;::::1;::::0;;::::1;::::0;::::1;4173::::0;;::::1;;::::0;3875:318::o;737:18::-;;;;:::o;761:39::-;;;-1:-1:-1;;;;;761:39:15;;:::o;5173:326::-;5308:11;;5289:8;-1:-1:-1;;;;;2290:18:15;;2282:27;;;;;;-1:-1:-1;;;;;;;;5383:38:15;;;::::1;5346:34;5383:38:::0;;;:28:::1;:38;::::0;;;;;;;:64;;;;;;;5465:12;::::1;::::0;;::::1;::::0;::::1;5479::::0;;::::1;;::::0;5173:326::o;4199:213::-;-1:-1:-1;;;;;4315:40:15;;4273:4;4315:40;;;:31;:40;;;;;;;;:47;;4307:98;;;;;;;;;;;;;;;4279:16;;4315:47;;4307:98;4315:40;;:47;;4307:98;;4315:40;:47;4307:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4199:213;;;:::o;2534:164::-;1472:13:7;;;;;;;;:33;;;1489:16;:14;:16::i;:::-;1472:50;;;-1:-1:-1;1510:12:7;;;;1509:13;1472:50;1464:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1584:19;1607:13;;;;;;1606:14;1630:98;;;;1664:13;:20;;-1:-1:-1;;;;1664:20:7;;;;;1698:19;1680:4;1698:19;;;1630:98;2628:1:15::1;2618:7;:11:::0;2639:24:::1;:52:::0;;-1:-1:-1;;2639:52:15::1;-1:-1:-1::0;;;;;2639:52:15;::::1;;::::0;;1750:66:7;;;;1800:5;1784:21;;-1:-1:-1;;1784:21:7;;;1750:66;2534:164:15;;:::o;1700:68::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3134:609::-;3236:6;964:12;2445:6;:22;;;;;;;;;;:47;;;;-1:-1:-1;1012:27:15;2471:6;:21;;;;;;;;;;2445:47;2436:57;;;;;;3318:10:::1;3254:33;3290:39:::0;;;:27:::1;:39;::::0;;;;;;;:64;;;;;;;;3437:12;;::::1;;3432:50;;3465:7;;;3432:50;3496:22;::::0;::::1;;3495:23;:49:::0;::::1;;;-1:-1:-1::0;3532:12:15;;::::1;::::0;::::1;;;3522:22;::::0;::::1;;;;;;:6;:22;;;;;;;;;;3495:49;3491:86;;;3560:7;;;3491:86;3590:14;3610:6;3605:12;;;;;;;;3590:28;;;;;;;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;::::1;;::::0;::::1;;3586:151;;;3634:21:::0;;3649:6;;3634:5;;-1:-1:-1;;3634:21:15::1;;3649:6:::0;3634:21:::1;::::0;::::1;;;;;1912:593:7::0;2348:4;2456:17;2491:7;1912:593;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "addSubjectPresentation(bytes32,string)": "4e3a5de5",
              "getPresentationStatus(uint8,uint8)": "034f8408",
              "getReceiverPresentationStatus(address,bytes32)": "9373014a",
              "getSubjectPresentationList(address)": "c00dcd0e",
              "getSubjectPresentationStatus(address,bytes32)": "5205080f",
              "initialize(address)": "c4d66de8",
              "previousPublishedVersion()": "6104464f",
              "subjectPresentationListRegistry(address,uint256)": "e4734593",
              "subjectPresentationRegistry(address,bytes32)": "1e54e325",
              "updateReceiverPresentation(bytes32,uint8)": "3000dc39",
              "updateSubjectPresentation(bytes32,uint8)": "e64af938",
              "version()": "54fd4d50"
            }
          }
        }
      },
      "contracts/registry/AlastriaPublicKeyRegistry.sol": {
        "AlastriaPublicKeyRegistry": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "publicKey",
                  "type": "string"
                }
              ],
              "name": "PublicKeyDeleted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "publicKey",
                  "type": "string"
                }
              ],
              "name": "PublicKeyRevoked",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "publicKey",
                  "type": "string"
                }
              ],
              "name": "addKey",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "publicKey",
                  "type": "string"
                }
              ],
              "name": "deletePublicKey",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "subject",
                  "type": "address"
                }
              ],
              "name": "getCurrentPublicKey",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "subject",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "publicKey",
                  "type": "bytes32"
                }
              ],
              "name": "getPublicKeyStatus",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "enum AlastriaPublicKeyRegistry.Status",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endDate",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_previousPublishedVersion",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "previousPublishedVersion",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "publicKeyList",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "publicKey",
                  "type": "string"
                }
              ],
              "name": "revokePublicKey",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "",
                  "type": "int256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50610b81806100206000396000f3fe608060405234801561001057600080fd5b506004361061009f577c010000000000000000000000000000000000000000000000000000000060003504631226f6a581146100a457806331f7f2591461010857806336241962146101a357806350382c1a1461024b57806354fd4d50146102f15780636104464f1461030b578063c000ceee1461032f578063c4d66de81461035b578063d16df8ec14610381575b600080fd5b6100d0600480360360408110156100ba57600080fd5b50600160a060020a038135169060200135610427565b6040518085151581526020018460018111156100e857fe5b815260200183815260200182815260200194505050505060405180910390f35b61012e6004803603602081101561011e57600080fd5b5035600160a060020a0316610487565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610168578181015183820152602001610150565b50505050905090810190601f1680156101955780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610249600480360360208110156101b957600080fd5b8101906020810181356401000000008111156101d457600080fd5b8201836020820111156101e657600080fd5b8035906020019184600183028401116401000000008311171561020857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610596945050505050565b005b6102496004803603602081101561026157600080fd5b81019060208101813564010000000081111561027c57600080fd5b82018360208201111561028e57600080fd5b803590602001918460018302840111640100000000831117156102b057600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061067c945050505050565b6102f9610792565b60408051918252519081900360200190f35b610313610798565b60408051600160a060020a039092168252519081900360200190f35b61012e6004803603604081101561034557600080fd5b50600160a060020a0381351690602001356107a7565b6102496004803603602081101561037157600080fd5b5035600160a060020a031661085e565b6102496004803603602081101561039757600080fd5b8101906020810181356401000000008111156103b257600080fd5b8201836020820111156103c457600080fd5b803590602001918460018302840111640100000000831117156103e657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610947945050505050565b600080808085600160a060020a03811661044057600080fd5b50505050600160a060020a03929092166000908152600360209081526040808320938352929052208054600182015460029092015460ff8083169561010090930416935090565b606081600160a060020a03811661049d57600080fd5b600160a060020a0383166000908152600460205260409020541561057d57600160a060020a0383166000908152600460205260409020805460001981019081106104e357fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156105715780601f1061054657610100808354040283529160200191610571565b820191906000526020600020905b81548152906001019060200180831161055457829003601f168201915b50505050509150610590565b6040518060200160405280600081525091505b50919050565b336000908152600360205260408120816105af846109ff565b81526020810191909152604001600020805490915060ff161561067857805461ff00191661010017815542600282015560408051602080825284518183015284517f590ada3b231515dd26dca05728f31024554fc0eca9ef33aa1d623bc4d7d5fd50938693928392918301919085019080838360005b8381101561063d578181015183820152602001610625565b50505050905090810190601f16801561066a5780820380516001836020036101000a031916815260200191505b509250505060405180910390a15b5050565b33600090815260036020526040812090610695836109ff565b815260208101919091526040016000205460ff16156106b357600080fd5b426106c56106c033610487565b610947565b604080516080810182526001815260006020808301829052828401859052606083018290523382526003905291822090916106ff856109ff565b81526020808201929092526040016000208251815460ff191690151517808255918301519091829061ff00191661010083600181111561073b57fe5b021790555060408281015160018084019190915560609093015160029092019190915533600090815260046020908152918120805493840181558152819020845161078d939190910191850190610a7c565b505050565b60015481565b600254600160a060020a031681565b600460205281600052604060002081815481106107c357600080fd5b600091825260209182902001805460408051601f600260001961010060018716150201909416939093049283018590048502810185019091528181529450909250908301828280156108565780601f1061082b57610100808354040283529160200191610856565b820191906000526020600020905b81548152906001019060200180831161083957829003601f168201915b505050505081565b600054610100900460ff16806108775750610877610a76565b80610885575060005460ff16155b6108da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610b1e602e913960400191505060405180910390fd5b600054610100900460ff16158015610905576000805460ff1961ff0019909116610100171660011790555b60046001556002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0384161790558015610678576000805461ff00191690555050565b33600090815260036020526040812081610960846109ff565b81526020810191909152604001600020805490915060ff168015610999575060018154610100900460ff16600181111561099657fe5b14155b156106785742600282015560408051602080825284518183015284517f41d9cf228775966745bd16590f046aff534ab47ea15fc80127ddae02abc8bf3493869392839291830191908501908083836000831561063d578181015183820152602001610625565b6000816040516020018082805190602001908083835b60208310610a345780518252601f199092019160209182019101610a15565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001209050919050565b303b1590565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282610ab25760008555610af8565b82601f10610acb57805160ff1916838001178555610af8565b82800160010185558215610af8579182015b82811115610af8578251825591602001919060010190610add565b50610b04929150610b08565b5090565b5b80821115610b045760008155600101610b0956fe496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a26469706673582212205fd162e02159c374e5f21334d910d0bd95ef08ec0cf053c174f85d71d309b38064736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB81 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9F JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x1226F6A5 DUP2 EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0x31F7F259 EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x36241962 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x50382C1A EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x6104464F EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0xC000CEEE EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xD16DF8EC EQ PUSH2 0x381 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x427 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP6 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xE8 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x487 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x168 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x195 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x596 SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x67C SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2F9 PUSH2 0x792 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x313 PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x12E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x85E JUMP JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x947 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP1 DUP4 AND SWAP6 PUSH2 0x100 SWAP1 SWAP4 DIV AND SWAP4 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x57D JUMPI PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x4E3 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP8 AND ISZERO MUL ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV SWAP3 DUP4 ADD DUP6 SWAP1 DIV DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP2 MSTORE DUP2 DUP2 MSTORE SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x571 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x546 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x571 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x554 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP PUSH2 0x590 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0x5AF DUP5 PUSH2 0x9FF JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x678 JUMPI DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR DUP2 SSTORE TIMESTAMP PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP5 MLOAD DUP2 DUP4 ADD MSTORE DUP5 MLOAD PUSH32 0x590ADA3B231515DD26DCA05728F31024554FC0ECA9EF33AA1D623BC4D7D5FD50 SWAP4 DUP7 SWAP4 SWAP3 DUP4 SWAP3 SWAP2 DUP4 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x63D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x625 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x66A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x695 DUP4 PUSH2 0x9FF JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH2 0x6C5 PUSH2 0x6C0 CALLER PUSH2 0x487 JUMP JUMPDEST PUSH2 0x947 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP3 DUP5 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 DUP4 ADD DUP3 SWAP1 MSTORE CALLER DUP3 MSTORE PUSH1 0x3 SWAP1 MSTORE SWAP2 DUP3 KECCAK256 SWAP1 SWAP2 PUSH2 0x6FF DUP6 PUSH2 0x9FF JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO OR DUP1 DUP3 SSTORE SWAP2 DUP4 ADD MLOAD SWAP1 SWAP2 DUP3 SWAP1 PUSH2 0xFF00 NOT AND PUSH2 0x100 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x73B JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x60 SWAP1 SWAP4 ADD MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP2 DUP2 KECCAK256 DUP1 SLOAD SWAP4 DUP5 ADD DUP2 SSTORE DUP2 MSTORE DUP2 SWAP1 KECCAK256 DUP5 MLOAD PUSH2 0x78D SWAP4 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP6 ADD SWAP1 PUSH2 0xA7C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP8 AND ISZERO MUL ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV SWAP3 DUP4 ADD DUP6 SWAP1 DIV DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP2 MSTORE DUP2 DUP2 MSTORE SWAP5 POP SWAP1 SWAP3 POP SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x856 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x82B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x856 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x839 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x877 JUMPI POP PUSH2 0x877 PUSH2 0xA76 JUMP JUMPDEST DUP1 PUSH2 0x885 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB1E PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x905 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x4 PUSH1 0x1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x678 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0x960 DUP5 PUSH2 0x9FF JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x999 JUMPI POP PUSH1 0x1 DUP2 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x996 JUMPI INVALID JUMPDEST EQ ISZERO JUMPDEST ISZERO PUSH2 0x678 JUMPI TIMESTAMP PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP5 MLOAD DUP2 DUP4 ADD MSTORE DUP5 MLOAD PUSH32 0x41D9CF228775966745BD16590F046AFF534AB47EA15FC80127DDAE02ABC8BF34 SWAP4 DUP7 SWAP4 SWAP3 DUP4 SWAP3 SWAP2 DUP4 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x63D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x625 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xA34 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xAB2 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xAF8 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xACB JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xAF8 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xAF8 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xAF8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xADD JUMP JUMPDEST POP PUSH2 0xB04 SWAP3 SWAP2 POP PUSH2 0xB08 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xB04 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xB09 JUMP INVALID 0x49 PUSH15 0x697469616C697A61626C653A20636F PUSH15 0x747261637420697320616C72656164 PUSH26 0x20696E697469616C697A6564A26469706673582212205FD162E0 0x21 MSIZE 0xC3 PUSH21 0xE5F21334D910D0BD95EF08EC0CF053C174F85D71D3 MULMOD 0xB3 DUP1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
              "sourceMap": "112:3320:16:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061009f577c010000000000000000000000000000000000000000000000000000000060003504631226f6a581146100a457806331f7f2591461010857806336241962146101a357806350382c1a1461024b57806354fd4d50146102f15780636104464f1461030b578063c000ceee1461032f578063c4d66de81461035b578063d16df8ec14610381575b600080fd5b6100d0600480360360408110156100ba57600080fd5b50600160a060020a038135169060200135610427565b6040518085151581526020018460018111156100e857fe5b815260200183815260200182815260200194505050505060405180910390f35b61012e6004803603602081101561011e57600080fd5b5035600160a060020a0316610487565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610168578181015183820152602001610150565b50505050905090810190601f1680156101955780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610249600480360360208110156101b957600080fd5b8101906020810181356401000000008111156101d457600080fd5b8201836020820111156101e657600080fd5b8035906020019184600183028401116401000000008311171561020857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610596945050505050565b005b6102496004803603602081101561026157600080fd5b81019060208101813564010000000081111561027c57600080fd5b82018360208201111561028e57600080fd5b803590602001918460018302840111640100000000831117156102b057600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061067c945050505050565b6102f9610792565b60408051918252519081900360200190f35b610313610798565b60408051600160a060020a039092168252519081900360200190f35b61012e6004803603604081101561034557600080fd5b50600160a060020a0381351690602001356107a7565b6102496004803603602081101561037157600080fd5b5035600160a060020a031661085e565b6102496004803603602081101561039757600080fd5b8101906020810181356401000000008111156103b257600080fd5b8201836020820111156103c457600080fd5b803590602001918460018302840111640100000000831117156103e657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610947945050505050565b600080808085600160a060020a03811661044057600080fd5b50505050600160a060020a03929092166000908152600360209081526040808320938352929052208054600182015460029092015460ff8083169561010090930416935090565b606081600160a060020a03811661049d57600080fd5b600160a060020a0383166000908152600460205260409020541561057d57600160a060020a0383166000908152600460205260409020805460001981019081106104e357fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156105715780601f1061054657610100808354040283529160200191610571565b820191906000526020600020905b81548152906001019060200180831161055457829003601f168201915b50505050509150610590565b6040518060200160405280600081525091505b50919050565b336000908152600360205260408120816105af846109ff565b81526020810191909152604001600020805490915060ff161561067857805461ff00191661010017815542600282015560408051602080825284518183015284517f590ada3b231515dd26dca05728f31024554fc0eca9ef33aa1d623bc4d7d5fd50938693928392918301919085019080838360005b8381101561063d578181015183820152602001610625565b50505050905090810190601f16801561066a5780820380516001836020036101000a031916815260200191505b509250505060405180910390a15b5050565b33600090815260036020526040812090610695836109ff565b815260208101919091526040016000205460ff16156106b357600080fd5b426106c56106c033610487565b610947565b604080516080810182526001815260006020808301829052828401859052606083018290523382526003905291822090916106ff856109ff565b81526020808201929092526040016000208251815460ff191690151517808255918301519091829061ff00191661010083600181111561073b57fe5b021790555060408281015160018084019190915560609093015160029092019190915533600090815260046020908152918120805493840181558152819020845161078d939190910191850190610a7c565b505050565b60015481565b600254600160a060020a031681565b600460205281600052604060002081815481106107c357600080fd5b600091825260209182902001805460408051601f600260001961010060018716150201909416939093049283018590048502810185019091528181529450909250908301828280156108565780601f1061082b57610100808354040283529160200191610856565b820191906000526020600020905b81548152906001019060200180831161083957829003601f168201915b505050505081565b600054610100900460ff16806108775750610877610a76565b80610885575060005460ff16155b6108da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610b1e602e913960400191505060405180910390fd5b600054610100900460ff16158015610905576000805460ff1961ff0019909116610100171660011790555b60046001556002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0384161790558015610678576000805461ff00191690555050565b33600090815260036020526040812081610960846109ff565b81526020810191909152604001600020805490915060ff168015610999575060018154610100900460ff16600181111561099657fe5b14155b156106785742600282015560408051602080825284518183015284517f41d9cf228775966745bd16590f046aff534ab47ea15fc80127ddae02abc8bf3493869392839291830191908501908083836000831561063d578181015183820152602001610625565b6000816040516020018082805190602001908083835b60208310610a345780518252601f199092019160209182019101610a15565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001209050919050565b303b1590565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282610ab25760008555610af8565b82601f10610acb57805160ff1916838001178555610af8565b82800160010185558215610af8579182015b82811115610af8578251825591602001919060010190610add565b50610b04929150610b08565b5090565b5b80821115610b045760008155600101610b0956fe496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a26469706673582212205fd162e02159c374e5f21334d910d0bd95ef08ec0cf053c174f85d71d309b38064736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9F JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x1226F6A5 DUP2 EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0x31F7F259 EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x36241962 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x50382C1A EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x6104464F EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0xC000CEEE EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xD16DF8EC EQ PUSH2 0x381 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x427 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP6 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xE8 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x487 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x168 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x195 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x596 SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x67C SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2F9 PUSH2 0x792 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x313 PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x12E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x85E JUMP JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x947 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP1 DUP4 AND SWAP6 PUSH2 0x100 SWAP1 SWAP4 DIV AND SWAP4 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x57D JUMPI PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x4E3 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP8 AND ISZERO MUL ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV SWAP3 DUP4 ADD DUP6 SWAP1 DIV DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP2 MSTORE DUP2 DUP2 MSTORE SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x571 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x546 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x571 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x554 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP PUSH2 0x590 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0x5AF DUP5 PUSH2 0x9FF JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x678 JUMPI DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR DUP2 SSTORE TIMESTAMP PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP5 MLOAD DUP2 DUP4 ADD MSTORE DUP5 MLOAD PUSH32 0x590ADA3B231515DD26DCA05728F31024554FC0ECA9EF33AA1D623BC4D7D5FD50 SWAP4 DUP7 SWAP4 SWAP3 DUP4 SWAP3 SWAP2 DUP4 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x63D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x625 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x66A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x695 DUP4 PUSH2 0x9FF JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH2 0x6C5 PUSH2 0x6C0 CALLER PUSH2 0x487 JUMP JUMPDEST PUSH2 0x947 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP3 DUP5 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 DUP4 ADD DUP3 SWAP1 MSTORE CALLER DUP3 MSTORE PUSH1 0x3 SWAP1 MSTORE SWAP2 DUP3 KECCAK256 SWAP1 SWAP2 PUSH2 0x6FF DUP6 PUSH2 0x9FF JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO OR DUP1 DUP3 SSTORE SWAP2 DUP4 ADD MLOAD SWAP1 SWAP2 DUP3 SWAP1 PUSH2 0xFF00 NOT AND PUSH2 0x100 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x73B JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x60 SWAP1 SWAP4 ADD MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP2 DUP2 KECCAK256 DUP1 SLOAD SWAP4 DUP5 ADD DUP2 SSTORE DUP2 MSTORE DUP2 SWAP1 KECCAK256 DUP5 MLOAD PUSH2 0x78D SWAP4 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP6 ADD SWAP1 PUSH2 0xA7C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP8 AND ISZERO MUL ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV SWAP3 DUP4 ADD DUP6 SWAP1 DIV DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP2 MSTORE DUP2 DUP2 MSTORE SWAP5 POP SWAP1 SWAP3 POP SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x856 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x82B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x856 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x839 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x877 JUMPI POP PUSH2 0x877 PUSH2 0xA76 JUMP JUMPDEST DUP1 PUSH2 0x885 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB1E PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x905 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x4 PUSH1 0x1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x678 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0x960 DUP5 PUSH2 0x9FF JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x999 JUMPI POP PUSH1 0x1 DUP2 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x996 JUMPI INVALID JUMPDEST EQ ISZERO JUMPDEST ISZERO PUSH2 0x678 JUMPI TIMESTAMP PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP5 MLOAD DUP2 DUP4 ADD MSTORE DUP5 MLOAD PUSH32 0x41D9CF228775966745BD16590F046AFF534AB47EA15FC80127DDAE02ABC8BF34 SWAP4 DUP7 SWAP4 SWAP3 DUP4 SWAP3 SWAP2 DUP4 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x63D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x625 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xA34 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xAB2 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xAF8 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xACB JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xAF8 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xAF8 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xAF8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xADD JUMP JUMPDEST POP PUSH2 0xB04 SWAP3 SWAP2 POP PUSH2 0xB08 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xB04 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xB09 JUMP INVALID 0x49 PUSH15 0x697469616C697A61626C653A20636F PUSH15 0x747261637420697320616C72656164 PUSH26 0x20696E697469616C697A6564A26469706673582212205FD162E0 0x21 MSIZE 0xC3 PUSH21 0xE5F21334D910D0BD95EF08EC0CF053C174F85D71D3 MULMOD 0xB3 DUP1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
              "sourceMap": "112:3320:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2955:329;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2955:329:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2661:288;;;;;;;;;;;;;;;;-1:-1:-1;2661:288:16;-1:-1:-1;;;;;2661:288:16;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2297:358;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2297:358:16;;-1:-1:-1;2297:358:16;;-1:-1:-1;;;;;2297:358:16:i;:::-;;1465:453;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1465:453:16;;-1:-1:-1;1465:453:16;;-1:-1:-1;;;;;1465:453:16:i;363:18::-;;;:::i;:::-;;;;;;;;;;;;;;;;387:39;;;:::i;:::-;;;;-1:-1:-1;;;;;387:39:16;;;;;;;;;;;;;;907:49;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;907:49:16;;;;;;;;:::i;1255:163::-;;;;;;;;;;;;;;;;-1:-1:-1;1255:163:16;-1:-1:-1;;;;;1255:163:16;;:::i;1924:367::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1924:367:16;;-1:-1:-1;1924:367:16;;-1:-1:-1;;;;;1924:367:16:i;2955:329::-;3070:11;;;;3044:7;-1:-1:-1;;;;;1212:18:16;;1204:27;;;;;;-1:-1:-1;;;;;;;;;3163:26:16;;;::::1;3137:23;3163:26:::0;;;:17:::1;:26;::::0;;;;;;;:37;;;;;;;3218:12;;;3246:15;::::1;::::0;3263:13:::1;::::0;;::::1;::::0;3218:12:::1;::::0;;::::1;::::0;::::1;3232::::0;;::::1;;::::0;-1:-1:-1;3263:13:16;2955:329::o;2661:288::-;2750:13;2732:7;-1:-1:-1;;;;;1212:18:16;;1204:27;;;;;;-1:-1:-1;;;;;2779:22:16;::::1;2811:1;2779:22:::0;;;:13:::1;:22;::::0;;;;:29;:33;2775:168:::1;;-1:-1:-1::0;;;;;2835:22:16;::::1;;::::0;;;:13:::1;:22;::::0;;;;2858:29;;-1:-1:-1;;2858:33:16;;;2835:57;::::1;;;;;;::::0;;;::::1;::::0;;;;::::1;2828:64:::0;;::::1;::::0;;::::1;;-1:-1:-1::0;;2828:64:16::1;;::::0;::::1;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;::::1;2835:57:::0;2828:64;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2775:168;2923:9;;;;;;;;;;;::::0;::::1;;2775:168;2661:288:::0;;;;:::o;2297:358::-;2408:10;2364:23;2390:29;;;:17;:29;;;;;2364:23;2420:21;2431:9;2420:10;:21::i;:::-;2390:52;;;;;;;;;;;-1:-1:-1;2390:52:16;2481:12;;2390:52;;-1:-1:-1;2481:12:16;;2477:172;;;2509:38;;-1:-1:-1;;2509:38:16;;;;;2577:15;2561:13;;;:31;2611:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2611:27:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2477:172;2297:358;;:::o;1465:453::-;1550:10;1532:29;;;;:17;:29;;;;;;1562:21;1573:9;1562:10;:21::i;:::-;1532:52;;;;;;;;;;;-1:-1:-1;1532:52:16;:59;;;1531:60;1523:69;;;;;;1620:15;1645:48;1661:31;1681:10;1661:19;:31::i;:::-;1645:15;:48::i;:::-;1758:102;;;;;;;;1781:4;1758:102;;-1:-1:-1;1758:102:16;;;;;;;;;;;;;;;;;;;1721:10;1703:29;;:17;:29;;;;;1758:102;;1733:21;1744:9;1733:10;:21::i;:::-;1703:52;;;;;;;;;;;;-1:-1:-1;1703:52:16;:157;;;;-1:-1:-1;;1703:157:16;;;;;;;;;;;;:52;;;;-1:-1:-1;;1703:157:16;;;-1:-1:-1;1703:157:16;;;;;;;;;;;-1:-1:-1;1703:157:16;;;;;;;;;;;;;;;;;;;;;;;;;;1884:10;-1:-1:-1;1870:25:16;;;:13;:25;;;;;;;:41;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1465:453;;:::o;363:18::-;;;;:::o;387:39::-;;;-1:-1:-1;;;;;387:39:16;;:::o;907:49::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;907:49:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;907:49:16;;-1:-1:-1;907:49:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1255:163::-;1472:13:7;;;;;;;;:33;;;1489:16;:14;:16::i;:::-;1472:50;;;-1:-1:-1;1510:12:7;;;;1509:13;1472:50;1464:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1584:19;1607:13;;;;;;1606:14;1630:98;;;;1664:13;:20;;-1:-1:-1;;;;1664:20:7;;;;;1698:19;1680:4;1698:19;;;1630:98;1348:1:16::1;1338:7;:11:::0;1359:24:::1;:52:::0;;-1:-1:-1;;1359:52:16::1;-1:-1:-1::0;;;;;1359:52:16;::::1;;::::0;;1750:66:7;;;;1800:5;1784:21;;-1:-1:-1;;1784:21:7;;;1255:163:16;;:::o;1924:367::-;2035:10;1991:23;2017:29;;;:17;:29;;;;;1991:23;2047:21;2058:9;2047:10;:21::i;:::-;2017:52;;;;;;;;;;;-1:-1:-1;2017:52:16;2126:12;;2017:52;;-1:-1:-1;2126:12:16;;:55;;;;-1:-1:-1;2158:23:16;2142:12;;;;;;;;:39;;;;;;;;;2126:55;2122:163;;;2213:15;2197:13;;;:31;2247:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2247:27:16;;;;;;;;;;;;;;;;3294:135;3360:7;3412:8;3395:26;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3395:26:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:37;;;;;;3378:44;;3294:135;;;:::o;1912:593:7:-;2348:4;2456:17;2491:7;1912:593;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "addKey(string)": "50382c1a",
              "deletePublicKey(string)": "36241962",
              "getCurrentPublicKey(address)": "31f7f259",
              "getPublicKeyStatus(address,bytes32)": "1226f6a5",
              "initialize(address)": "c4d66de8",
              "previousPublishedVersion()": "6104464f",
              "publicKeyList(address,uint256)": "c000ceee",
              "revokePublicKey(string)": "d16df8ec",
              "version()": "54fd4d50"
            }
          }
        }
      }
    },
    "sources": {
      "contracts/identityManager/AlastriaIdentityEntity.sol": {
        "ast": {
          "absolutePath": "contracts/identityManager/AlastriaIdentityEntity.sol",
          "exportedSymbols": {
            "AlastriaIdentityEntity": [
              330
            ],
            "Eidas": [
              1100
            ],
            "IAidEntity": [
              9
            ],
            "Initializable": [
              1194
            ]
          },
          "id": 331,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".24",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:32:0"
            },
            {
              "absolutePath": "contracts/libs/Eidas.sol",
              "file": "../libs/Eidas.sol",
              "id": 2,
              "nodeType": "ImportDirective",
              "scope": 331,
              "sourceUnit": 1101,
              "src": "66:27:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/openzeppelin/Initializable.sol",
              "file": "../openzeppelin/Initializable.sol",
              "id": 3,
              "nodeType": "ImportDirective",
              "scope": 331,
              "sourceUnit": 1195,
              "src": "94:43:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 9,
              "linearizedBaseContracts": [
                9
              ],
              "name": "IAidEntity",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "c4d66de8",
                  "id": 8,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 6,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5,
                        "mutability": "mutable",
                        "name": "_firstIdentity",
                        "nodeType": "VariableDeclaration",
                        "scope": 8,
                        "src": "186:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "186:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "185:24:0"
                  },
                  "returnParameters": {
                    "id": 7,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "218:0:0"
                  },
                  "scope": 9,
                  "src": "166:53:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 331,
              "src": "139:82:0"
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 10,
                    "name": "Initializable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1194,
                    "src": "259:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Initializable_$1194",
                      "typeString": "contract Initializable"
                    }
                  },
                  "id": 11,
                  "nodeType": "InheritanceSpecifier",
                  "src": "259:13:0"
                }
              ],
              "contractDependencies": [
                1194
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 330,
              "linearizedBaseContracts": [
                330,
                1194
              ],
              "name": "AlastriaIdentityEntity",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 14,
                  "libraryName": {
                    "id": 12,
                    "name": "Eidas",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1100,
                    "src": "283:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Eidas_$1100",
                      "typeString": "library Eidas"
                    }
                  },
                  "nodeType": "UsingForDirective",
                  "src": "277:33:0",
                  "typeName": {
                    "id": 13,
                    "name": "Eidas.EidasLevel",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1064,
                    "src": "293:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_EidasLevel_$1064",
                      "typeString": "enum Eidas.EidasLevel"
                    }
                  }
                },
                {
                  "canonicalName": "AlastriaIdentityEntity.IdentityEntity",
                  "id": 27,
                  "members": [
                    {
                      "constant": false,
                      "id": 16,
                      "mutability": "mutable",
                      "name": "name",
                      "nodeType": "VariableDeclaration",
                      "scope": 27,
                      "src": "342:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 15,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "342:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 18,
                      "mutability": "mutable",
                      "name": "cif",
                      "nodeType": "VariableDeclaration",
                      "scope": 27,
                      "src": "359:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 17,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "359:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 20,
                      "mutability": "mutable",
                      "name": "url_logo",
                      "nodeType": "VariableDeclaration",
                      "scope": 27,
                      "src": "375:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 19,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "375:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 22,
                      "mutability": "mutable",
                      "name": "url_createAID",
                      "nodeType": "VariableDeclaration",
                      "scope": 27,
                      "src": "396:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 21,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "396:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 24,
                      "mutability": "mutable",
                      "name": "url_AOA",
                      "nodeType": "VariableDeclaration",
                      "scope": 27,
                      "src": "422:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 23,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "422:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 26,
                      "mutability": "mutable",
                      "name": "active",
                      "nodeType": "VariableDeclaration",
                      "scope": 27,
                      "src": "442:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 25,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "442:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "IdentityEntity",
                  "nodeType": "StructDefinition",
                  "scope": 330,
                  "src": "314:144:0",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "entities",
                  "nodeType": "VariableDeclaration",
                  "scope": 330,
                  "src": "462:52:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityEntity_$27_storage_$",
                    "typeString": "mapping(address => struct AlastriaIdentityEntity.IdentityEntity)"
                  },
                  "typeName": {
                    "id": 30,
                    "keyType": {
                      "id": 28,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "470:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "462:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityEntity_$27_storage_$",
                      "typeString": "mapping(address => struct AlastriaIdentityEntity.IdentityEntity)"
                    },
                    "valueType": {
                      "id": 29,
                      "name": "IdentityEntity",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 27,
                      "src": "481:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IdentityEntity_$27_storage_ptr",
                        "typeString": "struct AlastriaIdentityEntity.IdentityEntity"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "listEntities",
                  "nodeType": "VariableDeclaration",
                  "scope": 330,
                  "src": "518:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 32,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "518:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 33,
                    "nodeType": "ArrayTypeName",
                    "src": "518:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 48,
                    "nodeType": "Block",
                    "src": "598:67:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 44,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 39,
                                    "name": "entities",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31,
                                    "src": "612:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityEntity_$27_storage_$",
                                      "typeString": "mapping(address => struct AlastriaIdentityEntity.IdentityEntity storage ref)"
                                    }
                                  },
                                  "id": 41,
                                  "indexExpression": {
                                    "id": 40,
                                    "name": "_identityEntity",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 36,
                                    "src": "621:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "612:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IdentityEntity_$27_storage",
                                    "typeString": "struct AlastriaIdentityEntity.IdentityEntity storage ref"
                                  }
                                },
                                "id": 42,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "active",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 26,
                                "src": "612:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "74727565",
                                "id": 43,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "648:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "612:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 38,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "604:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 45,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "604:49:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 46,
                        "nodeType": "ExpressionStatement",
                        "src": "604:49:0"
                      },
                      {
                        "id": 47,
                        "nodeType": "PlaceholderStatement",
                        "src": "659:1:0"
                      }
                    ]
                  },
                  "id": 49,
                  "name": "onlyIdentityEntity",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 37,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 36,
                        "mutability": "mutable",
                        "name": "_identityEntity",
                        "nodeType": "VariableDeclaration",
                        "scope": 49,
                        "src": "573:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 35,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "573:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "572:25:0"
                  },
                  "src": "545:120:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 62,
                    "nodeType": "Block",
                    "src": "721:60:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 58,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "735:33:0",
                              "subExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 54,
                                    "name": "entities",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31,
                                    "src": "736:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityEntity_$27_storage_$",
                                      "typeString": "mapping(address => struct AlastriaIdentityEntity.IdentityEntity storage ref)"
                                    }
                                  },
                                  "id": 56,
                                  "indexExpression": {
                                    "id": 55,
                                    "name": "_identityEntity",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51,
                                    "src": "745:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "736:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IdentityEntity_$27_storage",
                                    "typeString": "struct AlastriaIdentityEntity.IdentityEntity storage ref"
                                  }
                                },
                                "id": 57,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "active",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 26,
                                "src": "736:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 53,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "727:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "727:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 60,
                        "nodeType": "ExpressionStatement",
                        "src": "727:42:0"
                      },
                      {
                        "id": 61,
                        "nodeType": "PlaceholderStatement",
                        "src": "775:1:0"
                      }
                    ]
                  },
                  "id": 63,
                  "name": "notIdentityEntity",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 51,
                        "mutability": "mutable",
                        "name": "_identityEntity",
                        "nodeType": "VariableDeclaration",
                        "scope": 63,
                        "src": "696:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 50,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "696:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "695:25:0"
                  },
                  "src": "669:112:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 88,
                    "nodeType": "Block",
                    "src": "848:151:0",
                    "statements": [
                      {
                        "assignments": [
                          71
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 71,
                            "mutability": "mutable",
                            "name": "identityEntity",
                            "nodeType": "VariableDeclaration",
                            "scope": 88,
                            "src": "854:37:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IdentityEntity_$27_storage_ptr",
                              "typeString": "struct AlastriaIdentityEntity.IdentityEntity"
                            },
                            "typeName": {
                              "id": 70,
                              "name": "IdentityEntity",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 27,
                              "src": "854:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityEntity_$27_storage_ptr",
                                "typeString": "struct AlastriaIdentityEntity.IdentityEntity"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 75,
                        "initialValue": {
                          "baseExpression": {
                            "id": 72,
                            "name": "entities",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "894:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityEntity_$27_storage_$",
                              "typeString": "mapping(address => struct AlastriaIdentityEntity.IdentityEntity storage ref)"
                            }
                          },
                          "id": 74,
                          "indexExpression": {
                            "id": 73,
                            "name": "_firstIdentity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "903:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "894:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IdentityEntity_$27_storage",
                            "typeString": "struct AlastriaIdentityEntity.IdentityEntity storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "854:64:0"
                      },
                      {
                        "expression": {
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 76,
                              "name": "identityEntity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71,
                              "src": "924:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityEntity_$27_storage_ptr",
                                "typeString": "struct AlastriaIdentityEntity.IdentityEntity storage pointer"
                              }
                            },
                            "id": 78,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26,
                            "src": "924:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 79,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "948:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "924:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 81,
                        "nodeType": "ExpressionStatement",
                        "src": "924:28:0"
                      },
                      {
                        "expression": {
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 82,
                              "name": "identityEntity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71,
                              "src": "958:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityEntity_$27_storage_ptr",
                                "typeString": "struct AlastriaIdentityEntity.IdentityEntity storage pointer"
                              }
                            },
                            "id": 84,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "name",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16,
                            "src": "958:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "466972737420456e74697479",
                            "id": 85,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "980:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9747c746960b8e46eb642bf857156bdb7f27790a8b5362e86065cba6e626fa78",
                              "typeString": "literal_string \"First Entity\""
                            },
                            "value": "First Entity"
                          },
                          "src": "958:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 87,
                        "nodeType": "ExpressionStatement",
                        "src": "958:36:0"
                      }
                    ]
                  },
                  "functionSelector": "c4d66de8",
                  "id": 89,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 68,
                      "modifierName": {
                        "id": 67,
                        "name": "initializer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1171,
                        "src": "836:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "836:11:0"
                    }
                  ],
                  "name": "initialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 66,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 65,
                        "mutability": "mutable",
                        "name": "_firstIdentity",
                        "nodeType": "VariableDeclaration",
                        "scope": 89,
                        "src": "805:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 64,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "805:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "804:24:0"
                  },
                  "returnParameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "848:0:0"
                  },
                  "scope": 330,
                  "src": "785:214:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 162,
                    "nodeType": "Block",
                    "src": "1811:336:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 117,
                              "name": "_addressEntity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92,
                              "src": "1835:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 114,
                              "name": "listEntities",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "1817:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1817:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1817:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 119,
                        "nodeType": "ExpressionStatement",
                        "src": "1817:33:0"
                      },
                      {
                        "expression": {
                          "id": 125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 120,
                                "name": "entities",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "1856:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityEntity_$27_storage_$",
                                  "typeString": "mapping(address => struct AlastriaIdentityEntity.IdentityEntity storage ref)"
                                }
                              },
                              "id": 122,
                              "indexExpression": {
                                "id": 121,
                                "name": "_addressEntity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 92,
                                "src": "1865:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1856:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityEntity_$27_storage",
                                "typeString": "struct AlastriaIdentityEntity.IdentityEntity storage ref"
                              }
                            },
                            "id": 123,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "name",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16,
                            "src": "1856:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 124,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 94,
                            "src": "1888:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1856:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 126,
                        "nodeType": "ExpressionStatement",
                        "src": "1856:37:0"
                      },
                      {
                        "expression": {
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 127,
                                "name": "entities",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "1899:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityEntity_$27_storage_$",
                                  "typeString": "mapping(address => struct AlastriaIdentityEntity.IdentityEntity storage ref)"
                                }
                              },
                              "id": 129,
                              "indexExpression": {
                                "id": 128,
                                "name": "_addressEntity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 92,
                                "src": "1908:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1899:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityEntity_$27_storage",
                                "typeString": "struct AlastriaIdentityEntity.IdentityEntity storage ref"
                              }
                            },
                            "id": 130,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "cif",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18,
                            "src": "1899:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 131,
                            "name": "_cif",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "1930:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1899:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 133,
                        "nodeType": "ExpressionStatement",
                        "src": "1899:35:0"
                      },
                      {
                        "expression": {
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 134,
                                "name": "entities",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "1940:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityEntity_$27_storage_$",
                                  "typeString": "mapping(address => struct AlastriaIdentityEntity.IdentityEntity storage ref)"
                                }
                              },
                              "id": 136,
                              "indexExpression": {
                                "id": 135,
                                "name": "_addressEntity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 92,
                                "src": "1949:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1940:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityEntity_$27_storage",
                                "typeString": "struct AlastriaIdentityEntity.IdentityEntity storage ref"
                              }
                            },
                            "id": 137,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "url_logo",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20,
                            "src": "1940:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 138,
                            "name": "_url_logo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "1976:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1940:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 140,
                        "nodeType": "ExpressionStatement",
                        "src": "1940:45:0"
                      },
                      {
                        "expression": {
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 141,
                                "name": "entities",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "1991:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityEntity_$27_storage_$",
                                  "typeString": "mapping(address => struct AlastriaIdentityEntity.IdentityEntity storage ref)"
                                }
                              },
                              "id": 143,
                              "indexExpression": {
                                "id": 142,
                                "name": "_addressEntity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 92,
                                "src": "2000:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1991:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityEntity_$27_storage",
                                "typeString": "struct AlastriaIdentityEntity.IdentityEntity storage ref"
                              }
                            },
                            "id": 144,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "url_createAID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22,
                            "src": "1991:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 145,
                            "name": "_url_createAID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "2032:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1991:55:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 147,
                        "nodeType": "ExpressionStatement",
                        "src": "1991:55:0"
                      },
                      {
                        "expression": {
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 148,
                                "name": "entities",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "2052:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityEntity_$27_storage_$",
                                  "typeString": "mapping(address => struct AlastriaIdentityEntity.IdentityEntity storage ref)"
                                }
                              },
                              "id": 150,
                              "indexExpression": {
                                "id": 149,
                                "name": "_addressEntity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 92,
                                "src": "2061:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2052:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityEntity_$27_storage",
                                "typeString": "struct AlastriaIdentityEntity.IdentityEntity storage ref"
                              }
                            },
                            "id": 151,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "url_AOA",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24,
                            "src": "2052:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 152,
                            "name": "_url_AOA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102,
                            "src": "2087:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "2052:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 154,
                        "nodeType": "ExpressionStatement",
                        "src": "2052:43:0"
                      },
                      {
                        "expression": {
                          "id": 160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 155,
                                "name": "entities",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "2101:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityEntity_$27_storage_$",
                                  "typeString": "mapping(address => struct AlastriaIdentityEntity.IdentityEntity storage ref)"
                                }
                              },
                              "id": 157,
                              "indexExpression": {
                                "id": 156,
                                "name": "_addressEntity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 92,
                                "src": "2110:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2101:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityEntity_$27_storage",
                                "typeString": "struct AlastriaIdentityEntity.IdentityEntity storage ref"
                              }
                            },
                            "id": 158,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26,
                            "src": "2101:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 159,
                            "name": "_active",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 104,
                            "src": "2135:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2101:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 161,
                        "nodeType": "ExpressionStatement",
                        "src": "2101:41:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 90,
                    "nodeType": "StructuredDocumentation",
                    "src": "1003:524:0",
                    "text": " @dev function that allows you to add a entity to the entities mapping\n @param _addressEntity the address that identify the entity in the blockchain\n @param _name the name of the entity\n @param _cif the cif of the entity\n @param _url_logo the url that contains the logo of the entity\n @param _url_createAID the url that contains the alastria ID of the entity\n @param _url_AOA the url that contains the AOA of the entity\n @param _active a flag that shows if a entity is active or not"
                  },
                  "functionSelector": "c4c02333",
                  "id": 163,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 107,
                          "name": "_addressEntity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "1764:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 108,
                      "modifierName": {
                        "id": 106,
                        "name": "notIdentityEntity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "1746:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_address_$",
                          "typeString": "modifier (address)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1746:33:0"
                    },
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 110,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1799:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1799:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "id": 112,
                      "modifierName": {
                        "id": 109,
                        "name": "onlyIdentityEntity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "1780:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_address_$",
                          "typeString": "modifier (address)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1780:30:0"
                    }
                  ],
                  "name": "addEntity",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 92,
                        "mutability": "mutable",
                        "name": "_addressEntity",
                        "nodeType": "VariableDeclaration",
                        "scope": 163,
                        "src": "1554:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 91,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1554:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 94,
                        "mutability": "mutable",
                        "name": "_name",
                        "nodeType": "VariableDeclaration",
                        "scope": 163,
                        "src": "1582:19:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 93,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1582:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 96,
                        "mutability": "mutable",
                        "name": "_cif",
                        "nodeType": "VariableDeclaration",
                        "scope": 163,
                        "src": "1607:18:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 95,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1607:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 98,
                        "mutability": "mutable",
                        "name": "_url_logo",
                        "nodeType": "VariableDeclaration",
                        "scope": 163,
                        "src": "1631:23:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 97,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1631:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 100,
                        "mutability": "mutable",
                        "name": "_url_createAID",
                        "nodeType": "VariableDeclaration",
                        "scope": 163,
                        "src": "1660:28:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 99,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1660:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 102,
                        "mutability": "mutable",
                        "name": "_url_AOA",
                        "nodeType": "VariableDeclaration",
                        "scope": 163,
                        "src": "1694:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 101,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1694:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 104,
                        "mutability": "mutable",
                        "name": "_active",
                        "nodeType": "VariableDeclaration",
                        "scope": 163,
                        "src": "1722:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 103,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1722:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1548:190:0"
                  },
                  "returnParameters": {
                    "id": 113,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1811:0:0"
                  },
                  "scope": 330,
                  "src": "1530:617:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 181,
                    "nodeType": "Block",
                    "src": "2478:48:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 174,
                                "name": "entities",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "2484:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityEntity_$27_storage_$",
                                  "typeString": "mapping(address => struct AlastriaIdentityEntity.IdentityEntity storage ref)"
                                }
                              },
                              "id": 176,
                              "indexExpression": {
                                "id": 175,
                                "name": "_addressEntity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 166,
                                "src": "2493:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2484:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityEntity_$27_storage",
                                "typeString": "struct AlastriaIdentityEntity.IdentityEntity storage ref"
                              }
                            },
                            "id": 177,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "name",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16,
                            "src": "2484:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 178,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 168,
                            "src": "2516:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "2484:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 180,
                        "nodeType": "ExpressionStatement",
                        "src": "2484:37:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 164,
                    "nodeType": "StructuredDocumentation",
                    "src": "2151:204:0",
                    "text": " @dev function that allows you to change the name of the entity\n @param _addressEntity the address that identify the entity in the blockchain\n @param _name the new name of the entity"
                  },
                  "functionSelector": "eb5c426c",
                  "id": 182,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 171,
                          "name": "_addressEntity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 166,
                          "src": "2460:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 172,
                      "modifierName": {
                        "id": 170,
                        "name": "onlyIdentityEntity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "2441:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_address_$",
                          "typeString": "modifier (address)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2441:34:0"
                    }
                  ],
                  "name": "setNameEntity",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 169,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 166,
                        "mutability": "mutable",
                        "name": "_addressEntity",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "2381:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 165,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2381:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 168,
                        "mutability": "mutable",
                        "name": "_name",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "2405:19:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 167,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2405:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2380:45:0"
                  },
                  "returnParameters": {
                    "id": 173,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2478:0:0"
                  },
                  "scope": 330,
                  "src": "2358:168:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 200,
                    "nodeType": "Block",
                    "src": "2852:46:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 193,
                                "name": "entities",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "2858:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityEntity_$27_storage_$",
                                  "typeString": "mapping(address => struct AlastriaIdentityEntity.IdentityEntity storage ref)"
                                }
                              },
                              "id": 195,
                              "indexExpression": {
                                "id": 194,
                                "name": "_addressEntity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 185,
                                "src": "2867:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2858:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityEntity_$27_storage",
                                "typeString": "struct AlastriaIdentityEntity.IdentityEntity storage ref"
                              }
                            },
                            "id": 196,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "cif",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18,
                            "src": "2858:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 197,
                            "name": "_cif",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 187,
                            "src": "2889:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "2858:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 199,
                        "nodeType": "ExpressionStatement",
                        "src": "2858:35:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 183,
                    "nodeType": "StructuredDocumentation",
                    "src": "2530:201:0",
                    "text": " @dev function that allows you to change the CIF of the entity\n @param _addressEntity the address that identify the entity in the blockchain\n @param _cif the new cif of the entity"
                  },
                  "functionSelector": "1e5f6f01",
                  "id": 201,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 190,
                          "name": "_addressEntity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 185,
                          "src": "2834:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 191,
                      "modifierName": {
                        "id": 189,
                        "name": "onlyIdentityEntity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "2815:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_address_$",
                          "typeString": "modifier (address)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2815:34:0"
                    }
                  ],
                  "name": "setCifEntity",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 188,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 185,
                        "mutability": "mutable",
                        "name": "_addressEntity",
                        "nodeType": "VariableDeclaration",
                        "scope": 201,
                        "src": "2756:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2756:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 187,
                        "mutability": "mutable",
                        "name": "_cif",
                        "nodeType": "VariableDeclaration",
                        "scope": 201,
                        "src": "2780:18:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 186,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2780:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2755:44:0"
                  },
                  "returnParameters": {
                    "id": 192,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2852:0:0"
                  },
                  "scope": 330,
                  "src": "2734:164:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 219,
                    "nodeType": "Block",
                    "src": "3278:56:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 212,
                                "name": "entities",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "3284:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityEntity_$27_storage_$",
                                  "typeString": "mapping(address => struct AlastriaIdentityEntity.IdentityEntity storage ref)"
                                }
                              },
                              "id": 214,
                              "indexExpression": {
                                "id": 213,
                                "name": "_addressEntity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 204,
                                "src": "3293:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3284:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityEntity_$27_storage",
                                "typeString": "struct AlastriaIdentityEntity.IdentityEntity storage ref"
                              }
                            },
                            "id": 215,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "url_logo",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20,
                            "src": "3284:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 216,
                            "name": "_url_logo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 206,
                            "src": "3320:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "3284:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 218,
                        "nodeType": "ExpressionStatement",
                        "src": "3284:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 202,
                    "nodeType": "StructuredDocumentation",
                    "src": "2902:252:0",
                    "text": " @dev function that allows you to change the Url that contains the logo of the entity\n @param _addressEntity the address that identify the entity in the blockchain\n @param _url_logo the new url that contains the logo of the entity"
                  },
                  "functionSelector": "0ff72ef2",
                  "id": 220,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 209,
                          "name": "_addressEntity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 204,
                          "src": "3260:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 210,
                      "modifierName": {
                        "id": 208,
                        "name": "onlyIdentityEntity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "3241:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_address_$",
                          "typeString": "modifier (address)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3241:34:0"
                    }
                  ],
                  "name": "setUrlLogo",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 207,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 204,
                        "mutability": "mutable",
                        "name": "_addressEntity",
                        "nodeType": "VariableDeclaration",
                        "scope": 220,
                        "src": "3177:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 203,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3177:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 206,
                        "mutability": "mutable",
                        "name": "_url_logo",
                        "nodeType": "VariableDeclaration",
                        "scope": 220,
                        "src": "3201:23:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 205,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3201:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3176:49:0"
                  },
                  "returnParameters": {
                    "id": 211,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3278:0:0"
                  },
                  "scope": 330,
                  "src": "3157:177:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 238,
                    "nodeType": "Block",
                    "src": "3743:66:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 231,
                                "name": "entities",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "3749:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityEntity_$27_storage_$",
                                  "typeString": "mapping(address => struct AlastriaIdentityEntity.IdentityEntity storage ref)"
                                }
                              },
                              "id": 233,
                              "indexExpression": {
                                "id": 232,
                                "name": "_addressEntity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 223,
                                "src": "3758:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3749:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityEntity_$27_storage",
                                "typeString": "struct AlastriaIdentityEntity.IdentityEntity storage ref"
                              }
                            },
                            "id": 234,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "url_createAID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22,
                            "src": "3749:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 235,
                            "name": "_url_createAID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "3790:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "3749:55:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 237,
                        "nodeType": "ExpressionStatement",
                        "src": "3749:55:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 221,
                    "nodeType": "StructuredDocumentation",
                    "src": "3338:271:0",
                    "text": " @dev function that allows you to change the Url that contains the Alastria ID of the entity\n @param _addressEntity the address that identify the entity in the blockchain\n @param _url_createAID the new url that contains the Alastria ID of the entity"
                  },
                  "functionSelector": "4b7a1859",
                  "id": 239,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 228,
                          "name": "_addressEntity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 223,
                          "src": "3725:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 229,
                      "modifierName": {
                        "id": 227,
                        "name": "onlyIdentityEntity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "3706:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_address_$",
                          "typeString": "modifier (address)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3706:34:0"
                    }
                  ],
                  "name": "setUrlCreateAID",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 226,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 223,
                        "mutability": "mutable",
                        "name": "_addressEntity",
                        "nodeType": "VariableDeclaration",
                        "scope": 239,
                        "src": "3637:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 222,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3637:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 225,
                        "mutability": "mutable",
                        "name": "_url_createAID",
                        "nodeType": "VariableDeclaration",
                        "scope": 239,
                        "src": "3661:28:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 224,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3661:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3636:54:0"
                  },
                  "returnParameters": {
                    "id": 230,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3743:0:0"
                  },
                  "scope": 330,
                  "src": "3612:197:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 257,
                    "nodeType": "Block",
                    "src": "4184:54:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 250,
                                "name": "entities",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "4190:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityEntity_$27_storage_$",
                                  "typeString": "mapping(address => struct AlastriaIdentityEntity.IdentityEntity storage ref)"
                                }
                              },
                              "id": 252,
                              "indexExpression": {
                                "id": 251,
                                "name": "_addressEntity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 242,
                                "src": "4199:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4190:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityEntity_$27_storage",
                                "typeString": "struct AlastriaIdentityEntity.IdentityEntity storage ref"
                              }
                            },
                            "id": 253,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "url_AOA",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24,
                            "src": "4190:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 254,
                            "name": "_url_AOA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 244,
                            "src": "4225:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "4190:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 256,
                        "nodeType": "ExpressionStatement",
                        "src": "4190:43:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 240,
                    "nodeType": "StructuredDocumentation",
                    "src": "3813:249:0",
                    "text": " @dev function that allows you to change the Url that contains the AOA of the entity\n @param _addressEntity the address that identify the entity in the blockchain\n @param _url_AOA the new url that contains the AOA of the entity"
                  },
                  "functionSelector": "8e672cf7",
                  "id": 258,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 247,
                          "name": "_addressEntity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 242,
                          "src": "4166:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 248,
                      "modifierName": {
                        "id": 246,
                        "name": "onlyIdentityEntity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "4147:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_address_$",
                          "typeString": "modifier (address)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4147:34:0"
                    }
                  ],
                  "name": "setUrlAOA",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 245,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 242,
                        "mutability": "mutable",
                        "name": "_addressEntity",
                        "nodeType": "VariableDeclaration",
                        "scope": 258,
                        "src": "4084:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 241,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4084:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 244,
                        "mutability": "mutable",
                        "name": "_url_AOA",
                        "nodeType": "VariableDeclaration",
                        "scope": 258,
                        "src": "4108:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 243,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4108:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4083:48:0"
                  },
                  "returnParameters": {
                    "id": 249,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4184:0:0"
                  },
                  "scope": 330,
                  "src": "4065:173:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 318,
                    "nodeType": "Block",
                    "src": "5115:297:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 276,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 264,
                            "src": "5121:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 277,
                                "name": "entities",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "5129:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityEntity_$27_storage_$",
                                  "typeString": "mapping(address => struct AlastriaIdentityEntity.IdentityEntity storage ref)"
                                }
                              },
                              "id": 279,
                              "indexExpression": {
                                "id": 278,
                                "name": "_addressEntity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 261,
                                "src": "5138:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5129:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityEntity_$27_storage",
                                "typeString": "struct AlastriaIdentityEntity.IdentityEntity storage ref"
                              }
                            },
                            "id": 280,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "name",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16,
                            "src": "5129:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "src": "5121:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 282,
                        "nodeType": "ExpressionStatement",
                        "src": "5121:37:0"
                      },
                      {
                        "expression": {
                          "id": 288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 283,
                            "name": "_cif",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "5164:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 284,
                                "name": "entities",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "5171:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityEntity_$27_storage_$",
                                  "typeString": "mapping(address => struct AlastriaIdentityEntity.IdentityEntity storage ref)"
                                }
                              },
                              "id": 286,
                              "indexExpression": {
                                "id": 285,
                                "name": "_addressEntity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 261,
                                "src": "5180:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5171:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityEntity_$27_storage",
                                "typeString": "struct AlastriaIdentityEntity.IdentityEntity storage ref"
                              }
                            },
                            "id": 287,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "cif",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18,
                            "src": "5171:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "src": "5164:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 289,
                        "nodeType": "ExpressionStatement",
                        "src": "5164:35:0"
                      },
                      {
                        "expression": {
                          "id": 295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 290,
                            "name": "_url_logo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 268,
                            "src": "5205:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 291,
                                "name": "entities",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "5217:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityEntity_$27_storage_$",
                                  "typeString": "mapping(address => struct AlastriaIdentityEntity.IdentityEntity storage ref)"
                                }
                              },
                              "id": 293,
                              "indexExpression": {
                                "id": 292,
                                "name": "_addressEntity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 261,
                                "src": "5226:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5217:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityEntity_$27_storage",
                                "typeString": "struct AlastriaIdentityEntity.IdentityEntity storage ref"
                              }
                            },
                            "id": 294,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "url_logo",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20,
                            "src": "5217:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "src": "5205:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 296,
                        "nodeType": "ExpressionStatement",
                        "src": "5205:45:0"
                      },
                      {
                        "expression": {
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 297,
                            "name": "_url_createAID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 270,
                            "src": "5256:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 298,
                                "name": "entities",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "5273:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityEntity_$27_storage_$",
                                  "typeString": "mapping(address => struct AlastriaIdentityEntity.IdentityEntity storage ref)"
                                }
                              },
                              "id": 300,
                              "indexExpression": {
                                "id": 299,
                                "name": "_addressEntity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 261,
                                "src": "5282:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5273:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityEntity_$27_storage",
                                "typeString": "struct AlastriaIdentityEntity.IdentityEntity storage ref"
                              }
                            },
                            "id": 301,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "url_createAID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22,
                            "src": "5273:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "src": "5256:55:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 303,
                        "nodeType": "ExpressionStatement",
                        "src": "5256:55:0"
                      },
                      {
                        "expression": {
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 304,
                            "name": "_url_AOA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 272,
                            "src": "5317:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 305,
                                "name": "entities",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "5328:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityEntity_$27_storage_$",
                                  "typeString": "mapping(address => struct AlastriaIdentityEntity.IdentityEntity storage ref)"
                                }
                              },
                              "id": 307,
                              "indexExpression": {
                                "id": 306,
                                "name": "_addressEntity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 261,
                                "src": "5337:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5328:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityEntity_$27_storage",
                                "typeString": "struct AlastriaIdentityEntity.IdentityEntity storage ref"
                              }
                            },
                            "id": 308,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "url_AOA",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24,
                            "src": "5328:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "src": "5317:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 310,
                        "nodeType": "ExpressionStatement",
                        "src": "5317:43:0"
                      },
                      {
                        "expression": {
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 311,
                            "name": "_active",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 274,
                            "src": "5366:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 312,
                                "name": "entities",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "5376:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityEntity_$27_storage_$",
                                  "typeString": "mapping(address => struct AlastriaIdentityEntity.IdentityEntity storage ref)"
                                }
                              },
                              "id": 314,
                              "indexExpression": {
                                "id": 313,
                                "name": "_addressEntity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 261,
                                "src": "5385:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5376:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityEntity_$27_storage",
                                "typeString": "struct AlastriaIdentityEntity.IdentityEntity storage ref"
                              }
                            },
                            "id": 315,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26,
                            "src": "5376:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5366:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 317,
                        "nodeType": "ExpressionStatement",
                        "src": "5366:41:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 259,
                    "nodeType": "StructuredDocumentation",
                    "src": "4242:616:0",
                    "text": " @dev function that returns all the information of a entity\n @param _addressEntity the address that identify the entity in the blockchain\n @return _name of the entity you pass to the functions as a parameter\n @return _cif of the entity you pass to the functions as a parameter\n @return _url_logo of the entity you pass to the functions as a parameter\n @return _url_createAID of the entity you pass to the functions as a parameter\n @return _url_AOA of the entity you pass to the functions as a parameter\n @return _active of the entity you pass to the functions as a parameter"
                  },
                  "functionSelector": "75894e8c",
                  "id": 319,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getEntity",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 262,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 261,
                        "mutability": "mutable",
                        "name": "_addressEntity",
                        "nodeType": "VariableDeclaration",
                        "scope": 319,
                        "src": "4880:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 260,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4880:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4879:24:0"
                  },
                  "returnParameters": {
                    "id": 275,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "_name",
                        "nodeType": "VariableDeclaration",
                        "scope": 319,
                        "src": "4944:19:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4944:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 266,
                        "mutability": "mutable",
                        "name": "_cif",
                        "nodeType": "VariableDeclaration",
                        "scope": 319,
                        "src": "4971:18:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4971:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 268,
                        "mutability": "mutable",
                        "name": "_url_logo",
                        "nodeType": "VariableDeclaration",
                        "scope": 319,
                        "src": "4997:23:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 267,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4997:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 270,
                        "mutability": "mutable",
                        "name": "_url_createAID",
                        "nodeType": "VariableDeclaration",
                        "scope": 319,
                        "src": "5028:28:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 269,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5028:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 272,
                        "mutability": "mutable",
                        "name": "_url_AOA",
                        "nodeType": "VariableDeclaration",
                        "scope": 319,
                        "src": "5064:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 271,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5064:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 274,
                        "mutability": "mutable",
                        "name": "_active",
                        "nodeType": "VariableDeclaration",
                        "scope": 319,
                        "src": "5094:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 273,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5094:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4936:176:0"
                  },
                  "scope": 330,
                  "src": "4861:551:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 328,
                    "nodeType": "Block",
                    "src": "5623:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 326,
                          "name": "listEntities",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "5636:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "functionReturnParameters": 325,
                        "id": 327,
                        "nodeType": "Return",
                        "src": "5629:19:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 320,
                    "nodeType": "StructuredDocumentation",
                    "src": "5416:141:0",
                    "text": " @dev function that return the list of entities that are registered in the blockchain\n @return array of address of entities"
                  },
                  "functionSelector": "6e7a216b",
                  "id": 329,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "entitiesList",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 321,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5581:2:0"
                  },
                  "returnParameters": {
                    "id": 325,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 324,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 329,
                        "src": "5605:16:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 322,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5605:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 323,
                          "nodeType": "ArrayTypeName",
                          "src": "5605:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5604:18:0"
                  },
                  "scope": 330,
                  "src": "5560:93:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 331,
              "src": "224:5431:0"
            }
          ],
          "src": "32:5624:0"
        },
        "id": 0
      },
      "contracts/identityManager/AlastriaIdentityIssuer.sol": {
        "ast": {
          "absolutePath": "contracts/identityManager/AlastriaIdentityIssuer.sol",
          "exportedSymbols": {
            "AlastriaIdentityIssuer": [
              548
            ],
            "Eidas": [
              1100
            ],
            "IAidIssuer": [
              347
            ],
            "Initializable": [
              1194
            ]
          },
          "id": 549,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 332,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".24",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:32:1"
            },
            {
              "absolutePath": "contracts/libs/Eidas.sol",
              "file": "../libs/Eidas.sol",
              "id": 333,
              "nodeType": "ImportDirective",
              "scope": 549,
              "sourceUnit": 1101,
              "src": "66:27:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/openzeppelin/Initializable.sol",
              "file": "../openzeppelin/Initializable.sol",
              "id": 334,
              "nodeType": "ImportDirective",
              "scope": 549,
              "sourceUnit": 1195,
              "src": "94:43:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 347,
              "linearizedBaseContracts": [
                347
              ],
              "name": "IAidIssuer",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "c4d66de8",
                  "id": 339,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 337,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 336,
                        "mutability": "mutable",
                        "name": "_firstIdentity",
                        "nodeType": "VariableDeclaration",
                        "scope": 339,
                        "src": "186:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 335,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "186:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "185:24:1"
                  },
                  "returnParameters": {
                    "id": 338,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "218:0:1"
                  },
                  "scope": 347,
                  "src": "166:53:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "6554adf0",
                  "id": 346,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isIdentityIssuer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 342,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 341,
                        "mutability": "mutable",
                        "name": "_identityIssuer",
                        "nodeType": "VariableDeclaration",
                        "scope": 346,
                        "src": "250:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 340,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "250:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "249:25:1"
                  },
                  "returnParameters": {
                    "id": 345,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 344,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 346,
                        "src": "298:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 343,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "298:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "297:6:1"
                  },
                  "scope": 347,
                  "src": "224:80:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 549,
              "src": "139:167:1"
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 348,
                    "name": "Initializable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1194,
                    "src": "343:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Initializable_$1194",
                      "typeString": "contract Initializable"
                    }
                  },
                  "id": 349,
                  "nodeType": "InheritanceSpecifier",
                  "src": "343:13:1"
                }
              ],
              "contractDependencies": [
                1194
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 548,
              "linearizedBaseContracts": [
                548,
                1194
              ],
              "name": "AlastriaIdentityIssuer",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 352,
                  "libraryName": {
                    "id": 350,
                    "name": "Eidas",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1100,
                    "src": "367:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Eidas_$1100",
                      "typeString": "library Eidas"
                    }
                  },
                  "nodeType": "UsingForDirective",
                  "src": "361:33:1",
                  "typeName": {
                    "id": 351,
                    "name": "Eidas.EidasLevel",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1064,
                    "src": "377:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_EidasLevel_$1064",
                      "typeString": "enum Eidas.EidasLevel"
                    }
                  }
                },
                {
                  "canonicalName": "AlastriaIdentityIssuer.IdentityIssuer",
                  "id": 357,
                  "members": [
                    {
                      "constant": false,
                      "id": 354,
                      "mutability": "mutable",
                      "name": "level",
                      "nodeType": "VariableDeclaration",
                      "scope": 357,
                      "src": "426:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_EidasLevel_$1064",
                        "typeString": "enum Eidas.EidasLevel"
                      },
                      "typeName": {
                        "id": 353,
                        "name": "Eidas.EidasLevel",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1064,
                        "src": "426:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_EidasLevel_$1064",
                          "typeString": "enum Eidas.EidasLevel"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 356,
                      "mutability": "mutable",
                      "name": "active",
                      "nodeType": "VariableDeclaration",
                      "scope": 357,
                      "src": "454:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 355,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "454:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "IdentityIssuer",
                  "nodeType": "StructDefinition",
                  "scope": 548,
                  "src": "398:72:1",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 361,
                  "mutability": "mutable",
                  "name": "issuers",
                  "nodeType": "VariableDeclaration",
                  "scope": 548,
                  "src": "474:51:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityIssuer_$357_storage_$",
                    "typeString": "mapping(address => struct AlastriaIdentityIssuer.IdentityIssuer)"
                  },
                  "typeName": {
                    "id": 360,
                    "keyType": {
                      "id": 358,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "482:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "474:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityIssuer_$357_storage_$",
                      "typeString": "mapping(address => struct AlastriaIdentityIssuer.IdentityIssuer)"
                    },
                    "valueType": {
                      "id": 359,
                      "name": "IdentityIssuer",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 357,
                      "src": "493:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IdentityIssuer_$357_storage_ptr",
                        "typeString": "struct AlastriaIdentityIssuer.IdentityIssuer"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 373,
                    "nodeType": "Block",
                    "src": "583:58:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 366,
                                  "name": "issuers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 361,
                                  "src": "597:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityIssuer_$357_storage_$",
                                    "typeString": "mapping(address => struct AlastriaIdentityIssuer.IdentityIssuer storage ref)"
                                  }
                                },
                                "id": 368,
                                "indexExpression": {
                                  "id": 367,
                                  "name": "_identityIssuer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 363,
                                  "src": "605:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "597:24:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_IdentityIssuer_$357_storage",
                                  "typeString": "struct AlastriaIdentityIssuer.IdentityIssuer storage ref"
                                }
                              },
                              "id": 369,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "active",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 356,
                              "src": "597:31:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 365,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "589:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "589:40:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 371,
                        "nodeType": "ExpressionStatement",
                        "src": "589:40:1"
                      },
                      {
                        "id": 372,
                        "nodeType": "PlaceholderStatement",
                        "src": "635:1:1"
                      }
                    ]
                  },
                  "id": 374,
                  "name": "onlyIdentityIssuer",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 364,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 363,
                        "mutability": "mutable",
                        "name": "_identityIssuer",
                        "nodeType": "VariableDeclaration",
                        "scope": 374,
                        "src": "558:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 362,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "558:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "557:25:1"
                  },
                  "src": "530:111:1",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 387,
                    "nodeType": "Block",
                    "src": "697:59:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 383,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "711:32:1",
                              "subExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 379,
                                    "name": "issuers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 361,
                                    "src": "712:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityIssuer_$357_storage_$",
                                      "typeString": "mapping(address => struct AlastriaIdentityIssuer.IdentityIssuer storage ref)"
                                    }
                                  },
                                  "id": 381,
                                  "indexExpression": {
                                    "id": 380,
                                    "name": "_identityIssuer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 376,
                                    "src": "720:15:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "712:24:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IdentityIssuer_$357_storage",
                                    "typeString": "struct AlastriaIdentityIssuer.IdentityIssuer storage ref"
                                  }
                                },
                                "id": 382,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "active",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 356,
                                "src": "712:31:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 378,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "703:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "703:41:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 385,
                        "nodeType": "ExpressionStatement",
                        "src": "703:41:1"
                      },
                      {
                        "id": 386,
                        "nodeType": "PlaceholderStatement",
                        "src": "750:1:1"
                      }
                    ]
                  },
                  "id": 388,
                  "name": "notIdentityIssuer",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 377,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 376,
                        "mutability": "mutable",
                        "name": "_identityIssuer",
                        "nodeType": "VariableDeclaration",
                        "scope": 388,
                        "src": "672:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 375,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "672:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "671:25:1"
                  },
                  "src": "645:111:1",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 399,
                    "nodeType": "Block",
                    "src": "805:46:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 393,
                                  "name": "_level",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 390,
                                  "src": "819:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_EidasLevel_$1064",
                                    "typeString": "enum Eidas.EidasLevel"
                                  }
                                },
                                "id": 394,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "atLeastLow",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1078,
                                "src": "819:17:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_delegatecall_pure$_t_enum$_EidasLevel_$1064_$returns$_t_bool_$bound_to$_t_enum$_EidasLevel_$1064_$",
                                  "typeString": "function (enum Eidas.EidasLevel) pure returns (bool)"
                                }
                              },
                              "id": 395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "819:19:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 392,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "811:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "811:28:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 397,
                        "nodeType": "ExpressionStatement",
                        "src": "811:28:1"
                      },
                      {
                        "id": 398,
                        "nodeType": "PlaceholderStatement",
                        "src": "845:1:1"
                      }
                    ]
                  },
                  "id": 400,
                  "name": "alLeastLow",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 391,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 390,
                        "mutability": "mutable",
                        "name": "_level",
                        "nodeType": "VariableDeclaration",
                        "scope": 400,
                        "src": "780:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_EidasLevel_$1064",
                          "typeString": "enum Eidas.EidasLevel"
                        },
                        "typeName": {
                          "id": 389,
                          "name": "Eidas.EidasLevel",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1064,
                          "src": "780:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_EidasLevel_$1064",
                            "typeString": "enum Eidas.EidasLevel"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "779:25:1"
                  },
                  "src": "760:91:1",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 427,
                    "nodeType": "Block",
                    "src": "918:158:1",
                    "statements": [
                      {
                        "assignments": [
                          408
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 408,
                            "mutability": "mutable",
                            "name": "identityIssuer",
                            "nodeType": "VariableDeclaration",
                            "scope": 427,
                            "src": "924:37:1",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IdentityIssuer_$357_storage_ptr",
                              "typeString": "struct AlastriaIdentityIssuer.IdentityIssuer"
                            },
                            "typeName": {
                              "id": 407,
                              "name": "IdentityIssuer",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 357,
                              "src": "924:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityIssuer_$357_storage_ptr",
                                "typeString": "struct AlastriaIdentityIssuer.IdentityIssuer"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 412,
                        "initialValue": {
                          "baseExpression": {
                            "id": 409,
                            "name": "issuers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 361,
                            "src": "964:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityIssuer_$357_storage_$",
                              "typeString": "mapping(address => struct AlastriaIdentityIssuer.IdentityIssuer storage ref)"
                            }
                          },
                          "id": 411,
                          "indexExpression": {
                            "id": 410,
                            "name": "_firstIdentity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 402,
                            "src": "972:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "964:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IdentityIssuer_$357_storage",
                            "typeString": "struct AlastriaIdentityIssuer.IdentityIssuer storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "924:63:1"
                      },
                      {
                        "expression": {
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 413,
                              "name": "identityIssuer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 408,
                              "src": "993:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityIssuer_$357_storage_ptr",
                                "typeString": "struct AlastriaIdentityIssuer.IdentityIssuer storage pointer"
                              }
                            },
                            "id": 415,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 354,
                            "src": "993:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_EidasLevel_$1064",
                              "typeString": "enum Eidas.EidasLevel"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "expression": {
                                "id": 416,
                                "name": "Eidas",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1100,
                                "src": "1016:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Eidas_$1100_$",
                                  "typeString": "type(library Eidas)"
                                }
                              },
                              "id": 417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "EidasLevel",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1064,
                              "src": "1016:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_EidasLevel_$1064_$",
                                "typeString": "type(enum Eidas.EidasLevel)"
                              }
                            },
                            "id": 418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "High",
                            "nodeType": "MemberAccess",
                            "src": "1016:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_EidasLevel_$1064",
                              "typeString": "enum Eidas.EidasLevel"
                            }
                          },
                          "src": "993:44:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_EidasLevel_$1064",
                            "typeString": "enum Eidas.EidasLevel"
                          }
                        },
                        "id": 420,
                        "nodeType": "ExpressionStatement",
                        "src": "993:44:1"
                      },
                      {
                        "expression": {
                          "id": 425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 421,
                              "name": "identityIssuer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 408,
                              "src": "1043:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityIssuer_$357_storage_ptr",
                                "typeString": "struct AlastriaIdentityIssuer.IdentityIssuer storage pointer"
                              }
                            },
                            "id": 423,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 356,
                            "src": "1043:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1067:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1043:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 426,
                        "nodeType": "ExpressionStatement",
                        "src": "1043:28:1"
                      }
                    ]
                  },
                  "functionSelector": "c4d66de8",
                  "id": 428,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 405,
                      "modifierName": {
                        "id": 404,
                        "name": "initializer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1171,
                        "src": "906:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "906:11:1"
                    }
                  ],
                  "name": "initialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 403,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 402,
                        "mutability": "mutable",
                        "name": "_firstIdentity",
                        "nodeType": "VariableDeclaration",
                        "scope": 428,
                        "src": "875:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 401,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "875:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "874:24:1"
                  },
                  "returnParameters": {
                    "id": 406,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "918:0:1"
                  },
                  "scope": 548,
                  "src": "855:221:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 463,
                    "nodeType": "Block",
                    "src": "1267:144:1",
                    "statements": [
                      {
                        "assignments": [
                          446
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 446,
                            "mutability": "mutable",
                            "name": "identityIssuer",
                            "nodeType": "VariableDeclaration",
                            "scope": 463,
                            "src": "1273:37:1",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IdentityIssuer_$357_storage_ptr",
                              "typeString": "struct AlastriaIdentityIssuer.IdentityIssuer"
                            },
                            "typeName": {
                              "id": 445,
                              "name": "IdentityIssuer",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 357,
                              "src": "1273:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityIssuer_$357_storage_ptr",
                                "typeString": "struct AlastriaIdentityIssuer.IdentityIssuer"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 450,
                        "initialValue": {
                          "baseExpression": {
                            "id": 447,
                            "name": "issuers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 361,
                            "src": "1313:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityIssuer_$357_storage_$",
                              "typeString": "mapping(address => struct AlastriaIdentityIssuer.IdentityIssuer storage ref)"
                            }
                          },
                          "id": 449,
                          "indexExpression": {
                            "id": 448,
                            "name": "_identityIssuer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 430,
                            "src": "1321:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1313:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IdentityIssuer_$357_storage",
                            "typeString": "struct AlastriaIdentityIssuer.IdentityIssuer storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1273:64:1"
                      },
                      {
                        "expression": {
                          "id": 455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 451,
                              "name": "identityIssuer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 446,
                              "src": "1343:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityIssuer_$357_storage_ptr",
                                "typeString": "struct AlastriaIdentityIssuer.IdentityIssuer storage pointer"
                              }
                            },
                            "id": 453,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 354,
                            "src": "1343:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_EidasLevel_$1064",
                              "typeString": "enum Eidas.EidasLevel"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 454,
                            "name": "_level",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 432,
                            "src": "1366:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_EidasLevel_$1064",
                              "typeString": "enum Eidas.EidasLevel"
                            }
                          },
                          "src": "1343:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_EidasLevel_$1064",
                            "typeString": "enum Eidas.EidasLevel"
                          }
                        },
                        "id": 456,
                        "nodeType": "ExpressionStatement",
                        "src": "1343:29:1"
                      },
                      {
                        "expression": {
                          "id": 461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 457,
                              "name": "identityIssuer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 446,
                              "src": "1378:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityIssuer_$357_storage_ptr",
                                "typeString": "struct AlastriaIdentityIssuer.IdentityIssuer storage pointer"
                              }
                            },
                            "id": 459,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 356,
                            "src": "1378:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1402:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1378:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 462,
                        "nodeType": "ExpressionStatement",
                        "src": "1378:28:1"
                      }
                    ]
                  },
                  "functionSelector": "889776a8",
                  "id": 464,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 435,
                          "name": "_level",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 432,
                          "src": "1183:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_EidasLevel_$1064",
                            "typeString": "enum Eidas.EidasLevel"
                          }
                        }
                      ],
                      "id": 436,
                      "modifierName": {
                        "id": 434,
                        "name": "alLeastLow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 400,
                        "src": "1172:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_enum$_EidasLevel_$1064_$",
                          "typeString": "modifier (enum Eidas.EidasLevel)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1172:18:1"
                    },
                    {
                      "arguments": [
                        {
                          "id": 438,
                          "name": "_identityIssuer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 430,
                          "src": "1213:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 439,
                      "modifierName": {
                        "id": 437,
                        "name": "notIdentityIssuer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 388,
                        "src": "1195:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_address_$",
                          "typeString": "modifier (address)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1195:34:1"
                    },
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 441,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1253:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1253:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "id": 443,
                      "modifierName": {
                        "id": 440,
                        "name": "onlyIdentityIssuer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "1234:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_address_$",
                          "typeString": "modifier (address)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1234:30:1"
                    }
                  ],
                  "name": "addIdentityIssuer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 433,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 430,
                        "mutability": "mutable",
                        "name": "_identityIssuer",
                        "nodeType": "VariableDeclaration",
                        "scope": 464,
                        "src": "1107:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 429,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1107:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 432,
                        "mutability": "mutable",
                        "name": "_level",
                        "nodeType": "VariableDeclaration",
                        "scope": 464,
                        "src": "1132:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_EidasLevel_$1064",
                          "typeString": "enum Eidas.EidasLevel"
                        },
                        "typeName": {
                          "id": 431,
                          "name": "Eidas.EidasLevel",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1064,
                          "src": "1132:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_EidasLevel_$1064",
                            "typeString": "enum Eidas.EidasLevel"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1106:50:1"
                  },
                  "returnParameters": {
                    "id": 444,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1267:0:1"
                  },
                  "scope": 548,
                  "src": "1080:331:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 490,
                    "nodeType": "Block",
                    "src": "1576:110:1",
                    "statements": [
                      {
                        "assignments": [
                          479
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 479,
                            "mutability": "mutable",
                            "name": "identityIssuer",
                            "nodeType": "VariableDeclaration",
                            "scope": 490,
                            "src": "1582:37:1",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IdentityIssuer_$357_storage_ptr",
                              "typeString": "struct AlastriaIdentityIssuer.IdentityIssuer"
                            },
                            "typeName": {
                              "id": 478,
                              "name": "IdentityIssuer",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 357,
                              "src": "1582:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityIssuer_$357_storage_ptr",
                                "typeString": "struct AlastriaIdentityIssuer.IdentityIssuer"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 483,
                        "initialValue": {
                          "baseExpression": {
                            "id": 480,
                            "name": "issuers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 361,
                            "src": "1622:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityIssuer_$357_storage_$",
                              "typeString": "mapping(address => struct AlastriaIdentityIssuer.IdentityIssuer storage ref)"
                            }
                          },
                          "id": 482,
                          "indexExpression": {
                            "id": 481,
                            "name": "_identityIssuer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 466,
                            "src": "1630:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1622:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IdentityIssuer_$357_storage",
                            "typeString": "struct AlastriaIdentityIssuer.IdentityIssuer storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1582:64:1"
                      },
                      {
                        "expression": {
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 484,
                              "name": "identityIssuer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 479,
                              "src": "1652:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityIssuer_$357_storage_ptr",
                                "typeString": "struct AlastriaIdentityIssuer.IdentityIssuer storage pointer"
                              }
                            },
                            "id": 486,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 354,
                            "src": "1652:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_EidasLevel_$1064",
                              "typeString": "enum Eidas.EidasLevel"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 487,
                            "name": "_level",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 468,
                            "src": "1675:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_EidasLevel_$1064",
                              "typeString": "enum Eidas.EidasLevel"
                            }
                          },
                          "src": "1652:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_EidasLevel_$1064",
                            "typeString": "enum Eidas.EidasLevel"
                          }
                        },
                        "id": 489,
                        "nodeType": "ExpressionStatement",
                        "src": "1652:29:1"
                      }
                    ]
                  },
                  "functionSelector": "44963610",
                  "id": 491,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 471,
                          "name": "_level",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 468,
                          "src": "1531:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_EidasLevel_$1064",
                            "typeString": "enum Eidas.EidasLevel"
                          }
                        }
                      ],
                      "id": 472,
                      "modifierName": {
                        "id": 470,
                        "name": "alLeastLow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 400,
                        "src": "1520:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_enum$_EidasLevel_$1064_$",
                          "typeString": "modifier (enum Eidas.EidasLevel)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1520:18:1"
                    },
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 474,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1562:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1562:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "id": 476,
                      "modifierName": {
                        "id": 473,
                        "name": "onlyIdentityIssuer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "1543:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_address_$",
                          "typeString": "modifier (address)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1543:30:1"
                    }
                  ],
                  "name": "updateIdentityIssuerEidasLevel",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 469,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 466,
                        "mutability": "mutable",
                        "name": "_identityIssuer",
                        "nodeType": "VariableDeclaration",
                        "scope": 491,
                        "src": "1455:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 465,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1455:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 468,
                        "mutability": "mutable",
                        "name": "_level",
                        "nodeType": "VariableDeclaration",
                        "scope": 491,
                        "src": "1480:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_EidasLevel_$1064",
                          "typeString": "enum Eidas.EidasLevel"
                        },
                        "typeName": {
                          "id": 467,
                          "name": "Eidas.EidasLevel",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1064,
                          "src": "1480:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_EidasLevel_$1064",
                            "typeString": "enum Eidas.EidasLevel"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1454:50:1"
                  },
                  "returnParameters": {
                    "id": 477,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1576:0:1"
                  },
                  "scope": 548,
                  "src": "1415:271:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 520,
                    "nodeType": "Block",
                    "src": "1783:160:1",
                    "statements": [
                      {
                        "assignments": [
                          501
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 501,
                            "mutability": "mutable",
                            "name": "identityIssuer",
                            "nodeType": "VariableDeclaration",
                            "scope": 520,
                            "src": "1789:37:1",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IdentityIssuer_$357_storage_ptr",
                              "typeString": "struct AlastriaIdentityIssuer.IdentityIssuer"
                            },
                            "typeName": {
                              "id": 500,
                              "name": "IdentityIssuer",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 357,
                              "src": "1789:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityIssuer_$357_storage_ptr",
                                "typeString": "struct AlastriaIdentityIssuer.IdentityIssuer"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 505,
                        "initialValue": {
                          "baseExpression": {
                            "id": 502,
                            "name": "issuers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 361,
                            "src": "1829:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityIssuer_$357_storage_$",
                              "typeString": "mapping(address => struct AlastriaIdentityIssuer.IdentityIssuer storage ref)"
                            }
                          },
                          "id": 504,
                          "indexExpression": {
                            "id": 503,
                            "name": "_identityIssuer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 493,
                            "src": "1837:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1829:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IdentityIssuer_$357_storage",
                            "typeString": "struct AlastriaIdentityIssuer.IdentityIssuer storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1789:64:1"
                      },
                      {
                        "expression": {
                          "id": 512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 506,
                              "name": "identityIssuer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 501,
                              "src": "1859:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityIssuer_$357_storage_ptr",
                                "typeString": "struct AlastriaIdentityIssuer.IdentityIssuer storage pointer"
                              }
                            },
                            "id": 508,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 354,
                            "src": "1859:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_EidasLevel_$1064",
                              "typeString": "enum Eidas.EidasLevel"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "expression": {
                                "id": 509,
                                "name": "Eidas",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1100,
                                "src": "1882:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Eidas_$1100_$",
                                  "typeString": "type(library Eidas)"
                                }
                              },
                              "id": 510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "EidasLevel",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1064,
                              "src": "1882:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_EidasLevel_$1064_$",
                                "typeString": "type(enum Eidas.EidasLevel)"
                              }
                            },
                            "id": 511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Null",
                            "nodeType": "MemberAccess",
                            "src": "1882:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_EidasLevel_$1064",
                              "typeString": "enum Eidas.EidasLevel"
                            }
                          },
                          "src": "1859:44:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_EidasLevel_$1064",
                            "typeString": "enum Eidas.EidasLevel"
                          }
                        },
                        "id": 513,
                        "nodeType": "ExpressionStatement",
                        "src": "1859:44:1"
                      },
                      {
                        "expression": {
                          "id": 518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 514,
                              "name": "identityIssuer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 501,
                              "src": "1909:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdentityIssuer_$357_storage_ptr",
                                "typeString": "struct AlastriaIdentityIssuer.IdentityIssuer storage pointer"
                              }
                            },
                            "id": 516,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 356,
                            "src": "1909:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 517,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1933:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "1909:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 519,
                        "nodeType": "ExpressionStatement",
                        "src": "1909:29:1"
                      }
                    ]
                  },
                  "functionSelector": "cb691599",
                  "id": 521,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 496,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1771:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1771:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "id": 498,
                      "modifierName": {
                        "id": 495,
                        "name": "onlyIdentityIssuer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "1752:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_address_$",
                          "typeString": "modifier (address)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1752:30:1"
                    }
                  ],
                  "name": "deleteIdentityIssuer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 494,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 493,
                        "mutability": "mutable",
                        "name": "_identityIssuer",
                        "nodeType": "VariableDeclaration",
                        "scope": 521,
                        "src": "1720:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 492,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1720:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1719:25:1"
                  },
                  "returnParameters": {
                    "id": 499,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1783:0:1"
                  },
                  "scope": 548,
                  "src": "1690:253:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 533,
                    "nodeType": "Block",
                    "src": "2034:48:1",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 528,
                              "name": "issuers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 361,
                              "src": "2047:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityIssuer_$357_storage_$",
                                "typeString": "mapping(address => struct AlastriaIdentityIssuer.IdentityIssuer storage ref)"
                              }
                            },
                            "id": 530,
                            "indexExpression": {
                              "id": 529,
                              "name": "_identityIssuer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 523,
                              "src": "2055:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2047:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IdentityIssuer_$357_storage",
                              "typeString": "struct AlastriaIdentityIssuer.IdentityIssuer storage ref"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "level",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 354,
                          "src": "2047:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_EidasLevel_$1064",
                            "typeString": "enum Eidas.EidasLevel"
                          }
                        },
                        "functionReturnParameters": 527,
                        "id": 532,
                        "nodeType": "Return",
                        "src": "2040:37:1"
                      }
                    ]
                  },
                  "functionSelector": "0e5a4fbb",
                  "id": 534,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getEidasLevel",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 524,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 523,
                        "mutability": "mutable",
                        "name": "_identityIssuer",
                        "nodeType": "VariableDeclaration",
                        "scope": 534,
                        "src": "1970:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 522,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1970:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1969:25:1"
                  },
                  "returnParameters": {
                    "id": 527,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 526,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 534,
                        "src": "2016:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_EidasLevel_$1064",
                          "typeString": "enum Eidas.EidasLevel"
                        },
                        "typeName": {
                          "id": 525,
                          "name": "Eidas.EidasLevel",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1064,
                          "src": "2016:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_EidasLevel_$1064",
                            "typeString": "enum Eidas.EidasLevel"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2015:18:1"
                  },
                  "scope": 548,
                  "src": "1947:135:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 546,
                    "nodeType": "Block",
                    "src": "2164:49:1",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 541,
                              "name": "issuers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 361,
                              "src": "2177:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_IdentityIssuer_$357_storage_$",
                                "typeString": "mapping(address => struct AlastriaIdentityIssuer.IdentityIssuer storage ref)"
                              }
                            },
                            "id": 543,
                            "indexExpression": {
                              "id": 542,
                              "name": "_identityIssuer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 536,
                              "src": "2185:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2177:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IdentityIssuer_$357_storage",
                              "typeString": "struct AlastriaIdentityIssuer.IdentityIssuer storage ref"
                            }
                          },
                          "id": 544,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 356,
                          "src": "2177:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 540,
                        "id": 545,
                        "nodeType": "Return",
                        "src": "2170:38:1"
                      }
                    ]
                  },
                  "functionSelector": "6554adf0",
                  "id": 547,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isIdentityIssuer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 537,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 536,
                        "mutability": "mutable",
                        "name": "_identityIssuer",
                        "nodeType": "VariableDeclaration",
                        "scope": 547,
                        "src": "2112:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 535,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2112:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2111:25:1"
                  },
                  "returnParameters": {
                    "id": 540,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 539,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 547,
                        "src": "2158:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 538,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2158:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2157:6:1"
                  },
                  "scope": 548,
                  "src": "2086:127:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 549,
              "src": "308:1907:1"
            }
          ],
          "src": "32:2184:1"
        },
        "id": 1
      },
      "contracts/identityManager/AlastriaIdentityManager.sol": {
        "ast": {
          "absolutePath": "contracts/identityManager/AlastriaIdentityManager.sol",
          "exportedSymbols": {
            "AlastriaIdentityManager": [
              886
            ],
            "AlastriaProxy": [
              1056
            ],
            "Context": [
              1123
            ],
            "IAidEntity": [
              9
            ],
            "IAidIssuer": [
              347
            ],
            "IAidServiceProvider": [
              896
            ],
            "Initializable": [
              1194
            ],
            "Ownable": [
              1303
            ]
          },
          "id": 887,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 550,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".24",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:32:2"
            },
            {
              "absolutePath": "contracts/identityManager/AlastriaProxy.sol",
              "file": "./AlastriaProxy.sol",
              "id": 551,
              "nodeType": "ImportDirective",
              "scope": 887,
              "sourceUnit": 1057,
              "src": "66:29:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/identityManager/AlastriaIdentityEntity.sol",
              "file": "./AlastriaIdentityEntity.sol",
              "id": 553,
              "nodeType": "ImportDirective",
              "scope": 887,
              "sourceUnit": 331,
              "src": "96:58:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 552,
                    "name": "IAidEntity",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "105:10:2",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/identityManager/AlastriaIdentityIssuer.sol",
              "file": "./AlastriaIdentityIssuer.sol",
              "id": 555,
              "nodeType": "ImportDirective",
              "scope": 887,
              "sourceUnit": 549,
              "src": "155:58:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 554,
                    "name": "IAidIssuer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "164:10:2",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/identityManager/AlastriaIdentityServiceProvider.sol",
              "file": "./AlastriaIdentityServiceProvider.sol",
              "id": 557,
              "nodeType": "ImportDirective",
              "scope": 887,
              "sourceUnit": 996,
              "src": "214:76:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 556,
                    "name": "IAidServiceProvider",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "223:19:2",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/openzeppelin/Initializable.sol",
              "file": "../openzeppelin/Initializable.sol",
              "id": 558,
              "nodeType": "ImportDirective",
              "scope": 887,
              "sourceUnit": 1195,
              "src": "291:43:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 559,
                    "name": "Initializable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1194,
                    "src": "372:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Initializable_$1194",
                      "typeString": "contract Initializable"
                    }
                  },
                  "id": 560,
                  "nodeType": "InheritanceSpecifier",
                  "src": "372:13:2"
                }
              ],
              "contractDependencies": [
                1056,
                1194
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 886,
              "linearizedBaseContracts": [
                886,
                1194
              ],
              "name": "AlastriaIdentityManager",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "54fd4d50",
                  "id": 562,
                  "mutability": "mutable",
                  "name": "version",
                  "nodeType": "VariableDeclaration",
                  "scope": 886,
                  "src": "404:22:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 561,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "404:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 565,
                  "mutability": "constant",
                  "name": "timeToLive",
                  "nodeType": "VariableDeclaration",
                  "scope": 886,
                  "src": "430:44:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 563,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "430:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3130303030",
                    "id": 564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "469:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000_by_1",
                      "typeString": "int_const 10000"
                    },
                    "value": "10000"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 567,
                  "mutability": "mutable",
                  "name": "aidCredentialRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 886,
                  "src": "478:29:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 566,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "478:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 569,
                  "mutability": "mutable",
                  "name": "aidPresentationRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 886,
                  "src": "511:31:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "511:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 571,
                  "mutability": "mutable",
                  "name": "aidPublicKeyRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 886,
                  "src": "546:28:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 570,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "546:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 573,
                  "mutability": "mutable",
                  "name": "aidIssuer",
                  "nodeType": "VariableDeclaration",
                  "scope": 886,
                  "src": "578:29:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAidIssuer_$347",
                    "typeString": "contract IAidIssuer"
                  },
                  "typeName": {
                    "id": 572,
                    "name": "IAidIssuer",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 347,
                    "src": "578:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAidIssuer_$347",
                      "typeString": "contract IAidIssuer"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "0c91465e",
                  "id": 577,
                  "mutability": "mutable",
                  "name": "identityKeys",
                  "nodeType": "VariableDeclaration",
                  "scope": 886,
                  "src": "611:47:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                    "typeString": "mapping(address => address)"
                  },
                  "typeName": {
                    "id": 576,
                    "keyType": {
                      "id": 574,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "619:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "611:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                      "typeString": "mapping(address => address)"
                    },
                    "valueType": {
                      "id": 575,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "630:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "2773d0fa",
                  "id": 581,
                  "mutability": "mutable",
                  "name": "pendingIDs",
                  "nodeType": "VariableDeclaration",
                  "scope": 886,
                  "src": "704:45:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 580,
                    "keyType": {
                      "id": 578,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "712:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "704:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 579,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "723:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 585,
                  "name": "PreparedAlastriaID",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 584,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 583,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "signAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 585,
                        "src": "790:27:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 582,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "790:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "789:29:2"
                  },
                  "src": "765:54:2"
                },
                {
                  "anonymous": false,
                  "id": 589,
                  "name": "OperationWasNotSupported",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 588,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 587,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "method",
                        "nodeType": "VariableDeclaration",
                        "scope": 589,
                        "src": "854:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 586,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "854:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "853:23:2"
                  },
                  "src": "823:54:2"
                },
                {
                  "anonymous": false,
                  "id": 597,
                  "name": "IdentityCreated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 596,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 591,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "identity",
                        "nodeType": "VariableDeclaration",
                        "scope": 597,
                        "src": "903:24:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 590,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "903:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 593,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "creator",
                        "nodeType": "VariableDeclaration",
                        "scope": 597,
                        "src": "929:23:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 592,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "929:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 595,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 597,
                        "src": "954:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 594,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "954:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "902:66:2"
                  },
                  "src": "881:88:2"
                },
                {
                  "anonymous": false,
                  "id": 605,
                  "name": "IdentityRecovered",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 604,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 599,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "oldAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 605,
                        "src": "1002:26:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 598,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1002:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 601,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 605,
                        "src": "1034:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 600,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1034:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 603,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "serviceProvider",
                        "nodeType": "VariableDeclaration",
                        "scope": 605,
                        "src": "1058:31:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 602,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1058:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "996:97:2"
                  },
                  "src": "973:121:2"
                },
                {
                  "body": {
                    "id": 625,
                    "nodeType": "Block",
                    "src": "1162:101:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 614,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 610,
                                    "name": "pendingIDs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 581,
                                    "src": "1176:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 612,
                                  "indexExpression": {
                                    "id": 611,
                                    "name": "_signAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 607,
                                    "src": "1187:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1176:24:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 613,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1203:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "1176:28:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 620,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 615,
                                    "name": "pendingIDs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 581,
                                    "src": "1208:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 617,
                                  "indexExpression": {
                                    "id": 616,
                                    "name": "_signAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 607,
                                    "src": "1219:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1208:24:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "expression": {
                                    "id": 618,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "1235:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 619,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "1235:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1208:42:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1176:74:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 609,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1168:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1168:83:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 623,
                        "nodeType": "ExpressionStatement",
                        "src": "1168:83:2"
                      },
                      {
                        "id": 624,
                        "nodeType": "PlaceholderStatement",
                        "src": "1257:1:2"
                      }
                    ]
                  },
                  "id": 626,
                  "name": "isPendingAndOnTime",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 608,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 607,
                        "mutability": "mutable",
                        "name": "_signAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 626,
                        "src": "1140:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 606,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1140:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1139:22:2"
                  },
                  "src": "1112:151:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 640,
                    "nodeType": "Block",
                    "src": "1303:87:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 631,
                                "name": "addr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 628,
                                "src": "1359:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 634,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1375:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 633,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1367:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 632,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1367:7:2",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 635,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1367:10:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "1359:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 630,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1351:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1351:27:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 638,
                        "nodeType": "ExpressionStatement",
                        "src": "1351:27:2"
                      },
                      {
                        "id": 639,
                        "nodeType": "PlaceholderStatement",
                        "src": "1384:1:2"
                      }
                    ]
                  },
                  "id": 641,
                  "name": "validAddress",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 629,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 628,
                        "mutability": "mutable",
                        "name": "addr",
                        "nodeType": "VariableDeclaration",
                        "scope": 641,
                        "src": "1289:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 627,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1289:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1288:14:2"
                  },
                  "src": "1267:123:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 721,
                    "nodeType": "Block",
                    "src": "1634:677:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 658,
                            "name": "aidCredentialRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 567,
                            "src": "1740:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 659,
                            "name": "_credentialRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 649,
                            "src": "1764:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1740:43:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 661,
                        "nodeType": "ExpressionStatement",
                        "src": "1740:43:2"
                      },
                      {
                        "expression": {
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 662,
                            "name": "aidPresentationRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 569,
                            "src": "1789:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 663,
                            "name": "_presentationRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 651,
                            "src": "1815:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1789:47:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 665,
                        "nodeType": "ExpressionStatement",
                        "src": "1789:47:2"
                      },
                      {
                        "expression": {
                          "id": 668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 666,
                            "name": "aidPublicKeyRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 571,
                            "src": "1842:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 667,
                            "name": "_publicKeyRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 653,
                            "src": "1865:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1842:41:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 669,
                        "nodeType": "ExpressionStatement",
                        "src": "1842:41:2"
                      },
                      {
                        "assignments": [
                          671
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 671,
                            "mutability": "mutable",
                            "name": "identity",
                            "nodeType": "VariableDeclaration",
                            "scope": 721,
                            "src": "1938:22:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlastriaProxy_$1056",
                              "typeString": "contract AlastriaProxy"
                            },
                            "typeName": {
                              "id": 670,
                              "name": "AlastriaProxy",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1056,
                              "src": "1938:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AlastriaProxy_$1056",
                                "typeString": "contract AlastriaProxy"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 675,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 673,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1963:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_AlastriaProxy_$1056_$",
                              "typeString": "function () returns (contract AlastriaProxy)"
                            },
                            "typeName": {
                              "id": 672,
                              "name": "AlastriaProxy",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1056,
                              "src": "1967:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AlastriaProxy_$1056",
                                "typeString": "contract AlastriaProxy"
                              }
                            }
                          },
                          "id": 674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1963:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AlastriaProxy_$1056",
                            "typeString": "contract AlastriaProxy"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1938:44:2"
                      },
                      {
                        "expression": {
                          "id": 684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 676,
                              "name": "identityKeys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 577,
                              "src": "2034:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 679,
                            "indexExpression": {
                              "expression": {
                                "id": 677,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2047:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 678,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2047:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2034:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 682,
                                "name": "identity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 671,
                                "src": "2069:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AlastriaProxy_$1056",
                                  "typeString": "contract AlastriaProxy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AlastriaProxy_$1056",
                                  "typeString": "contract AlastriaProxy"
                                }
                              ],
                              "id": 681,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2061:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 680,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2061:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2061:17:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2034:44:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 685,
                        "nodeType": "ExpressionStatement",
                        "src": "2034:44:2"
                      },
                      {
                        "expression": {
                          "id": 690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 686,
                            "name": "aidIssuer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 573,
                            "src": "2084:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAidIssuer_$347",
                              "typeString": "contract IAidIssuer"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 688,
                                "name": "_aidIssuer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 645,
                                "src": "2107:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 687,
                              "name": "IAidIssuer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 347,
                              "src": "2096:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IAidIssuer_$347_$",
                                "typeString": "type(contract IAidIssuer)"
                              }
                            },
                            "id": 689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2096:22:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAidIssuer_$347",
                              "typeString": "contract IAidIssuer"
                            }
                          },
                          "src": "2084:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAidIssuer_$347",
                            "typeString": "contract IAidIssuer"
                          }
                        },
                        "id": 691,
                        "nodeType": "ExpressionStatement",
                        "src": "2084:34:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 697,
                                  "name": "identity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 671,
                                  "src": "2153:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AlastriaProxy_$1056",
                                    "typeString": "contract AlastriaProxy"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AlastriaProxy_$1056",
                                    "typeString": "contract AlastriaProxy"
                                  }
                                ],
                                "id": 696,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2145:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 695,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2145:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 698,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2145:17:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 692,
                              "name": "aidIssuer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 573,
                              "src": "2124:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAidIssuer_$347",
                                "typeString": "contract IAidIssuer"
                              }
                            },
                            "id": 694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 339,
                            "src": "2124:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2124:39:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 700,
                        "nodeType": "ExpressionStatement",
                        "src": "2124:39:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 707,
                                  "name": "identity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 671,
                                  "src": "2229:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AlastriaProxy_$1056",
                                    "typeString": "contract AlastriaProxy"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AlastriaProxy_$1056",
                                    "typeString": "contract AlastriaProxy"
                                  }
                                ],
                                "id": 706,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2221:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 705,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2221:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2221:17:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 702,
                                  "name": "_aidServiceProvider",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 647,
                                  "src": "2189:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 701,
                                "name": "IAidServiceProvider",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 896,
                                "src": "2169:19:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IAidServiceProvider_$896_$",
                                  "typeString": "type(contract IAidServiceProvider)"
                                }
                              },
                              "id": 703,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2169:40:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAidServiceProvider_$896",
                                "typeString": "contract IAidServiceProvider"
                              }
                            },
                            "id": 704,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 895,
                            "src": "2169:51:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2169:70:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 710,
                        "nodeType": "ExpressionStatement",
                        "src": "2169:70:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 717,
                                  "name": "identity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 671,
                                  "src": "2296:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AlastriaProxy_$1056",
                                    "typeString": "contract AlastriaProxy"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AlastriaProxy_$1056",
                                    "typeString": "contract AlastriaProxy"
                                  }
                                ],
                                "id": 716,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2288:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 715,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2288:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2288:17:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 712,
                                  "name": "_aidEntity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 643,
                                  "src": "2265:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 711,
                                "name": "IAidServiceProvider",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 896,
                                "src": "2245:19:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IAidServiceProvider_$896_$",
                                  "typeString": "type(contract IAidServiceProvider)"
                                }
                              },
                              "id": 713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2245:31:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAidServiceProvider_$896",
                                "typeString": "contract IAidServiceProvider"
                              }
                            },
                            "id": 714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 895,
                            "src": "2245:42:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2245:61:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 720,
                        "nodeType": "ExpressionStatement",
                        "src": "2245:61:2"
                      }
                    ]
                  },
                  "functionSelector": "cc2a9a5b",
                  "id": 722,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 656,
                      "modifierName": {
                        "id": 655,
                        "name": "initializer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1171,
                        "src": "1622:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1622:11:2"
                    }
                  ],
                  "name": "initialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 654,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 643,
                        "mutability": "mutable",
                        "name": "_aidEntity",
                        "nodeType": "VariableDeclaration",
                        "scope": 722,
                        "src": "1435:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 642,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1435:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 645,
                        "mutability": "mutable",
                        "name": "_aidIssuer",
                        "nodeType": "VariableDeclaration",
                        "scope": 722,
                        "src": "1459:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 644,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1459:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 647,
                        "mutability": "mutable",
                        "name": "_aidServiceProvider",
                        "nodeType": "VariableDeclaration",
                        "scope": 722,
                        "src": "1483:27:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 646,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1483:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 649,
                        "mutability": "mutable",
                        "name": "_credentialRegistry",
                        "nodeType": "VariableDeclaration",
                        "scope": 722,
                        "src": "1516:27:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 648,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1516:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 651,
                        "mutability": "mutable",
                        "name": "_presentationRegistry",
                        "nodeType": "VariableDeclaration",
                        "scope": 722,
                        "src": "1549:29:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 650,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1549:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 653,
                        "mutability": "mutable",
                        "name": "_publicKeyRegistry",
                        "nodeType": "VariableDeclaration",
                        "scope": 722,
                        "src": "1584:26:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 652,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1584:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1429:185:2"
                  },
                  "returnParameters": {
                    "id": 657,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1634:0:2"
                  },
                  "scope": 886,
                  "src": "1410:901:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 749,
                    "nodeType": "Block",
                    "src": "2383:190:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 730,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2424:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 731,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2424:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "expression": {
                                  "id": 728,
                                  "name": "aidIssuer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 573,
                                  "src": "2397:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAidIssuer_$347",
                                    "typeString": "contract IAidIssuer"
                                  }
                                },
                                "id": 729,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "isIdentityIssuer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 346,
                                "src": "2397:26:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view external returns (bool)"
                                }
                              },
                              "id": 732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2397:38:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c7920697373756572732061726520616c6c6f776564",
                              "id": 733,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2437:26:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_33668c1d35ce20e6dd1d51ffbaeb3be965e6f5dd0159cf47a0808fc1e8d97f9d",
                                "typeString": "literal_string \"Only issuers are allowed\""
                              },
                              "value": "Only issuers are allowed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_33668c1d35ce20e6dd1d51ffbaeb3be965e6f5dd0159cf47a0808fc1e8d97f9d",
                                "typeString": "literal_string \"Only issuers are allowed\""
                              }
                            ],
                            "id": 727,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2389:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2389:75:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 735,
                        "nodeType": "ExpressionStatement",
                        "src": "2389:75:2"
                      },
                      {
                        "expression": {
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 736,
                              "name": "pendingIDs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 581,
                              "src": "2470:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 738,
                            "indexExpression": {
                              "id": 737,
                              "name": "_signAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 724,
                              "src": "2481:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2470:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 739,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "2497:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 740,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "2497:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 741,
                              "name": "timeToLive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 565,
                              "src": "2515:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2497:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2470:55:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 744,
                        "nodeType": "ExpressionStatement",
                        "src": "2470:55:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 746,
                              "name": "_signAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 724,
                              "src": "2555:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 745,
                            "name": "PreparedAlastriaID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 585,
                            "src": "2536:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2536:32:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 748,
                        "nodeType": "EmitStatement",
                        "src": "2531:37:2"
                      }
                    ]
                  },
                  "functionSelector": "45748b42",
                  "id": 750,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "prepareAlastriaID",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 725,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 724,
                        "mutability": "mutable",
                        "name": "_signAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "2354:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 723,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2354:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2353:22:2"
                  },
                  "returnParameters": {
                    "id": 726,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2383:0:2"
                  },
                  "scope": 886,
                  "src": "2327:246:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 795,
                    "nodeType": "Block",
                    "src": "3016:239:2",
                    "statements": [
                      {
                        "assignments": [
                          765
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 765,
                            "mutability": "mutable",
                            "name": "identity",
                            "nodeType": "VariableDeclaration",
                            "scope": 795,
                            "src": "3022:22:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlastriaProxy_$1056",
                              "typeString": "contract AlastriaProxy"
                            },
                            "typeName": {
                              "id": 764,
                              "name": "AlastriaProxy",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1056,
                              "src": "3022:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AlastriaProxy_$1056",
                                "typeString": "contract AlastriaProxy"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 769,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3047:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_AlastriaProxy_$1056_$",
                              "typeString": "function () returns (contract AlastriaProxy)"
                            },
                            "typeName": {
                              "id": 766,
                              "name": "AlastriaProxy",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1056,
                              "src": "3051:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AlastriaProxy_$1056",
                                "typeString": "contract AlastriaProxy"
                              }
                            }
                          },
                          "id": 768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3047:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AlastriaProxy_$1056",
                            "typeString": "contract AlastriaProxy"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3022:44:2"
                      },
                      {
                        "expression": {
                          "id": 778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 770,
                              "name": "identityKeys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 577,
                              "src": "3072:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 773,
                            "indexExpression": {
                              "expression": {
                                "id": 771,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3085:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3085:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3072:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 776,
                                "name": "identity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 765,
                                "src": "3107:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AlastriaProxy_$1056",
                                  "typeString": "contract AlastriaProxy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AlastriaProxy_$1056",
                                  "typeString": "contract AlastriaProxy"
                                }
                              ],
                              "id": 775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3099:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 774,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3099:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3099:17:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3072:44:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 779,
                        "nodeType": "ExpressionStatement",
                        "src": "3072:44:2"
                      },
                      {
                        "expression": {
                          "id": 785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 780,
                              "name": "pendingIDs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 581,
                              "src": "3122:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 783,
                            "indexExpression": {
                              "expression": {
                                "id": 781,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3133:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3133:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3122:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3147:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3122:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 786,
                        "nodeType": "ExpressionStatement",
                        "src": "3122:26:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 790,
                              "name": "aidPublicKeyRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 571,
                              "src": "3171:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 791,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3193:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 792,
                              "name": "addPublicKeyCallData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 753,
                              "src": "3196:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 787,
                              "name": "identity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 765,
                              "src": "3154:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AlastriaProxy_$1056",
                                "typeString": "contract AlastriaProxy"
                              }
                            },
                            "id": 789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "forward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1055,
                            "src": "3154:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,uint256,bytes memory) external returns (bytes memory)"
                            }
                          },
                          "id": 793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3154:63:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 794,
                        "nodeType": "ExpressionStatement",
                        "src": "3154:63:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 751,
                    "nodeType": "StructuredDocumentation",
                    "src": "2577:292:2",
                    "text": "@dev Creates a new AlastriaProxy contract for an owner and recovery and allows an initial forward call which would be to set the registry in our case\n @param addPublicKeyCallData of the call to addKey function in AlastriaPublicKeyRegistry from the new deployed AlastriaProxy contract"
                  },
                  "functionSelector": "6d69d99a",
                  "id": 796,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 756,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2967:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2967:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "id": 758,
                      "modifierName": {
                        "id": 755,
                        "name": "validAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 641,
                        "src": "2954:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_address_$",
                          "typeString": "modifier (address)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2954:24:2"
                    },
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 760,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3002:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3002:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "id": 762,
                      "modifierName": {
                        "id": 759,
                        "name": "isPendingAndOnTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "2983:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_address_$",
                          "typeString": "modifier (address)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2983:30:2"
                    }
                  ],
                  "name": "createAlastriaIdentity",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 754,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 753,
                        "mutability": "mutable",
                        "name": "addPublicKeyCallData",
                        "nodeType": "VariableDeclaration",
                        "scope": 796,
                        "src": "2904:33:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 752,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2904:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2903:35:2"
                  },
                  "returnParameters": {
                    "id": 763,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3016:0:2"
                  },
                  "scope": 886,
                  "src": "2872:383:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 843,
                    "nodeType": "Block",
                    "src": "3458:229:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 809,
                                  "name": "identityKeys",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 577,
                                  "src": "3472:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                    "typeString": "mapping(address => address)"
                                  }
                                },
                                "id": 812,
                                "indexExpression": {
                                  "expression": {
                                    "id": 810,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3485:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 811,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3485:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3472:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 815,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3508:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 814,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3500:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 813,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3500:7:2",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 816,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3500:10:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "3472:38:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 808,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3464:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3464:47:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 819,
                        "nodeType": "ExpressionStatement",
                        "src": "3464:47:2"
                      },
                      {
                        "assignments": [
                          821
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 821,
                            "mutability": "mutable",
                            "name": "identity",
                            "nodeType": "VariableDeclaration",
                            "scope": 843,
                            "src": "3517:22:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlastriaProxy_$1056",
                              "typeString": "contract AlastriaProxy"
                            },
                            "typeName": {
                              "id": 820,
                              "name": "AlastriaProxy",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1056,
                              "src": "3517:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AlastriaProxy_$1056",
                                "typeString": "contract AlastriaProxy"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 831,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 825,
                                    "name": "identityKeys",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 577,
                                    "src": "3564:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                      "typeString": "mapping(address => address)"
                                    }
                                  },
                                  "id": 828,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 826,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3577:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 827,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3577:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3564:24:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 824,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3556:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 823,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3556:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 829,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3556:33:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 822,
                            "name": "AlastriaProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1056,
                            "src": "3542:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AlastriaProxy_$1056_$",
                              "typeString": "type(contract AlastriaProxy)"
                            }
                          },
                          "id": 830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3542:48:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AlastriaProxy_$1056",
                            "typeString": "contract AlastriaProxy"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3517:73:2"
                      },
                      {
                        "assignments": [
                          833
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 833,
                            "mutability": "mutable",
                            "name": "result",
                            "nodeType": "VariableDeclaration",
                            "scope": 843,
                            "src": "3596:19:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 832,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3596:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 840,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 836,
                              "name": "_destination",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 799,
                              "src": "3635:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 837,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 801,
                              "src": "3649:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 838,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 803,
                              "src": "3657:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 834,
                              "name": "identity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 821,
                              "src": "3618:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AlastriaProxy_$1056",
                                "typeString": "contract AlastriaProxy"
                              }
                            },
                            "id": 835,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "forward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1055,
                            "src": "3618:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,uint256,bytes memory) external returns (bytes memory)"
                            }
                          },
                          "id": 839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3618:45:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3596:67:2"
                      },
                      {
                        "expression": {
                          "id": 841,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 833,
                          "src": "3676:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 807,
                        "id": 842,
                        "nodeType": "Return",
                        "src": "3669:13:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 797,
                    "nodeType": "StructuredDocumentation",
                    "src": "3259:70:2",
                    "text": "@dev This method send a transaction trough the proxy of the sender"
                  },
                  "functionSelector": "597b2e9b",
                  "id": 844,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "delegateCall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 804,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 799,
                        "mutability": "mutable",
                        "name": "_destination",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "3359:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 798,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3359:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 801,
                        "mutability": "mutable",
                        "name": "_value",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "3385:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 800,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3385:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 803,
                        "mutability": "mutable",
                        "name": "_data",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "3405:18:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 802,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3405:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3353:74:2"
                  },
                  "returnParameters": {
                    "id": 807,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 806,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "3444:12:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 805,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3444:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3443:14:2"
                  },
                  "scope": 886,
                  "src": "3332:355:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 884,
                    "nodeType": "Block",
                    "src": "3763:253:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 854,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3804:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 855,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3804:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "expression": {
                                  "id": 852,
                                  "name": "aidIssuer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 573,
                                  "src": "3777:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAidIssuer_$347",
                                    "typeString": "contract IAidIssuer"
                                  }
                                },
                                "id": 853,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "isIdentityIssuer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 346,
                                "src": "3777:26:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view external returns (bool)"
                                }
                              },
                              "id": 856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3777:38:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c7920697373756572732061726520616c6c6f776564",
                              "id": 857,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3817:26:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_33668c1d35ce20e6dd1d51ffbaeb3be965e6f5dd0159cf47a0808fc1e8d97f9d",
                                "typeString": "literal_string \"Only issuers are allowed\""
                              },
                              "value": "Only issuers are allowed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_33668c1d35ce20e6dd1d51ffbaeb3be965e6f5dd0159cf47a0808fc1e8d97f9d",
                                "typeString": "literal_string \"Only issuers are allowed\""
                              }
                            ],
                            "id": 851,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3769:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3769:75:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 859,
                        "nodeType": "ExpressionStatement",
                        "src": "3769:75:2"
                      },
                      {
                        "expression": {
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 860,
                              "name": "identityKeys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 577,
                              "src": "3850:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 862,
                            "indexExpression": {
                              "id": 861,
                              "name": "newAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 848,
                              "src": "3863:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3850:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 863,
                              "name": "identityKeys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 577,
                              "src": "3877:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 865,
                            "indexExpression": {
                              "id": 864,
                              "name": "accountLost",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 846,
                              "src": "3890:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3877:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3850:52:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 867,
                        "nodeType": "ExpressionStatement",
                        "src": "3850:52:2"
                      },
                      {
                        "expression": {
                          "id": 875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 868,
                              "name": "identityKeys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 577,
                              "src": "3908:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 870,
                            "indexExpression": {
                              "id": 869,
                              "name": "accountLost",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 846,
                              "src": "3921:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3908:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 873,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3944:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3936:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 871,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3936:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3936:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3908:38:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 876,
                        "nodeType": "ExpressionStatement",
                        "src": "3908:38:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 878,
                              "name": "accountLost",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 846,
                              "src": "3975:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 879,
                              "name": "newAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 848,
                              "src": "3988:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 880,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4000:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4000:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 877,
                            "name": "IdentityRecovered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 605,
                            "src": "3957:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,address)"
                            }
                          },
                          "id": 882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3957:54:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 883,
                        "nodeType": "EmitStatement",
                        "src": "3952:59:2"
                      }
                    ]
                  },
                  "functionSelector": "c71cbcf3",
                  "id": 885,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "recoverAccount",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 849,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 846,
                        "mutability": "mutable",
                        "name": "accountLost",
                        "nodeType": "VariableDeclaration",
                        "scope": 885,
                        "src": "3715:19:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 845,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3715:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 848,
                        "mutability": "mutable",
                        "name": "newAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 885,
                        "src": "3736:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 847,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3736:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3714:41:2"
                  },
                  "returnParameters": {
                    "id": 850,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3763:0:2"
                  },
                  "scope": 886,
                  "src": "3691:325:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 887,
              "src": "336:3682:2"
            }
          ],
          "src": "32:3987:2"
        },
        "id": 2
      },
      "contracts/identityManager/AlastriaIdentityServiceProvider.sol": {
        "ast": {
          "absolutePath": "contracts/identityManager/AlastriaIdentityServiceProvider.sol",
          "exportedSymbols": {
            "AlastriaIdentityServiceProvider": [
              995
            ],
            "Eidas": [
              1100
            ],
            "IAidServiceProvider": [
              896
            ],
            "Initializable": [
              1194
            ]
          },
          "id": 996,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 888,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".24",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:32:3"
            },
            {
              "absolutePath": "contracts/libs/Eidas.sol",
              "file": "../libs/Eidas.sol",
              "id": 889,
              "nodeType": "ImportDirective",
              "scope": 996,
              "sourceUnit": 1101,
              "src": "66:27:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/openzeppelin/Initializable.sol",
              "file": "../openzeppelin/Initializable.sol",
              "id": 890,
              "nodeType": "ImportDirective",
              "scope": 996,
              "sourceUnit": 1195,
              "src": "94:43:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 896,
              "linearizedBaseContracts": [
                896
              ],
              "name": "IAidServiceProvider",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "c4d66de8",
                  "id": 895,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 893,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 892,
                        "mutability": "mutable",
                        "name": "_firstIdentity",
                        "nodeType": "VariableDeclaration",
                        "scope": 895,
                        "src": "195:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 891,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "195:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "194:24:3"
                  },
                  "returnParameters": {
                    "id": 894,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "227:0:3"
                  },
                  "scope": 896,
                  "src": "175:53:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 996,
              "src": "139:91:3"
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 897,
                    "name": "Initializable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1194,
                    "src": "276:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Initializable_$1194",
                      "typeString": "contract Initializable"
                    }
                  },
                  "id": 898,
                  "nodeType": "InheritanceSpecifier",
                  "src": "276:13:3"
                }
              ],
              "contractDependencies": [
                1194
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 995,
              "linearizedBaseContracts": [
                995,
                1194
              ],
              "name": "AlastriaIdentityServiceProvider",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 901,
                  "libraryName": {
                    "id": 899,
                    "name": "Eidas",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1100,
                    "src": "303:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Eidas_$1100",
                      "typeString": "library Eidas"
                    }
                  },
                  "nodeType": "UsingForDirective",
                  "src": "297:33:3",
                  "typeName": {
                    "id": 900,
                    "name": "Eidas.EidasLevel",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1064,
                    "src": "313:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_EidasLevel_$1064",
                      "typeString": "enum Eidas.EidasLevel"
                    }
                  }
                },
                {
                  "constant": false,
                  "id": 905,
                  "mutability": "mutable",
                  "name": "providers",
                  "nodeType": "VariableDeclaration",
                  "scope": 995,
                  "src": "336:43:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 904,
                    "keyType": {
                      "id": 902,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "344:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "336:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 903,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "355:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 916,
                    "nodeType": "Block",
                    "src": "457:89:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 911,
                                  "name": "_identityServiceProvider",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 907,
                                  "src": "502:24:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 910,
                                "name": "isIdentityServiceProvider",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 994,
                                "src": "476:25:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 912,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "476:51:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 909,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "467:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "467:61:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 914,
                        "nodeType": "ExpressionStatement",
                        "src": "467:61:3"
                      },
                      {
                        "id": 915,
                        "nodeType": "PlaceholderStatement",
                        "src": "538:1:3"
                      }
                    ]
                  },
                  "id": 917,
                  "name": "onlyIdentityServiceProvider",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 908,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 907,
                        "mutability": "mutable",
                        "name": "_identityServiceProvider",
                        "nodeType": "VariableDeclaration",
                        "scope": 917,
                        "src": "423:32:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 906,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "423:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "422:34:3"
                  },
                  "src": "386:160:3",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 929,
                    "nodeType": "Block",
                    "src": "622:90:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 925,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "641:52:3",
                              "subExpression": {
                                "arguments": [
                                  {
                                    "id": 923,
                                    "name": "_identityServiceProvider",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 919,
                                    "src": "668:24:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 922,
                                  "name": "isIdentityServiceProvider",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 994,
                                  "src": "642:25:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (address) view returns (bool)"
                                  }
                                },
                                "id": 924,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "642:51:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 921,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "632:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "632:62:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 927,
                        "nodeType": "ExpressionStatement",
                        "src": "632:62:3"
                      },
                      {
                        "id": 928,
                        "nodeType": "PlaceholderStatement",
                        "src": "704:1:3"
                      }
                    ]
                  },
                  "id": 930,
                  "name": "notIdentityServiceProvider",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 920,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 919,
                        "mutability": "mutable",
                        "name": "_identityServiceProvider",
                        "nodeType": "VariableDeclaration",
                        "scope": 930,
                        "src": "588:32:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 918,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "588:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "587:34:3"
                  },
                  "src": "552:160:3",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 943,
                    "nodeType": "Block",
                    "src": "781:49:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 937,
                              "name": "providers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 905,
                              "src": "791:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 939,
                            "indexExpression": {
                              "id": 938,
                              "name": "_firstIdentity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 932,
                              "src": "801:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "791:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "819:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "791:32:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 942,
                        "nodeType": "ExpressionStatement",
                        "src": "791:32:3"
                      }
                    ]
                  },
                  "functionSelector": "c4d66de8",
                  "id": 944,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 935,
                      "modifierName": {
                        "id": 934,
                        "name": "initializer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1171,
                        "src": "769:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "769:11:3"
                    }
                  ],
                  "name": "initialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 933,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 932,
                        "mutability": "mutable",
                        "name": "_firstIdentity",
                        "nodeType": "VariableDeclaration",
                        "scope": 944,
                        "src": "738:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 931,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "738:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "737:24:3"
                  },
                  "returnParameters": {
                    "id": 936,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "781:0:3"
                  },
                  "scope": 995,
                  "src": "718:112:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 962,
                    "nodeType": "Block",
                    "src": "1006:59:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 956,
                              "name": "providers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 905,
                              "src": "1016:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 958,
                            "indexExpression": {
                              "id": 957,
                              "name": "_identityServiceProvider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 946,
                              "src": "1026:24:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1016:35:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 959,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1054:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1016:42:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 961,
                        "nodeType": "ExpressionStatement",
                        "src": "1016:42:3"
                      }
                    ]
                  },
                  "functionSelector": "0ebbbffc",
                  "id": 963,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 949,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "941:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "941:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "id": 951,
                      "modifierName": {
                        "id": 948,
                        "name": "onlyIdentityServiceProvider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 917,
                        "src": "913:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_address_$",
                          "typeString": "modifier (address)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "913:39:3"
                    },
                    {
                      "arguments": [
                        {
                          "id": 953,
                          "name": "_identityServiceProvider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 946,
                          "src": "980:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 954,
                      "modifierName": {
                        "id": 952,
                        "name": "notIdentityServiceProvider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 930,
                        "src": "953:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_address_$",
                          "typeString": "modifier (address)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "953:52:3"
                    }
                  ],
                  "name": "addIdentityServiceProvider",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 947,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 946,
                        "mutability": "mutable",
                        "name": "_identityServiceProvider",
                        "nodeType": "VariableDeclaration",
                        "scope": 963,
                        "src": "872:32:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 945,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "872:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "871:34:3"
                  },
                  "returnParameters": {
                    "id": 955,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1006:0:3"
                  },
                  "scope": 995,
                  "src": "836:229:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 981,
                    "nodeType": "Block",
                    "src": "1245:60:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 975,
                              "name": "providers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 905,
                              "src": "1255:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 977,
                            "indexExpression": {
                              "id": 976,
                              "name": "_identityServiceProvider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 965,
                              "src": "1265:24:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1255:35:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 978,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1293:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "1255:43:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 980,
                        "nodeType": "ExpressionStatement",
                        "src": "1255:43:3"
                      }
                    ]
                  },
                  "functionSelector": "3bf47215",
                  "id": 982,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 968,
                          "name": "_identityServiceProvider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 965,
                          "src": "1179:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 969,
                      "modifierName": {
                        "id": 967,
                        "name": "onlyIdentityServiceProvider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 917,
                        "src": "1151:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_address_$",
                          "typeString": "modifier (address)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1151:53:3"
                    },
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 971,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1233:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1233:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "id": 973,
                      "modifierName": {
                        "id": 970,
                        "name": "onlyIdentityServiceProvider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 917,
                        "src": "1205:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_address_$",
                          "typeString": "modifier (address)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1205:39:3"
                    }
                  ],
                  "name": "deleteIdentityServiceProvider",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 966,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 965,
                        "mutability": "mutable",
                        "name": "_identityServiceProvider",
                        "nodeType": "VariableDeclaration",
                        "scope": 982,
                        "src": "1110:32:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 964,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1110:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1109:34:3"
                  },
                  "returnParameters": {
                    "id": 974,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1245:0:3"
                  },
                  "scope": 995,
                  "src": "1071:234:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 993,
                    "nodeType": "Block",
                    "src": "1407:59:3",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 989,
                            "name": "providers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 905,
                            "src": "1424:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 991,
                          "indexExpression": {
                            "id": 990,
                            "name": "_identityServiceProvider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 984,
                            "src": "1434:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1424:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 988,
                        "id": 992,
                        "nodeType": "Return",
                        "src": "1417:42:3"
                      }
                    ]
                  },
                  "functionSelector": "d024d9a4",
                  "id": 994,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isIdentityServiceProvider",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 985,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 984,
                        "mutability": "mutable",
                        "name": "_identityServiceProvider",
                        "nodeType": "VariableDeclaration",
                        "scope": 994,
                        "src": "1346:32:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 983,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1346:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1345:34:3"
                  },
                  "returnParameters": {
                    "id": 988,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 987,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 994,
                        "src": "1401:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 986,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1401:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1400:6:3"
                  },
                  "scope": 995,
                  "src": "1311:155:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 996,
              "src": "232:1237:3"
            }
          ],
          "src": "32:1438:3"
        },
        "id": 3
      },
      "contracts/identityManager/AlastriaProxy.sol": {
        "ast": {
          "absolutePath": "contracts/identityManager/AlastriaProxy.sol",
          "exportedSymbols": {
            "AlastriaProxy": [
              1056
            ],
            "Context": [
              1123
            ],
            "Ownable": [
              1303
            ]
          },
          "id": 1057,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 997,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".24",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:32:4"
            },
            {
              "absolutePath": "contracts/openzeppelin/ownership/Ownable.sol",
              "file": "../openzeppelin/ownership/Ownable.sol",
              "id": 998,
              "nodeType": "ImportDirective",
              "scope": 1057,
              "sourceUnit": 1304,
              "src": "66:47:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 999,
                    "name": "Ownable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1303,
                    "src": "141:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ownable_$1303",
                      "typeString": "contract Ownable"
                    }
                  },
                  "id": 1000,
                  "nodeType": "InheritanceSpecifier",
                  "src": "141:7:4"
                }
              ],
              "contractDependencies": [
                1123,
                1303
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1056,
              "linearizedBaseContracts": [
                1056,
                1303,
                1123
              ],
              "name": "AlastriaProxy",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "id": 1010,
                  "name": "Forwarded",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1009,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1002,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "destination",
                        "nodeType": "VariableDeclaration",
                        "scope": 1010,
                        "src": "196:27:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1001,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "196:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1004,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 1010,
                        "src": "225:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1003,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "225:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1006,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1010,
                        "src": "240:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1005,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "240:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1008,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "result",
                        "nodeType": "VariableDeclaration",
                        "scope": 1010,
                        "src": "252:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1007,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "252:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "195:70:4"
                  },
                  "src": "180:86:4"
                },
                {
                  "body": {
                    "id": 1016,
                    "nodeType": "Block",
                    "src": "413:19:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1013,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "419:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "419:8:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1015,
                        "nodeType": "ExpressionStatement",
                        "src": "419:8:4"
                      }
                    ]
                  },
                  "id": 1017,
                  "implemented": true,
                  "kind": "fallback",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1011,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "401:2:4"
                  },
                  "returnParameters": {
                    "id": 1012,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "413:0:4"
                  },
                  "scope": 1056,
                  "src": "393:39:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1054,
                    "nodeType": "Block",
                    "src": "564:174:4",
                    "statements": [
                      {
                        "assignments": [
                          1031,
                          1033
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1031,
                            "mutability": "mutable",
                            "name": "ret",
                            "nodeType": "VariableDeclaration",
                            "scope": 1054,
                            "src": "571:8:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1030,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "571:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1033,
                            "mutability": "mutable",
                            "name": "result",
                            "nodeType": "VariableDeclaration",
                            "scope": 1054,
                            "src": "581:19:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1032,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "581:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1040,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1038,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1023,
                              "src": "637:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 1034,
                                "name": "destination",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1019,
                                "src": "604:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1035,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "604:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 1036,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1021,
                                "src": "629:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "604:32:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "604:38:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "570:72:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1042,
                              "name": "ret",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1031,
                              "src": "656:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1041,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "648:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "648:12:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1044,
                        "nodeType": "ExpressionStatement",
                        "src": "648:12:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1046,
                              "name": "destination",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1019,
                              "src": "681:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1047,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1021,
                              "src": "694:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1048,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1023,
                              "src": "701:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 1049,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1033,
                              "src": "707:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1045,
                            "name": "Forwarded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1010,
                            "src": "671:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,bytes memory,bytes memory)"
                            }
                          },
                          "id": 1050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "671:43:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1051,
                        "nodeType": "EmitStatement",
                        "src": "666:48:4"
                      },
                      {
                        "expression": {
                          "id": 1052,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1033,
                          "src": "727:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 1029,
                        "id": 1053,
                        "nodeType": "Return",
                        "src": "720:13:4"
                      }
                    ]
                  },
                  "functionSelector": "d7f31eb9",
                  "id": 1055,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1026,
                      "modifierName": {
                        "id": 1025,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1252,
                        "src": "531:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "531:9:4"
                    }
                  ],
                  "name": "forward",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1024,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1019,
                        "mutability": "mutable",
                        "name": "destination",
                        "nodeType": "VariableDeclaration",
                        "scope": 1055,
                        "src": "458:19:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1018,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "458:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1021,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 1055,
                        "src": "483:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1020,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "483:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1023,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1055,
                        "src": "502:17:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1022,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "502:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "452:71:4"
                  },
                  "returnParameters": {
                    "id": 1029,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1028,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1055,
                        "src": "550:12:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1027,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "550:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "549:14:4"
                  },
                  "scope": 1056,
                  "src": "436:302:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 1057,
              "src": "115:625:4"
            }
          ],
          "src": "32:709:4"
        },
        "id": 4
      },
      "contracts/libs/Eidas.sol": {
        "ast": {
          "absolutePath": "contracts/libs/Eidas.sol",
          "exportedSymbols": {
            "Eidas": [
              1100
            ]
          },
          "id": 1101,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1058,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".24",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:32:5"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 1100,
              "linearizedBaseContracts": [
                1100
              ],
              "name": "Eidas",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "Eidas.EidasLevel",
                  "id": 1064,
                  "members": [
                    {
                      "id": 1059,
                      "name": "Null",
                      "nodeType": "EnumValue",
                      "src": "102:4:5"
                    },
                    {
                      "id": 1060,
                      "name": "Reputational",
                      "nodeType": "EnumValue",
                      "src": "108:12:5"
                    },
                    {
                      "id": 1061,
                      "name": "Low",
                      "nodeType": "EnumValue",
                      "src": "122:3:5"
                    },
                    {
                      "id": 1062,
                      "name": "Substantial",
                      "nodeType": "EnumValue",
                      "src": "127:11:5"
                    },
                    {
                      "id": 1063,
                      "name": "High",
                      "nodeType": "EnumValue",
                      "src": "140:4:5"
                    }
                  ],
                  "name": "EidasLevel",
                  "nodeType": "EnumDefinition",
                  "src": "84:62:5"
                },
                {
                  "body": {
                    "id": 1077,
                    "nodeType": "Block",
                    "src": "727:54:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1072,
                              "name": "_eidasLevel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1066,
                              "src": "748:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_EidasLevel_$1064",
                                "typeString": "enum Eidas.EidasLevel"
                              }
                            },
                            {
                              "expression": {
                                "id": 1073,
                                "name": "EidasLevel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1064,
                                "src": "761:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_EidasLevel_$1064_$",
                                  "typeString": "type(enum Eidas.EidasLevel)"
                                }
                              },
                              "id": 1074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Low",
                              "nodeType": "MemberAccess",
                              "src": "761:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_EidasLevel_$1064",
                                "typeString": "enum Eidas.EidasLevel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_EidasLevel_$1064",
                                "typeString": "enum Eidas.EidasLevel"
                              },
                              {
                                "typeIdentifier": "t_enum$_EidasLevel_$1064",
                                "typeString": "enum Eidas.EidasLevel"
                              }
                            ],
                            "id": 1071,
                            "name": "atLeast",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1099,
                            "src": "740:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_enum$_EidasLevel_$1064_$_t_enum$_EidasLevel_$1064_$returns$_t_bool_$",
                              "typeString": "function (enum Eidas.EidasLevel,enum Eidas.EidasLevel) pure returns (bool)"
                            }
                          },
                          "id": 1075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "740:36:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1070,
                        "id": 1076,
                        "nodeType": "Return",
                        "src": "733:43:5"
                      }
                    ]
                  },
                  "functionSelector": "0fa78bf7",
                  "id": 1078,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "atLeastLow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1067,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1066,
                        "mutability": "mutable",
                        "name": "_eidasLevel",
                        "nodeType": "VariableDeclaration",
                        "scope": 1078,
                        "src": "676:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_EidasLevel_$1064",
                          "typeString": "enum Eidas.EidasLevel"
                        },
                        "typeName": {
                          "id": 1065,
                          "name": "EidasLevel",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1064,
                          "src": "676:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_EidasLevel_$1064",
                            "typeString": "enum Eidas.EidasLevel"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "675:24:5"
                  },
                  "returnParameters": {
                    "id": 1070,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1069,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1078,
                        "src": "721:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1068,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "721:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "720:6:5"
                  },
                  "scope": 1100,
                  "src": "656:125:5",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1098,
                    "nodeType": "Block",
                    "src": "1142:59:5",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 1089,
                                    "name": "_eidasLevel",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1080,
                                    "src": "1164:11:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_EidasLevel_$1064",
                                      "typeString": "enum Eidas.EidasLevel"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_EidasLevel_$1064",
                                      "typeString": "enum Eidas.EidasLevel"
                                    }
                                  ],
                                  "id": 1088,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1156:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 1087,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1156:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1090,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1156:20:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 1093,
                                    "name": "_level",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1082,
                                    "src": "1188:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_EidasLevel_$1064",
                                      "typeString": "enum Eidas.EidasLevel"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_EidasLevel_$1064",
                                      "typeString": "enum Eidas.EidasLevel"
                                    }
                                  ],
                                  "id": 1092,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1180:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 1091,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1180:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1094,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1180:15:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1156:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 1096,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1155:41:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1086,
                        "id": 1097,
                        "nodeType": "Return",
                        "src": "1148:48:5"
                      }
                    ]
                  },
                  "functionSelector": "f2641483",
                  "id": 1099,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "atLeast",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1083,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1080,
                        "mutability": "mutable",
                        "name": "_eidasLevel",
                        "nodeType": "VariableDeclaration",
                        "scope": 1099,
                        "src": "1072:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_EidasLevel_$1064",
                          "typeString": "enum Eidas.EidasLevel"
                        },
                        "typeName": {
                          "id": 1079,
                          "name": "EidasLevel",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1064,
                          "src": "1072:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_EidasLevel_$1064",
                            "typeString": "enum Eidas.EidasLevel"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1082,
                        "mutability": "mutable",
                        "name": "_level",
                        "nodeType": "VariableDeclaration",
                        "scope": 1099,
                        "src": "1096:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_EidasLevel_$1064",
                          "typeString": "enum Eidas.EidasLevel"
                        },
                        "typeName": {
                          "id": 1081,
                          "name": "EidasLevel",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1064,
                          "src": "1096:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_EidasLevel_$1064",
                            "typeString": "enum Eidas.EidasLevel"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1071:43:5"
                  },
                  "returnParameters": {
                    "id": 1086,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1085,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1099,
                        "src": "1136:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1084,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1136:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1135:6:5"
                  },
                  "scope": 1100,
                  "src": "1055:146:5",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 1101,
              "src": "66:1359:5"
            }
          ],
          "src": "32:1394:5"
        },
        "id": 5
      },
      "contracts/openzeppelin/GSN/Context.sol": {
        "ast": {
          "absolutePath": "contracts/openzeppelin/GSN/Context.sol",
          "exportedSymbols": {
            "Context": [
              1123
            ]
          },
          "id": 1124,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1102,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".24",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:32:6"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1123,
              "linearizedBaseContracts": [
                1123
              ],
              "name": "Context",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1110,
                    "nodeType": "Block",
                    "src": "666:28:6",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1107,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "679:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "679:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "functionReturnParameters": 1106,
                        "id": 1109,
                        "nodeType": "Return",
                        "src": "672:17:6"
                      }
                    ]
                  },
                  "id": 1111,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1103,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "615:2:6"
                  },
                  "returnParameters": {
                    "id": 1106,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1105,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1111,
                        "src": "649:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 1104,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "649:15:6",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "648:17:6"
                  },
                  "scope": 1123,
                  "src": "596:98:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1121,
                    "nodeType": "Block",
                    "src": "763:155:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1116,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "769:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Context_$1123",
                            "typeString": "contract Context"
                          }
                        },
                        "id": 1117,
                        "nodeType": "ExpressionStatement",
                        "src": "769:4:6"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 1118,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "905:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "905:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 1115,
                        "id": 1120,
                        "nodeType": "Return",
                        "src": "898:15:6"
                      }
                    ]
                  },
                  "id": 1122,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1112,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "715:2:6"
                  },
                  "returnParameters": {
                    "id": 1115,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1114,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1122,
                        "src": "749:12:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1113,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "749:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "748:14:6"
                  },
                  "scope": 1123,
                  "src": "698:220:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1124,
              "src": "566:354:6"
            }
          ],
          "src": "32:889:6"
        },
        "id": 6
      },
      "contracts/openzeppelin/Initializable.sol": {
        "ast": {
          "absolutePath": "contracts/openzeppelin/Initializable.sol",
          "exportedSymbols": {
            "Initializable": [
              1194
            ]
          },
          "id": 1195,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1125,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".24",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "79:32:7"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1126,
                "nodeType": "StructuredDocumentation",
                "src": "114:940:7",
                "text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n \n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.\n \n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity."
              },
              "fullyImplemented": true,
              "id": 1194,
              "linearizedBaseContracts": [
                1194
              ],
              "name": "Initializable",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "documentation": {
                    "id": 1127,
                    "nodeType": "StructuredDocumentation",
                    "src": "1094:73:7",
                    "text": " @dev Indicates that the contract has been initialized."
                  },
                  "id": 1129,
                  "mutability": "mutable",
                  "name": "_initialized",
                  "nodeType": "VariableDeclaration",
                  "scope": 1194,
                  "src": "1172:25:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1128,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1172:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1130,
                    "nodeType": "StructuredDocumentation",
                    "src": "1204:91:7",
                    "text": " @dev Indicates that the contract is in the process of being initialized."
                  },
                  "id": 1132,
                  "mutability": "mutable",
                  "name": "_initializing",
                  "nodeType": "VariableDeclaration",
                  "scope": 1194,
                  "src": "1300:26:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1131,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1300:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1170,
                    "nodeType": "Block",
                    "src": "1454:368:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 1139,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1136,
                                  "name": "_initializing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1132,
                                  "src": "1472:13:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 1137,
                                    "name": "_isConstructor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1193,
                                    "src": "1489:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                      "typeString": "function () view returns (bool)"
                                    }
                                  },
                                  "id": 1138,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1489:16:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "1472:33:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "id": 1141,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "1509:13:7",
                                "subExpression": {
                                  "id": 1140,
                                  "name": "_initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1129,
                                  "src": "1510:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1472:50:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
                              "id": 1143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1524:48:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
                                "typeString": "literal_string \"Initializable: contract is already initialized\""
                              },
                              "value": "Initializable: contract is already initialized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
                                "typeString": "literal_string \"Initializable: contract is already initialized\""
                              }
                            ],
                            "id": 1135,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1464:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1464:109:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1145,
                        "nodeType": "ExpressionStatement",
                        "src": "1464:109:7"
                      },
                      {
                        "assignments": [
                          1147
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1147,
                            "mutability": "mutable",
                            "name": "isTopLevelCall",
                            "nodeType": "VariableDeclaration",
                            "scope": 1170,
                            "src": "1584:19:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1146,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1584:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1150,
                        "initialValue": {
                          "id": 1149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1606:14:7",
                          "subExpression": {
                            "id": 1148,
                            "name": "_initializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1132,
                            "src": "1607:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1584:36:7"
                      },
                      {
                        "condition": {
                          "id": 1151,
                          "name": "isTopLevelCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1147,
                          "src": "1634:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1161,
                        "nodeType": "IfStatement",
                        "src": "1630:98:7",
                        "trueBody": {
                          "id": 1160,
                          "nodeType": "Block",
                          "src": "1650:78:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 1154,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1152,
                                  "name": "_initializing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1132,
                                  "src": "1664:13:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 1153,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1680:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "1664:20:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1155,
                              "nodeType": "ExpressionStatement",
                              "src": "1664:20:7"
                            },
                            {
                              "expression": {
                                "id": 1158,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1156,
                                  "name": "_initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1129,
                                  "src": "1698:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 1157,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1713:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "1698:19:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1159,
                              "nodeType": "ExpressionStatement",
                              "src": "1698:19:7"
                            }
                          ]
                        }
                      },
                      {
                        "id": 1162,
                        "nodeType": "PlaceholderStatement",
                        "src": "1738:1:7"
                      },
                      {
                        "condition": {
                          "id": 1163,
                          "name": "isTopLevelCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1147,
                          "src": "1754:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1169,
                        "nodeType": "IfStatement",
                        "src": "1750:66:7",
                        "trueBody": {
                          "id": 1168,
                          "nodeType": "Block",
                          "src": "1770:46:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 1166,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1164,
                                  "name": "_initializing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1132,
                                  "src": "1784:13:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 1165,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1800:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "1784:21:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1167,
                              "nodeType": "ExpressionStatement",
                              "src": "1784:21:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1133,
                    "nodeType": "StructuredDocumentation",
                    "src": "1333:93:7",
                    "text": " @dev Modifier to protect an initializer function from being invoked twice."
                  },
                  "id": 1171,
                  "name": "initializer",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1134,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1451:2:7"
                  },
                  "src": "1431:391:7",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1192,
                    "nodeType": "Block",
                    "src": "1966:539:7",
                    "statements": [
                      {
                        "assignments": [
                          1178
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1178,
                            "mutability": "mutable",
                            "name": "self",
                            "nodeType": "VariableDeclaration",
                            "scope": 1192,
                            "src": "2325:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1177,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2325:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1183,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1181,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2348:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Initializable_$1194",
                                "typeString": "contract Initializable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Initializable_$1194",
                                "typeString": "contract Initializable"
                              }
                            ],
                            "id": 1180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2340:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1179,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2340:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2340:13:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2325:28:7"
                      },
                      {
                        "assignments": [
                          1185
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1185,
                            "mutability": "mutable",
                            "name": "cs",
                            "nodeType": "VariableDeclaration",
                            "scope": 1192,
                            "src": "2363:10:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1184,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2363:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1186,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2363:10:7"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2448:27:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2450:23:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "self",
                                    "nodeType": "YulIdentifier",
                                    "src": "2468:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "extcodesize",
                                  "nodeType": "YulIdentifier",
                                  "src": "2456:11:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2456:17:7"
                              },
                              "variableNames": [
                                {
                                  "name": "cs",
                                  "nodeType": "YulIdentifier",
                                  "src": "2450:2:7"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "byzantium",
                        "externalReferences": [
                          {
                            "declaration": 1185,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2450:2:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1178,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2468:4:7",
                            "valueSize": 1
                          }
                        ],
                        "id": 1187,
                        "nodeType": "InlineAssembly",
                        "src": "2439:36:7"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1188,
                            "name": "cs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1185,
                            "src": "2491:2:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2497:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2491:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1176,
                        "id": 1191,
                        "nodeType": "Return",
                        "src": "2484:14:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1172,
                    "nodeType": "StructuredDocumentation",
                    "src": "1828:79:7",
                    "text": "@dev Returns true if and only if the function is running in the constructor"
                  },
                  "id": 1193,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_isConstructor",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1173,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1935:2:7"
                  },
                  "returnParameters": {
                    "id": 1176,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1175,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1193,
                        "src": "1960:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1174,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1960:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1959:6:7"
                  },
                  "scope": 1194,
                  "src": "1912:593:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 1195,
              "src": "1055:1452:7"
            }
          ],
          "src": "79:2428:7"
        },
        "id": 7
      },
      "contracts/openzeppelin/ownership/Ownable.sol": {
        "ast": {
          "absolutePath": "contracts/openzeppelin/ownership/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              1123
            ],
            "Ownable": [
              1303
            ]
          },
          "id": 1304,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1196,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:8"
            },
            {
              "absolutePath": "contracts/openzeppelin/GSN/Context.sol",
              "file": "../GSN/Context.sol",
              "id": 1197,
              "nodeType": "ImportDirective",
              "scope": 1304,
              "sourceUnit": 1124,
              "src": "58:28:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1199,
                    "name": "Context",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1123,
                    "src": "611:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Context_$1123",
                      "typeString": "contract Context"
                    }
                  },
                  "id": 1200,
                  "nodeType": "InheritanceSpecifier",
                  "src": "611:7:8"
                }
              ],
              "contractDependencies": [
                1123
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 1198,
                "nodeType": "StructuredDocumentation",
                "src": "87:494:8",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 1303,
              "linearizedBaseContracts": [
                1303,
                1123
              ],
              "name": "Ownable",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1202,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1303,
                  "src": "625:22:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "625:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "id": 1208,
                  "name": "OwnershipTransferred",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1207,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1204,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 1208,
                        "src": "681:29:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1203,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "681:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1206,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 1208,
                        "src": "712:24:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1205,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "712:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "680:57:8"
                  },
                  "src": "654:84:8"
                },
                {
                  "body": {
                    "id": 1229,
                    "nodeType": "Block",
                    "src": "855:135:8",
                    "statements": [
                      {
                        "assignments": [
                          1213
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1213,
                            "mutability": "mutable",
                            "name": "msgSender",
                            "nodeType": "VariableDeclaration",
                            "scope": 1229,
                            "src": "865:17:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1212,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "865:7:8",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1216,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1214,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1111,
                            "src": "885:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 1215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "885:12:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "865:32:8"
                      },
                      {
                        "expression": {
                          "id": 1219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1217,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1202,
                            "src": "907:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1218,
                            "name": "msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1213,
                            "src": "916:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "907:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1220,
                        "nodeType": "ExpressionStatement",
                        "src": "907:18:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1224,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "969:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1223,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "961:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1222,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "961:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "961:10:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 1226,
                              "name": "msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1213,
                              "src": "973:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1221,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1208,
                            "src": "940:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 1227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "940:43:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1228,
                        "nodeType": "EmitStatement",
                        "src": "935:48:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1209,
                    "nodeType": "StructuredDocumentation",
                    "src": "744:91:8",
                    "text": " @dev Initializes the contract setting the deployer as the initial owner."
                  },
                  "id": 1230,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1210,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "852:2:8"
                  },
                  "returnParameters": {
                    "id": 1211,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "855:0:8"
                  },
                  "scope": 1303,
                  "src": "840:150:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1238,
                    "nodeType": "Block",
                    "src": "1113:30:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1236,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1202,
                          "src": "1130:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1235,
                        "id": 1237,
                        "nodeType": "Return",
                        "src": "1123:13:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1231,
                    "nodeType": "StructuredDocumentation",
                    "src": "996:65:8",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 1239,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1232,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1080:2:8"
                  },
                  "returnParameters": {
                    "id": 1235,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1234,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1239,
                        "src": "1104:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1233,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:9:8"
                  },
                  "scope": 1303,
                  "src": "1066:77:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1251,
                    "nodeType": "Block",
                    "src": "1252:95:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1243,
                                "name": "_owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1202,
                                "src": "1270:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1244,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1111,
                                  "src": "1280:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 1245,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1280:12:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "1270:22:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                              "id": 1247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1294:34:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              },
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              }
                            ],
                            "id": 1242,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1262:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1262:67:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1249,
                        "nodeType": "ExpressionStatement",
                        "src": "1262:67:8"
                      },
                      {
                        "id": 1250,
                        "nodeType": "PlaceholderStatement",
                        "src": "1339:1:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1240,
                    "nodeType": "StructuredDocumentation",
                    "src": "1149:77:8",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 1252,
                  "name": "onlyOwner",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1241,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1249:2:8"
                  },
                  "src": "1231:116:8",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1273,
                    "nodeType": "Block",
                    "src": "1743:91:8",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1259,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1202,
                              "src": "1779:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1262,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1795:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1261,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1787:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1260,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1787:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1787:10:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 1258,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1208,
                            "src": "1758:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 1264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1758:40:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1265,
                        "nodeType": "EmitStatement",
                        "src": "1753:45:8"
                      },
                      {
                        "expression": {
                          "id": 1271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1266,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1202,
                            "src": "1808:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1269,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1825:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1817:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1267,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1817:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1817:10:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1808:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1272,
                        "nodeType": "ExpressionStatement",
                        "src": "1808:19:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1253,
                    "nodeType": "StructuredDocumentation",
                    "src": "1353:331:8",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 1274,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1256,
                      "modifierName": {
                        "id": 1255,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1252,
                        "src": "1733:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1733:9:8"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1254,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1715:2:8"
                  },
                  "returnParameters": {
                    "id": 1257,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1743:0:8"
                  },
                  "scope": 1303,
                  "src": "1689:145:8",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1301,
                    "nodeType": "Block",
                    "src": "2053:170:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1283,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1277,
                                "src": "2071:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1286,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2091:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1285,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2083:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1284,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2083:7:8",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1287,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2083:10:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "2071:22:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                              "id": 1289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2095:40:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              },
                              "value": "Ownable: new owner is the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              }
                            ],
                            "id": 1282,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2063:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2063:73:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1291,
                        "nodeType": "ExpressionStatement",
                        "src": "2063:73:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1293,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1202,
                              "src": "2172:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1294,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1277,
                              "src": "2180:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1292,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1208,
                            "src": "2151:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 1295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2151:38:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1296,
                        "nodeType": "EmitStatement",
                        "src": "2146:43:8"
                      },
                      {
                        "expression": {
                          "id": 1299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1297,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1202,
                            "src": "2199:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1298,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1277,
                            "src": "2208:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2199:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1300,
                        "nodeType": "ExpressionStatement",
                        "src": "2199:17:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1275,
                    "nodeType": "StructuredDocumentation",
                    "src": "1840:138:8",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 1302,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1280,
                      "modifierName": {
                        "id": 1279,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1252,
                        "src": "2043:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2043:9:8"
                    }
                  ],
                  "name": "transferOwnership",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1278,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1277,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 1302,
                        "src": "2010:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1276,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2010:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2009:18:8"
                  },
                  "returnParameters": {
                    "id": 1281,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2053:0:8"
                  },
                  "scope": 1303,
                  "src": "1983:240:8",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 1304,
              "src": "582:1643:8"
            }
          ],
          "src": "33:2192:8"
        },
        "id": 8
      },
      "contracts/openzeppelin/upgradeability/Proxy.sol": {
        "ast": {
          "absolutePath": "contracts/openzeppelin/upgradeability/Proxy.sol",
          "exportedSymbols": {
            "Proxy": [
              1355
            ]
          },
          "id": 1356,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1305,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".24",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:32:9"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1306,
                "nodeType": "StructuredDocumentation",
                "src": "69:609:9",
                "text": " @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n \n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n \n The success and return data of the delegated call will be returned back to the caller of the proxy."
              },
              "fullyImplemented": false,
              "id": 1355,
              "linearizedBaseContracts": [
                1355
              ],
              "name": "Proxy",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1313,
                    "nodeType": "Block",
                    "src": "965:855:9",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1042:771:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1299:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1302:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "calldatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "1305:12:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1305:14:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "1286:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1286:34:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1286:34:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1451:74:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nodeType": "YulIdentifier",
                                      "src": "1478:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1478:5:9"
                                  },
                                  {
                                    "name": "implementation",
                                    "nodeType": "YulIdentifier",
                                    "src": "1485:14:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1501:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "calldatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "1504:12:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1504:14:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1520:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1523:1:9",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "delegatecall",
                                  "nodeType": "YulIdentifier",
                                  "src": "1465:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1465:60:9"
                              },
                              "variables": [
                                {
                                  "name": "result",
                                  "nodeType": "YulTypedName",
                                  "src": "1455:6:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1596:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1599:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "1602:14:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1602:16:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "1581:14:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1581:38:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1581:38:9"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "1718:31:9",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1727:1:9",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nodeType": "YulIdentifier",
                                                "src": "1730:14:9"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "1730:16:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "1720:6:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1720:27:9"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "1720:27:9"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "1711:38:9",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1716:1:9",
                                    "type": "",
                                    "value": "0"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "1771:31:9",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1780:1:9",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nodeType": "YulIdentifier",
                                                "src": "1783:14:9"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "1783:16:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "return",
                                            "nodeType": "YulIdentifier",
                                            "src": "1773:6:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1773:27:9"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "1773:27:9"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "1763:39:9",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "name": "result",
                                "nodeType": "YulIdentifier",
                                "src": "1642:6:9"
                              },
                              "nodeType": "YulSwitch",
                              "src": "1635:167:9"
                            }
                          ]
                        },
                        "evmVersion": "byzantium",
                        "externalReferences": [
                          {
                            "declaration": 1309,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1485:14:9",
                            "valueSize": 1
                          }
                        ],
                        "id": 1312,
                        "nodeType": "InlineAssembly",
                        "src": "1033:780:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1307,
                    "nodeType": "StructuredDocumentation",
                    "src": "711:196:9",
                    "text": " @dev Delegates the current call to `implementation`.\n \n This function does not return to its internall call site, it will return directly to the external caller."
                  },
                  "id": 1314,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_delegate",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1310,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1309,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nodeType": "VariableDeclaration",
                        "scope": 1314,
                        "src": "932:22:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1308,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "932:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "931:24:9"
                  },
                  "returnParameters": {
                    "id": 1311,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "965:0:9"
                  },
                  "scope": 1355,
                  "src": "913:907:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "documentation": {
                    "id": 1315,
                    "nodeType": "StructuredDocumentation",
                    "src": "1828:175:9",
                    "text": " @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\n and {_fallback} should delegate."
                  },
                  "id": 1320,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_implementation",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1316,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2033:2:9"
                  },
                  "returnParameters": {
                    "id": 1319,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1318,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1320,
                        "src": "2067:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1317,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2067:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2066:9:9"
                  },
                  "scope": 1355,
                  "src": "2009:67:9",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1332,
                    "nodeType": "Block",
                    "src": "2343:75:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1324,
                            "name": "_beforeFallback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1354,
                            "src": "2354:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2354:17:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1326,
                        "nodeType": "ExpressionStatement",
                        "src": "2354:17:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1328,
                                "name": "_implementation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1320,
                                "src": "2392:15:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2392:17:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1327,
                            "name": "_delegate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1314,
                            "src": "2382:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2382:28:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1331,
                        "nodeType": "ExpressionStatement",
                        "src": "2382:28:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1321,
                    "nodeType": "StructuredDocumentation",
                    "src": "2084:223:9",
                    "text": " @dev Delegates the current call to the address returned by `_implementation()`.\n \n This function does not return to its internall call site, it will return directly to the external caller."
                  },
                  "id": 1333,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_fallback",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1322,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2331:2:9"
                  },
                  "returnParameters": {
                    "id": 1323,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2343:0:9"
                  },
                  "scope": 1355,
                  "src": "2313:105:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1340,
                    "nodeType": "Block",
                    "src": "2650:30:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1337,
                            "name": "_fallback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1333,
                            "src": "2661:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2661:11:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1339,
                        "nodeType": "ExpressionStatement",
                        "src": "2661:11:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1334,
                    "nodeType": "StructuredDocumentation",
                    "src": "2426:189:9",
                    "text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."
                  },
                  "id": 1341,
                  "implemented": true,
                  "kind": "fallback",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1335,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2630:2:9"
                  },
                  "returnParameters": {
                    "id": 1336,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2650:0:9"
                  },
                  "scope": 1355,
                  "src": "2621:59:9",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1348,
                    "nodeType": "Block",
                    "src": "2874:30:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1345,
                            "name": "_fallback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1333,
                            "src": "2885:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2885:11:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1347,
                        "nodeType": "ExpressionStatement",
                        "src": "2885:11:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1342,
                    "nodeType": "StructuredDocumentation",
                    "src": "2688:152:9",
                    "text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n is empty."
                  },
                  "id": 1349,
                  "implemented": true,
                  "kind": "receive",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1343,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2854:2:9"
                  },
                  "returnParameters": {
                    "id": 1344,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2874:0:9"
                  },
                  "scope": 1355,
                  "src": "2846:58:9",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1353,
                    "nodeType": "Block",
                    "src": "3238:8:9",
                    "statements": []
                  },
                  "documentation": {
                    "id": 1350,
                    "nodeType": "StructuredDocumentation",
                    "src": "2912:276:9",
                    "text": " @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n call, or as part of the Solidity `fallback` or `receive` functions.\n \n If overriden should call `super._beforeFallback()`."
                  },
                  "id": 1354,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_beforeFallback",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1351,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3218:2:9"
                  },
                  "returnParameters": {
                    "id": 1352,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3238:0:9"
                  },
                  "scope": 1355,
                  "src": "3194:52:9",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1356,
              "src": "680:2569:9"
            }
          ],
          "src": "33:3218:9"
        },
        "id": 9
      },
      "contracts/openzeppelin/upgradeability/ProxyAdmin.sol": {
        "ast": {
          "absolutePath": "contracts/openzeppelin/upgradeability/ProxyAdmin.sol",
          "exportedSymbols": {
            "Address": [
              1824
            ],
            "Context": [
              1123
            ],
            "Ownable": [
              1303
            ],
            "Proxy": [
              1355
            ],
            "ProxyAdmin": [
              1486
            ],
            "TransparentUpgradeableProxy": [
              1691
            ],
            "UpgradeableProxy": [
              1803
            ]
          },
          "id": 1487,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1357,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".24",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:32:10"
            },
            {
              "absolutePath": "contracts/openzeppelin/ownership/Ownable.sol",
              "file": "../ownership/Ownable.sol",
              "id": 1358,
              "nodeType": "ImportDirective",
              "scope": 1487,
              "sourceUnit": 1304,
              "src": "69:34:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/openzeppelin/upgradeability/TransparentUpgradeableProxy.sol",
              "file": "./TransparentUpgradeableProxy.sol",
              "id": 1359,
              "nodeType": "ImportDirective",
              "scope": 1487,
              "sourceUnit": 1692,
              "src": "105:43:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1361,
                    "name": "Ownable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1303,
                    "src": "408:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ownable_$1303",
                      "typeString": "contract Ownable"
                    }
                  },
                  "id": 1362,
                  "nodeType": "InheritanceSpecifier",
                  "src": "408:7:10"
                }
              ],
              "contractDependencies": [
                1123,
                1303
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 1360,
                "nodeType": "StructuredDocumentation",
                "src": "152:231:10",
                "text": " @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\n explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}."
              },
              "fullyImplemented": true,
              "id": 1486,
              "linearizedBaseContracts": [
                1486,
                1303,
                1123
              ],
              "name": "ProxyAdmin",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1394,
                    "nodeType": "Block",
                    "src": "694:338:10",
                    "statements": [
                      {
                        "assignments": [
                          1371,
                          1373
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1371,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 1394,
                            "src": "865:12:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1370,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "865:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1373,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nodeType": "VariableDeclaration",
                            "scope": 1394,
                            "src": "879:23:10",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1372,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "879:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1381,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "5c60da1b",
                              "id": 1379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "hexString",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "932:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29",
                                "typeString": "literal_string hex\"5c60da1b\""
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29",
                                "typeString": "literal_string hex\"5c60da1b\""
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1376,
                                  "name": "proxy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1365,
                                  "src": "914:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$1691",
                                    "typeString": "contract TransparentUpgradeableProxy"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$1691",
                                    "typeString": "contract TransparentUpgradeableProxy"
                                  }
                                ],
                                "id": 1375,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "906:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1374,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "906:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "906:14:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "staticcall",
                            "nodeType": "MemberAccess",
                            "src": "906:25:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 1380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "906:40:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "864:82:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1383,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1371,
                              "src": "965:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1382,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "957:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "957:16:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1385,
                        "nodeType": "ExpressionStatement",
                        "src": "957:16:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1388,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1373,
                              "src": "1002:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 1390,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1015:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1389,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1015:7:10",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 1391,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1014:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 1386,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "991:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "991:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "991:33:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "functionReturnParameters": 1369,
                        "id": 1393,
                        "nodeType": "Return",
                        "src": "984:40:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1363,
                    "nodeType": "StructuredDocumentation",
                    "src": "425:166:10",
                    "text": " @dev Returns the current implementation of `proxy`.\n \n Requirements:\n \n - This contract must be the admin of `proxy`."
                  },
                  "functionSelector": "204e1c7a",
                  "id": 1395,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getProxyImplementation",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1366,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1365,
                        "mutability": "mutable",
                        "name": "proxy",
                        "nodeType": "VariableDeclaration",
                        "scope": 1395,
                        "src": "629:33:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$1691",
                          "typeString": "contract TransparentUpgradeableProxy"
                        },
                        "typeName": {
                          "id": 1364,
                          "name": "TransparentUpgradeableProxy",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1691,
                          "src": "629:27:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$1691",
                            "typeString": "contract TransparentUpgradeableProxy"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "628:35:10"
                  },
                  "returnParameters": {
                    "id": 1369,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1368,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1395,
                        "src": "685:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1367,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "685:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "684:9:10"
                  },
                  "scope": 1486,
                  "src": "597:435:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1427,
                    "nodeType": "Block",
                    "src": "1291:329:10",
                    "statements": [
                      {
                        "assignments": [
                          1404,
                          1406
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1404,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 1427,
                            "src": "1453:12:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1403,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1453:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1406,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nodeType": "VariableDeclaration",
                            "scope": 1427,
                            "src": "1467:23:10",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1405,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1467:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1414,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "f851a440",
                              "id": 1412,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "hexString",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1520:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7",
                                "typeString": "literal_string hex\"f851a440\""
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7",
                                "typeString": "literal_string hex\"f851a440\""
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1409,
                                  "name": "proxy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1398,
                                  "src": "1502:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$1691",
                                    "typeString": "contract TransparentUpgradeableProxy"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$1691",
                                    "typeString": "contract TransparentUpgradeableProxy"
                                  }
                                ],
                                "id": 1408,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1494:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1407,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1494:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1494:14:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "staticcall",
                            "nodeType": "MemberAccess",
                            "src": "1494:25:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 1413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1494:40:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1452:82:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1416,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1404,
                              "src": "1553:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1415,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1545:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1545:16:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1418,
                        "nodeType": "ExpressionStatement",
                        "src": "1545:16:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1421,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1406,
                              "src": "1590:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 1423,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1603:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1422,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1603:7:10",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 1424,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1602:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 1419,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "1579:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "1579:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1579:33:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "functionReturnParameters": 1402,
                        "id": 1426,
                        "nodeType": "Return",
                        "src": "1572:40:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1396,
                    "nodeType": "StructuredDocumentation",
                    "src": "1040:157:10",
                    "text": " @dev Returns the current admin of `proxy`.\n \n Requirements:\n \n - This contract must be the admin of `proxy`."
                  },
                  "functionSelector": "f3b7dead",
                  "id": 1428,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getProxyAdmin",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1399,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1398,
                        "mutability": "mutable",
                        "name": "proxy",
                        "nodeType": "VariableDeclaration",
                        "scope": 1428,
                        "src": "1226:33:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$1691",
                          "typeString": "contract TransparentUpgradeableProxy"
                        },
                        "typeName": {
                          "id": 1397,
                          "name": "TransparentUpgradeableProxy",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1691,
                          "src": "1226:27:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$1691",
                            "typeString": "contract TransparentUpgradeableProxy"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1225:35:10"
                  },
                  "returnParameters": {
                    "id": 1402,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1401,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1428,
                        "src": "1282:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1400,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1282:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1281:9:10"
                  },
                  "scope": 1486,
                  "src": "1203:417:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1444,
                    "nodeType": "Block",
                    "src": "1901:46:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1441,
                              "name": "newAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1433,
                              "src": "1930:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1438,
                              "name": "proxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1431,
                              "src": "1912:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$1691",
                                "typeString": "contract TransparentUpgradeableProxy"
                              }
                            },
                            "id": 1440,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "changeAdmin",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1607,
                            "src": "1912:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 1442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1912:27:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1443,
                        "nodeType": "ExpressionStatement",
                        "src": "1912:27:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1429,
                    "nodeType": "StructuredDocumentation",
                    "src": "1628:171:10",
                    "text": " @dev Changes the admin of `proxy` to `newAdmin`.\n \n Requirements:\n \n - This contract must be the current admin of `proxy`."
                  },
                  "functionSelector": "7eff275e",
                  "id": 1445,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1436,
                      "modifierName": {
                        "id": 1435,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1252,
                        "src": "1891:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1891:9:10"
                    }
                  ],
                  "name": "changeProxyAdmin",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1434,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1431,
                        "mutability": "mutable",
                        "name": "proxy",
                        "nodeType": "VariableDeclaration",
                        "scope": 1445,
                        "src": "1831:33:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$1691",
                          "typeString": "contract TransparentUpgradeableProxy"
                        },
                        "typeName": {
                          "id": 1430,
                          "name": "TransparentUpgradeableProxy",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1691,
                          "src": "1831:27:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$1691",
                            "typeString": "contract TransparentUpgradeableProxy"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1433,
                        "mutability": "mutable",
                        "name": "newAdmin",
                        "nodeType": "VariableDeclaration",
                        "scope": 1445,
                        "src": "1866:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1432,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1866:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1830:53:10"
                  },
                  "returnParameters": {
                    "id": 1437,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1901:0:10"
                  },
                  "scope": 1486,
                  "src": "1805:142:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1461,
                    "nodeType": "Block",
                    "src": "2256:50:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1458,
                              "name": "implementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1450,
                              "src": "2283:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1455,
                              "name": "proxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1448,
                              "src": "2267:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$1691",
                                "typeString": "contract TransparentUpgradeableProxy"
                              }
                            },
                            "id": 1457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "upgradeTo",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1620,
                            "src": "2267:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 1459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2267:31:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1460,
                        "nodeType": "ExpressionStatement",
                        "src": "2267:31:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1446,
                    "nodeType": "StructuredDocumentation",
                    "src": "1955:202:10",
                    "text": " @dev Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}.\n \n Requirements:\n \n - This contract must be the admin of `proxy`."
                  },
                  "functionSelector": "99a88ec4",
                  "id": 1462,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1453,
                      "modifierName": {
                        "id": 1452,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1252,
                        "src": "2246:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2246:9:10"
                    }
                  ],
                  "name": "upgrade",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1451,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1448,
                        "mutability": "mutable",
                        "name": "proxy",
                        "nodeType": "VariableDeclaration",
                        "scope": 1462,
                        "src": "2180:33:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$1691",
                          "typeString": "contract TransparentUpgradeableProxy"
                        },
                        "typeName": {
                          "id": 1447,
                          "name": "TransparentUpgradeableProxy",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1691,
                          "src": "2180:27:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$1691",
                            "typeString": "contract TransparentUpgradeableProxy"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1450,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nodeType": "VariableDeclaration",
                        "scope": 1462,
                        "src": "2215:22:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1449,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2215:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2179:59:10"
                  },
                  "returnParameters": {
                    "id": 1454,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2256:0:10"
                  },
                  "scope": 1486,
                  "src": "2163:143:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1484,
                    "nodeType": "Block",
                    "src": "2711:81:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1480,
                              "name": "implementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1467,
                              "src": "2763:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1481,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1469,
                              "src": "2779:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 1474,
                                "name": "proxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1465,
                                "src": "2722:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$1691",
                                  "typeString": "contract TransparentUpgradeableProxy"
                                }
                              },
                              "id": 1476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "upgradeToAndCall",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1646,
                              "src": "2722:22:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (address,bytes memory) payable external"
                              }
                            },
                            "id": 1479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "expression": {
                                  "id": 1477,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2752:3:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1478,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "2752:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "2722:40:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$value",
                              "typeString": "function (address,bytes memory) payable external"
                            }
                          },
                          "id": 1482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2722:62:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1483,
                        "nodeType": "ExpressionStatement",
                        "src": "2722:62:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1463,
                    "nodeType": "StructuredDocumentation",
                    "src": "2314:264:10",
                    "text": " @dev Upgrades `proxy` to `implementation` and calls a function on the new implementation. See\n {TransparentUpgradeableProxy-upgradeToAndCall}.\n \n Requirements:\n \n - This contract must be the admin of `proxy`."
                  },
                  "functionSelector": "9623609d",
                  "id": 1485,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1472,
                      "modifierName": {
                        "id": 1471,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1252,
                        "src": "2701:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2701:9:10"
                    }
                  ],
                  "name": "upgradeAndCall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1470,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1465,
                        "mutability": "mutable",
                        "name": "proxy",
                        "nodeType": "VariableDeclaration",
                        "scope": 1485,
                        "src": "2608:33:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$1691",
                          "typeString": "contract TransparentUpgradeableProxy"
                        },
                        "typeName": {
                          "id": 1464,
                          "name": "TransparentUpgradeableProxy",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1691,
                          "src": "2608:27:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$1691",
                            "typeString": "contract TransparentUpgradeableProxy"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1467,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nodeType": "VariableDeclaration",
                        "scope": 1485,
                        "src": "2643:22:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1466,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2643:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1469,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1485,
                        "src": "2667:17:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1468,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2667:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2607:78:10"
                  },
                  "returnParameters": {
                    "id": 1473,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2711:0:10"
                  },
                  "scope": 1486,
                  "src": "2584:208:10",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 1487,
              "src": "385:2410:10"
            }
          ],
          "src": "33:2764:10"
        },
        "id": 10
      },
      "contracts/openzeppelin/upgradeability/TransparentUpgradeableProxy.sol": {
        "ast": {
          "absolutePath": "contracts/openzeppelin/upgradeability/TransparentUpgradeableProxy.sol",
          "exportedSymbols": {
            "Address": [
              1824
            ],
            "Proxy": [
              1355
            ],
            "TransparentUpgradeableProxy": [
              1691
            ],
            "UpgradeableProxy": [
              1803
            ]
          },
          "id": 1692,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1488,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".0",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:31:11"
            },
            {
              "absolutePath": "contracts/openzeppelin/upgradeability/UpgradeableProxy.sol",
              "file": "./UpgradeableProxy.sol",
              "id": 1489,
              "nodeType": "ImportDirective",
              "scope": 1692,
              "sourceUnit": 1804,
              "src": "68:32:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1491,
                    "name": "UpgradeableProxy",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1803,
                    "src": "1620:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UpgradeableProxy_$1803",
                      "typeString": "contract UpgradeableProxy"
                    }
                  },
                  "id": 1492,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1620:16:11"
                }
              ],
              "contractDependencies": [
                1355,
                1803
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 1490,
                "nodeType": "StructuredDocumentation",
                "src": "104:1474:11",
                "text": " @dev This contract implements a proxy that is upgradeable by an admin.\n \n To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n clashing], which can potentially be used in an attack, this contract uses the\n https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n things that go hand in hand:\n \n 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n that call matches one of the admin functions exposed by the proxy itself.\n 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\n implementation. If the admin tries to call a function on the implementation it will fail with an error that says\n \"admin cannot fallback to proxy target\".\n \n These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\n the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\n to sudden errors when trying to call a function from the proxy implementation.\n \n Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\n you should think of the `ProxyAdmin` instance as the real administrative inerface of your proxy."
              },
              "fullyImplemented": true,
              "id": 1691,
              "linearizedBaseContracts": [
                1691,
                1803,
                1355
              ],
              "name": "TransparentUpgradeableProxy",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1526,
                    "nodeType": "Block",
                    "src": "1971:124:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 1519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1507,
                                "name": "_ADMIN_SLOT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1538,
                                "src": "1989:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1517,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "hexValue": "656970313936372e70726f78792e61646d696e",
                                              "id": 1513,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "2030:21:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104",
                                                "typeString": "literal_string \"eip1967.proxy.admin\""
                                              },
                                              "value": "eip1967.proxy.admin"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104",
                                                "typeString": "literal_string \"eip1967.proxy.admin\""
                                              }
                                            ],
                                            "id": 1512,
                                            "name": "keccak256",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -8,
                                            "src": "2020:9:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                              "typeString": "function (bytes memory) pure returns (bytes32)"
                                            }
                                          },
                                          "id": 1514,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "2020:32:11",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "id": 1511,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2012:7:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 1510,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2012:7:11",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1515,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2012:41:11",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1516,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2056:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "2012:45:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1509,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2004:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 1508,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2004:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2004:54:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "1989:69:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1506,
                            "name": "assert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -3,
                            "src": "1982:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1982:77:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1521,
                        "nodeType": "ExpressionStatement",
                        "src": "1982:77:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1523,
                              "name": "_admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1497,
                              "src": "2080:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1522,
                            "name": "_setAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1670,
                            "src": "2070:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2070:17:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1525,
                        "nodeType": "ExpressionStatement",
                        "src": "2070:17:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1493,
                    "nodeType": "StructuredDocumentation",
                    "src": "1644:217:11",
                    "text": " @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\n optionally initialized with `_data` as explained in {UpgradeableProxy-constructor}."
                  },
                  "id": 1527,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1502,
                          "name": "_logic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1495,
                          "src": "1956:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1503,
                          "name": "_data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1499,
                          "src": "1964:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "id": 1504,
                      "modifierName": {
                        "id": 1501,
                        "name": "UpgradeableProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1803,
                        "src": "1939:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_UpgradeableProxy_$1803_$",
                          "typeString": "type(contract UpgradeableProxy)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1939:31:11"
                    }
                  ],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1500,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1495,
                        "mutability": "mutable",
                        "name": "_logic",
                        "nodeType": "VariableDeclaration",
                        "scope": 1527,
                        "src": "1879:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1494,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1879:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1497,
                        "mutability": "mutable",
                        "name": "_admin",
                        "nodeType": "VariableDeclaration",
                        "scope": 1527,
                        "src": "1895:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1496,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1895:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1499,
                        "mutability": "mutable",
                        "name": "_data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1527,
                        "src": "1911:18:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1498,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1911:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1878:52:11"
                  },
                  "returnParameters": {
                    "id": 1505,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1971:0:11"
                  },
                  "scope": 1691,
                  "src": "1867:228:11",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1528,
                    "nodeType": "StructuredDocumentation",
                    "src": "2103:69:11",
                    "text": " @dev Emitted when the admin account has changed."
                  },
                  "id": 1534,
                  "name": "AdminChanged",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1533,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1530,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "previousAdmin",
                        "nodeType": "VariableDeclaration",
                        "scope": 1534,
                        "src": "2197:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1529,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2197:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1532,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newAdmin",
                        "nodeType": "VariableDeclaration",
                        "scope": 1534,
                        "src": "2220:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1531,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2220:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2196:41:11"
                  },
                  "src": "2178:60:11"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 1535,
                    "nodeType": "StructuredDocumentation",
                    "src": "2246:193:11",
                    "text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."
                  },
                  "id": 1538,
                  "mutability": "constant",
                  "name": "_ADMIN_SLOT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1691,
                  "src": "2445:105:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1536,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2445:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
                    "id": 1537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2484:66:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
                      "typeString": "int_const 8195...(69 digits omitted)...7091"
                    },
                    "value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1553,
                    "nodeType": "Block",
                    "src": "2716:120:11",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1541,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2731:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2731:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1543,
                              "name": "getAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1658,
                              "src": "2745:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2745:10:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2731:24:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1551,
                          "nodeType": "Block",
                          "src": "2791:38:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1548,
                                  "name": "_fallback",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1333,
                                  "src": "2806:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 1549,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2806:11:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1550,
                              "nodeType": "ExpressionStatement",
                              "src": "2806:11:11"
                            }
                          ]
                        },
                        "id": 1552,
                        "nodeType": "IfStatement",
                        "src": "2727:102:11",
                        "trueBody": {
                          "id": 1547,
                          "nodeType": "Block",
                          "src": "2757:28:11",
                          "statements": [
                            {
                              "id": 1546,
                              "nodeType": "PlaceholderStatement",
                              "src": "2772:1:11"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1539,
                    "nodeType": "StructuredDocumentation",
                    "src": "2559:132:11",
                    "text": " @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin."
                  },
                  "id": 1554,
                  "name": "ifAdmin",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1540,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2713:2:11"
                  },
                  "src": "2697:139:11",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1565,
                    "nodeType": "Block",
                    "src": "3356:36:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1562,
                            "name": "getAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1658,
                            "src": "3374:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3374:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1561,
                        "id": 1564,
                        "nodeType": "Return",
                        "src": "3367:17:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1555,
                    "nodeType": "StructuredDocumentation",
                    "src": "2844:441:11",
                    "text": " @dev Returns the current admin.\n \n NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\n \n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
                  },
                  "functionSelector": "f851a440",
                  "id": 1566,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1558,
                      "modifierName": {
                        "id": 1557,
                        "name": "ifAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1554,
                        "src": "3317:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3317:7:11"
                    }
                  ],
                  "name": "admin",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1556,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3305:2:11"
                  },
                  "returnParameters": {
                    "id": 1561,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1560,
                        "mutability": "mutable",
                        "name": "currentAdmin",
                        "nodeType": "VariableDeclaration",
                        "scope": 1566,
                        "src": "3334:20:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1559,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3334:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3333:22:11"
                  },
                  "scope": 1691,
                  "src": "3291:101:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1577,
                    "nodeType": "Block",
                    "src": "3932:43:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1574,
                            "name": "_implementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1767
                            ],
                            "referencedDeclaration": 1767,
                            "src": "3950:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3950:17:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1573,
                        "id": 1576,
                        "nodeType": "Return",
                        "src": "3943:24:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1567,
                    "nodeType": "StructuredDocumentation",
                    "src": "3400:459:11",
                    "text": " @dev Returns the current implementation.\n \n NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\n \n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
                  },
                  "functionSelector": "5c60da1b",
                  "id": 1578,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1570,
                      "modifierName": {
                        "id": 1569,
                        "name": "ifAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1554,
                        "src": "3900:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3900:7:11"
                    }
                  ],
                  "name": "implementation",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1568,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3888:2:11"
                  },
                  "returnParameters": {
                    "id": 1573,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1572,
                        "mutability": "mutable",
                        "name": "_impl",
                        "nodeType": "VariableDeclaration",
                        "scope": 1578,
                        "src": "3917:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1571,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3917:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3916:15:11"
                  },
                  "scope": 1691,
                  "src": "3865:110:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1606,
                    "nodeType": "Block",
                    "src": "4247:192:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1587,
                                "name": "newAdmin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1581,
                                "src": "4266:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1590,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4286:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1589,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4278:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1588,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4278:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1591,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4278:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "4266:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5472616e73706172656e745570677261646561626c6550726f78793a206e65772061646d696e20697320746865207a65726f2061646472657373",
                              "id": 1593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4290:60:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6b8c7de7d8992cce1e1093ee65cc3fbbb636cdcec8111cd0ef596adac25e6858",
                                "typeString": "literal_string \"TransparentUpgradeableProxy: new admin is the zero address\""
                              },
                              "value": "TransparentUpgradeableProxy: new admin is the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6b8c7de7d8992cce1e1093ee65cc3fbbb636cdcec8111cd0ef596adac25e6858",
                                "typeString": "literal_string \"TransparentUpgradeableProxy: new admin is the zero address\""
                              }
                            ],
                            "id": 1586,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4258:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4258:93:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1595,
                        "nodeType": "ExpressionStatement",
                        "src": "4258:93:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1597,
                                "name": "getAdmin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1658,
                                "src": "4380:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4380:10:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1599,
                              "name": "newAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1581,
                              "src": "4392:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1596,
                            "name": "AdminChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1534,
                            "src": "4367:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 1600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4367:34:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1601,
                        "nodeType": "EmitStatement",
                        "src": "4362:39:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1603,
                              "name": "newAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1581,
                              "src": "4422:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1602,
                            "name": "_setAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1670,
                            "src": "4412:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4412:19:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1605,
                        "nodeType": "ExpressionStatement",
                        "src": "4412:19:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1579,
                    "nodeType": "StructuredDocumentation",
                    "src": "3983:202:11",
                    "text": " @dev Changes the admin of the proxy.\n \n Emits an {AdminChanged} event.\n \n NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
                  },
                  "functionSelector": "8f283970",
                  "id": 1607,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1584,
                      "modifierName": {
                        "id": 1583,
                        "name": "ifAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1554,
                        "src": "4239:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4239:7:11"
                    }
                  ],
                  "name": "changeAdmin",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1582,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1581,
                        "mutability": "mutable",
                        "name": "newAdmin",
                        "nodeType": "VariableDeclaration",
                        "scope": 1607,
                        "src": "4212:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1580,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4212:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4211:18:11"
                  },
                  "returnParameters": {
                    "id": 1585,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4247:0:11"
                  },
                  "scope": 1691,
                  "src": "4191:248:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1619,
                    "nodeType": "Block",
                    "src": "4670:48:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1616,
                              "name": "newImplementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1610,
                              "src": "4692:17:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1615,
                            "name": "_upgradeTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1782,
                            "src": "4681:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4681:29:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1618,
                        "nodeType": "ExpressionStatement",
                        "src": "4681:29:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1608,
                    "nodeType": "StructuredDocumentation",
                    "src": "4447:154:11",
                    "text": " @dev Upgrade the implementation of the proxy.\n \n NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
                  },
                  "functionSelector": "3659cfe6",
                  "id": 1620,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1613,
                      "modifierName": {
                        "id": 1612,
                        "name": "ifAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1554,
                        "src": "4662:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4662:7:11"
                    }
                  ],
                  "name": "upgradeTo",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1611,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1610,
                        "mutability": "mutable",
                        "name": "newImplementation",
                        "nodeType": "VariableDeclaration",
                        "scope": 1620,
                        "src": "4626:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1609,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4626:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4625:27:11"
                  },
                  "returnParameters": {
                    "id": 1614,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4670:0:11"
                  },
                  "scope": 1691,
                  "src": "4607:111:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1645,
                    "nodeType": "Block",
                    "src": "5203:200:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1631,
                              "name": "newImplementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1623,
                              "src": "5225:17:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1630,
                            "name": "_upgradeTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1782,
                            "src": "5214:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5214:29:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1633,
                        "nodeType": "ExpressionStatement",
                        "src": "5214:29:11"
                      },
                      {
                        "assignments": [
                          1635,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1635,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 1645,
                            "src": "5315:12:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1634,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5315:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 1640,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1638,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1625,
                              "src": "5363:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "id": 1636,
                              "name": "newImplementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1623,
                              "src": "5332:17:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "delegatecall",
                            "nodeType": "MemberAccess",
                            "src": "5332:30:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) returns (bool,bytes memory)"
                            }
                          },
                          "id": 1639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5332:36:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5314:54:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1642,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1635,
                              "src": "5387:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1641,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5379:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5379:16:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1644,
                        "nodeType": "ExpressionStatement",
                        "src": "5379:16:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1621,
                    "nodeType": "StructuredDocumentation",
                    "src": "4726:372:11",
                    "text": " @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\n by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\n proxied contract.\n \n NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
                  },
                  "functionSelector": "4f1ef286",
                  "id": 1646,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1628,
                      "modifierName": {
                        "id": 1627,
                        "name": "ifAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1554,
                        "src": "5195:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5195:7:11"
                    }
                  ],
                  "name": "upgradeToAndCall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1626,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1623,
                        "mutability": "mutable",
                        "name": "newImplementation",
                        "nodeType": "VariableDeclaration",
                        "scope": 1646,
                        "src": "5130:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1622,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5130:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1625,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1646,
                        "src": "5157:19:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1624,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5157:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5129:48:11"
                  },
                  "returnParameters": {
                    "id": 1629,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5203:0:11"
                  },
                  "scope": 1691,
                  "src": "5104:299:11",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1657,
                    "nodeType": "Block",
                    "src": "5525:165:11",
                    "statements": [
                      {
                        "assignments": [
                          1653
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1653,
                            "mutability": "mutable",
                            "name": "slot",
                            "nodeType": "VariableDeclaration",
                            "scope": 1657,
                            "src": "5536:12:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1652,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5536:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1655,
                        "initialValue": {
                          "id": 1654,
                          "name": "_ADMIN_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1538,
                          "src": "5551:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5536:26:11"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "5639:44:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5654:18:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nodeType": "YulIdentifier",
                                    "src": "5667:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "sload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5661:5:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5661:11:11"
                              },
                              "variableNames": [
                                {
                                  "name": "adm",
                                  "nodeType": "YulIdentifier",
                                  "src": "5654:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "byzantium",
                        "externalReferences": [
                          {
                            "declaration": 1650,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "5654:3:11",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1653,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "5667:4:11",
                            "valueSize": 1
                          }
                        ],
                        "id": 1656,
                        "nodeType": "InlineAssembly",
                        "src": "5630:53:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1647,
                    "nodeType": "StructuredDocumentation",
                    "src": "5411:52:11",
                    "text": " @dev Returns the current admin."
                  },
                  "id": 1658,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAdmin",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1648,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5486:2:11"
                  },
                  "returnParameters": {
                    "id": 1651,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1650,
                        "mutability": "mutable",
                        "name": "adm",
                        "nodeType": "VariableDeclaration",
                        "scope": 1658,
                        "src": "5512:11:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1649,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5512:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5511:13:11"
                  },
                  "scope": 1691,
                  "src": "5469:221:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1669,
                    "nodeType": "Block",
                    "src": "5822:171:11",
                    "statements": [
                      {
                        "assignments": [
                          1665
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1665,
                            "mutability": "mutable",
                            "name": "slot",
                            "nodeType": "VariableDeclaration",
                            "scope": 1669,
                            "src": "5833:12:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1664,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5833:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1667,
                        "initialValue": {
                          "id": 1666,
                          "name": "_ADMIN_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1538,
                          "src": "5848:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5833:26:11"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "5938:48:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nodeType": "YulIdentifier",
                                    "src": "5960:4:11"
                                  },
                                  {
                                    "name": "newAdmin",
                                    "nodeType": "YulIdentifier",
                                    "src": "5966:8:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "sstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5953:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5953:22:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5953:22:11"
                            }
                          ]
                        },
                        "evmVersion": "byzantium",
                        "externalReferences": [
                          {
                            "declaration": 1661,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "5966:8:11",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1665,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "5960:4:11",
                            "valueSize": 1
                          }
                        ],
                        "id": 1668,
                        "nodeType": "InlineAssembly",
                        "src": "5929:57:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1659,
                    "nodeType": "StructuredDocumentation",
                    "src": "5698:73:11",
                    "text": " @dev Stores a new address in the EIP1967 admin slot."
                  },
                  "id": 1670,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setAdmin",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1662,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1661,
                        "mutability": "mutable",
                        "name": "newAdmin",
                        "nodeType": "VariableDeclaration",
                        "scope": 1670,
                        "src": "5796:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1660,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5796:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5795:18:11"
                  },
                  "returnParameters": {
                    "id": 1663,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5822:0:11"
                  },
                  "scope": 1691,
                  "src": "5777:216:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "baseFunctions": [
                    1354
                  ],
                  "body": {
                    "id": 1689,
                    "nodeType": "Block",
                    "src": "6172:156:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1676,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "6191:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1677,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "6191:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1678,
                                  "name": "getAdmin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1658,
                                  "src": "6205:8:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 1679,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6205:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6191:24:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5472616e73706172656e745570677261646561626c6550726f78793a2061646d696e2063616e6e6f742066616c6c6261636b20746f2070726f787920746172676574",
                              "id": 1681,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6217:68:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d",
                                "typeString": "literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""
                              },
                              "value": "TransparentUpgradeableProxy: admin cannot fallback to proxy target"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d",
                                "typeString": "literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""
                              }
                            ],
                            "id": 1675,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6183:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6183:103:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1683,
                        "nodeType": "ExpressionStatement",
                        "src": "6183:103:11"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1684,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "6297:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_super$_TransparentUpgradeableProxy_$1691",
                                "typeString": "contract super TransparentUpgradeableProxy"
                              }
                            },
                            "id": 1686,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_beforeFallback",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1354,
                            "src": "6297:21:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6297:23:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1688,
                        "nodeType": "ExpressionStatement",
                        "src": "6297:23:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1671,
                    "nodeType": "StructuredDocumentation",
                    "src": "6001:112:11",
                    "text": " @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}."
                  },
                  "id": 1690,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_beforeFallback",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1673,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "6155:8:11"
                  },
                  "parameters": {
                    "id": 1672,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6143:2:11"
                  },
                  "returnParameters": {
                    "id": 1674,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6172:0:11"
                  },
                  "scope": 1691,
                  "src": "6119:209:11",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1692,
              "src": "1580:4751:11"
            }
          ],
          "src": "33:6300:11"
        },
        "id": 11
      },
      "contracts/openzeppelin/upgradeability/UpgradeableProxy.sol": {
        "ast": {
          "absolutePath": "contracts/openzeppelin/upgradeability/UpgradeableProxy.sol",
          "exportedSymbols": {
            "Address": [
              1824
            ],
            "Proxy": [
              1355
            ],
            "UpgradeableProxy": [
              1803
            ]
          },
          "id": 1804,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1693,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".24",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:32:12"
            },
            {
              "absolutePath": "contracts/openzeppelin/upgradeability/Proxy.sol",
              "file": "./Proxy.sol",
              "id": 1694,
              "nodeType": "ImportDirective",
              "scope": 1804,
              "sourceUnit": 1356,
              "src": "69:21:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/openzeppelin/utils/Address.sol",
              "file": "../utils/Address.sol",
              "id": 1696,
              "nodeType": "ImportDirective",
              "scope": 1804,
              "sourceUnit": 1825,
              "src": "92:78:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1695,
                    "name": "OpenZeppelinUpgradesAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "101:27:12",
                    "typeDescriptions": {}
                  },
                  "local": "Address"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1698,
                    "name": "Proxy",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1355,
                    "src": "730:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proxy_$1355",
                      "typeString": "contract Proxy"
                    }
                  },
                  "id": 1699,
                  "nodeType": "InheritanceSpecifier",
                  "src": "730:5:12"
                }
              ],
              "contractDependencies": [
                1355
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 1697,
                "nodeType": "StructuredDocumentation",
                "src": "174:525:12",
                "text": " @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy.\n Upgradeability is only provided internally through {_upgradeTo}. For an externally upgradeable proxy see\n {TransparentUpgradeableProxy}."
              },
              "fullyImplemented": true,
              "id": 1803,
              "linearizedBaseContracts": [
                1803,
                1355
              ],
              "name": "UpgradeableProxy",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1744,
                    "nodeType": "Block",
                    "src": "1131:314:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 1720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1708,
                                "name": "_IMPLEMENTATION_SLOT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1754,
                                "src": "1145:20:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1718,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "hexValue": "656970313936372e70726f78792e696d706c656d656e746174696f6e",
                                              "id": 1714,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "1195:30:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
                                                "typeString": "literal_string \"eip1967.proxy.implementation\""
                                              },
                                              "value": "eip1967.proxy.implementation"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
                                                "typeString": "literal_string \"eip1967.proxy.implementation\""
                                              }
                                            ],
                                            "id": 1713,
                                            "name": "keccak256",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -8,
                                            "src": "1185:9:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                              "typeString": "function (bytes memory) pure returns (bytes32)"
                                            }
                                          },
                                          "id": 1715,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1185:41:12",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "id": 1712,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1177:7:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 1711,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1177:7:12",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1716,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1177:50:12",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1717,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1230:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "1177:54:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1710,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1169:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 1709,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1169:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1719,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1169:63:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "1145:87:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1707,
                            "name": "assert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -3,
                            "src": "1138:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1138:95:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1722,
                        "nodeType": "ExpressionStatement",
                        "src": "1138:95:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1724,
                              "name": "_logic",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1702,
                              "src": "1259:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1723,
                            "name": "_setImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1802,
                            "src": "1240:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1240:26:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1726,
                        "nodeType": "ExpressionStatement",
                        "src": "1240:26:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1727,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1704,
                              "src": "1277:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1277:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1292:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1277:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1743,
                        "nodeType": "IfStatement",
                        "src": "1273:167:12",
                        "trueBody": {
                          "id": 1742,
                          "nodeType": "Block",
                          "src": "1295:145:12",
                          "statements": [
                            {
                              "assignments": [
                                1732,
                                null
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1732,
                                  "mutability": "mutable",
                                  "name": "success",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1742,
                                  "src": "1363:12:12",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 1731,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1363:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                null
                              ],
                              "id": 1737,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 1735,
                                    "name": "_data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1704,
                                    "src": "1401:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1733,
                                    "name": "_logic",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1702,
                                    "src": "1381:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 1734,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "delegatecall",
                                  "nodeType": "MemberAccess",
                                  "src": "1381:19:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes memory) returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1736,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1381:26:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1362:45:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1739,
                                    "name": "success",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1732,
                                    "src": "1424:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 1738,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "1416:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                    "typeString": "function (bool) pure"
                                  }
                                },
                                "id": 1740,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1416:16:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1741,
                              "nodeType": "ExpressionStatement",
                              "src": "1416:16:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1700,
                    "nodeType": "StructuredDocumentation",
                    "src": "741:330:12",
                    "text": " @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n function call, and allows initializating the storage of the proxy like a Solidity constructor."
                  },
                  "id": 1745,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1705,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1702,
                        "mutability": "mutable",
                        "name": "_logic",
                        "nodeType": "VariableDeclaration",
                        "scope": 1745,
                        "src": "1087:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1701,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1087:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1704,
                        "mutability": "mutable",
                        "name": "_data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1745,
                        "src": "1103:18:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1703,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1103:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1086:36:12"
                  },
                  "returnParameters": {
                    "id": 1706,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1131:0:12"
                  },
                  "scope": 1803,
                  "src": "1075:370:12",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1746,
                    "nodeType": "StructuredDocumentation",
                    "src": "1451:66:12",
                    "text": " @dev Emitted when the implementation is upgraded."
                  },
                  "id": 1750,
                  "name": "Upgraded",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1749,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1748,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nodeType": "VariableDeclaration",
                        "scope": 1750,
                        "src": "1536:30:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1747,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1536:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1535:32:12"
                  },
                  "src": "1521:47:12"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 1751,
                    "nodeType": "StructuredDocumentation",
                    "src": "1574:210:12",
                    "text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
                  },
                  "id": 1754,
                  "mutability": "constant",
                  "name": "_IMPLEMENTATION_SLOT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1803,
                  "src": "1788:119:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1752,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1788:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
                    "id": 1753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1841:66:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
                      "typeString": "int_const 2444...(69 digits omitted)...5612"
                    },
                    "value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
                  },
                  "visibility": "private"
                },
                {
                  "baseFunctions": [
                    1320
                  ],
                  "body": {
                    "id": 1766,
                    "nodeType": "Block",
                    "src": "2056:151:12",
                    "statements": [
                      {
                        "assignments": [
                          1762
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1762,
                            "mutability": "mutable",
                            "name": "slot",
                            "nodeType": "VariableDeclaration",
                            "scope": 1766,
                            "src": "2063:12:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1761,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "2063:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1764,
                        "initialValue": {
                          "id": 1763,
                          "name": "_IMPLEMENTATION_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1754,
                          "src": "2078:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2063:35:12"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2167:35:12",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2176:19:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nodeType": "YulIdentifier",
                                    "src": "2190:4:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "sload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2184:5:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2184:11:12"
                              },
                              "variableNames": [
                                {
                                  "name": "impl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2176:4:12"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "byzantium",
                        "externalReferences": [
                          {
                            "declaration": 1759,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2176:4:12",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1762,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2190:4:12",
                            "valueSize": 1
                          }
                        ],
                        "id": 1765,
                        "nodeType": "InlineAssembly",
                        "src": "2158:44:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1755,
                    "nodeType": "StructuredDocumentation",
                    "src": "1914:65:12",
                    "text": " @dev Returns the current implementation address."
                  },
                  "id": 1767,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_implementation",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1757,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2024:8:12"
                  },
                  "parameters": {
                    "id": 1756,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2007:2:12"
                  },
                  "returnParameters": {
                    "id": 1760,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1759,
                        "mutability": "mutable",
                        "name": "impl",
                        "nodeType": "VariableDeclaration",
                        "scope": 1767,
                        "src": "2042:12:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1758,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2042:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2041:14:12"
                  },
                  "scope": 1803,
                  "src": "1983:224:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1781,
                    "nodeType": "Block",
                    "src": "2377:89:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1774,
                              "name": "newImplementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1770,
                              "src": "2403:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1773,
                            "name": "_setImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1802,
                            "src": "2384:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2384:37:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1776,
                        "nodeType": "ExpressionStatement",
                        "src": "2384:37:12"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1778,
                              "name": "newImplementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1770,
                              "src": "2442:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1777,
                            "name": "Upgraded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1750,
                            "src": "2433:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2433:27:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1780,
                        "nodeType": "EmitStatement",
                        "src": "2428:32:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1768,
                    "nodeType": "StructuredDocumentation",
                    "src": "2213:104:12",
                    "text": " @dev Upgrades the proxy to a new implementation.\n Emits an {Upgraded} event."
                  },
                  "id": 1782,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_upgradeTo",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1771,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1770,
                        "mutability": "mutable",
                        "name": "newImplementation",
                        "nodeType": "VariableDeclaration",
                        "scope": 1782,
                        "src": "2341:25:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1769,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2341:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2340:27:12"
                  },
                  "returnParameters": {
                    "id": 1772,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2377:0:12"
                  },
                  "scope": 1803,
                  "src": "2321:145:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1801,
                    "nodeType": "Block",
                    "src": "2617:299:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1791,
                                  "name": "newImplementation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1785,
                                  "src": "2659:17:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 1789,
                                  "name": "Address",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1824,
                                  "src": "2640:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_OpenZeppelinUpgradesAddress_$1824_$",
                                    "typeString": "type(library OpenZeppelinUpgradesAddress)"
                                  }
                                },
                                "id": 1790,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "isContract",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1823,
                                "src": "2640:18:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 1792,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2640:37:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
                              "id": 1793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2686:56:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877",
                                "typeString": "literal_string \"UpgradeableProxy: new implementation is not a contract\""
                              },
                              "value": "UpgradeableProxy: new implementation is not a contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877",
                                "typeString": "literal_string \"UpgradeableProxy: new implementation is not a contract\""
                              }
                            ],
                            "id": 1788,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2624:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2624:125:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1795,
                        "nodeType": "ExpressionStatement",
                        "src": "2624:125:12"
                      },
                      {
                        "assignments": [
                          1797
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1797,
                            "mutability": "mutable",
                            "name": "slot",
                            "nodeType": "VariableDeclaration",
                            "scope": 1801,
                            "src": "2758:12:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1796,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "2758:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1799,
                        "initialValue": {
                          "id": 1798,
                          "name": "_IMPLEMENTATION_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1754,
                          "src": "2773:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2758:35:12"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2864:47:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nodeType": "YulIdentifier",
                                    "src": "2880:4:12"
                                  },
                                  {
                                    "name": "newImplementation",
                                    "nodeType": "YulIdentifier",
                                    "src": "2886:17:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "sstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2873:6:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2873:31:12"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2873:31:12"
                            }
                          ]
                        },
                        "evmVersion": "byzantium",
                        "externalReferences": [
                          {
                            "declaration": 1785,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2886:17:12",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1797,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2880:4:12",
                            "valueSize": 1
                          }
                        ],
                        "id": 1800,
                        "nodeType": "InlineAssembly",
                        "src": "2855:56:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1783,
                    "nodeType": "StructuredDocumentation",
                    "src": "2472:78:12",
                    "text": " @dev Stores a new address in the EIP1967 implementation slot."
                  },
                  "id": 1802,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setImplementation",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1786,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1785,
                        "mutability": "mutable",
                        "name": "newImplementation",
                        "nodeType": "VariableDeclaration",
                        "scope": 1802,
                        "src": "2582:25:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1784,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2582:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2581:27:12"
                  },
                  "returnParameters": {
                    "id": 1787,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2617:0:12"
                  },
                  "scope": 1803,
                  "src": "2554:362:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 1804,
              "src": "701:2218:12"
            }
          ],
          "src": "33:2888:12"
        },
        "id": 12
      },
      "contracts/openzeppelin/utils/Address.sol": {
        "ast": {
          "absolutePath": "contracts/openzeppelin/utils/Address.sol",
          "exportedSymbols": {
            "OpenZeppelinUpgradesAddress": [
              1824
            ]
          },
          "id": 1825,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1805,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".24",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:32:13"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 1806,
                "nodeType": "StructuredDocumentation",
                "src": "66:500:13",
                "text": " Utility library of inline functions on addresses\n Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol\n This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts\n when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the\n build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version."
              },
              "fullyImplemented": true,
              "id": 1824,
              "linearizedBaseContracts": [
                1824
              ],
              "name": "OpenZeppelinUpgradesAddress",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1822,
                    "nodeType": "Block",
                    "src": "1031:550:13",
                    "statements": [
                      {
                        "assignments": [
                          1815
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1815,
                            "mutability": "mutable",
                            "name": "size",
                            "nodeType": "VariableDeclaration",
                            "scope": 1822,
                            "src": "1041:12:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1814,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1041:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1816,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1041:12:13"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1518:32:13",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1520:28:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "account",
                                    "nodeType": "YulIdentifier",
                                    "src": "1540:7:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "extcodesize",
                                  "nodeType": "YulIdentifier",
                                  "src": "1528:11:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1528:20:13"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "1520:4:13"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "byzantium",
                        "externalReferences": [
                          {
                            "declaration": 1809,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1540:7:13",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1815,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1520:4:13",
                            "valueSize": 1
                          }
                        ],
                        "id": 1817,
                        "nodeType": "InlineAssembly",
                        "src": "1509:41:13"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1818,
                            "name": "size",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1815,
                            "src": "1566:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1573:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1566:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1813,
                        "id": 1821,
                        "nodeType": "Return",
                        "src": "1559:15:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1807,
                    "nodeType": "StructuredDocumentation",
                    "src": "609:351:13",
                    "text": " Returns whether the target address is a contract\n @dev This function will return false if invoked during the constructor of a contract,\n as the code is not actually created until after the constructor finishes.\n @param account address of the account to check\n @return whether the target address is a contract"
                  },
                  "id": 1823,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isContract",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1810,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1809,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1823,
                        "src": "985:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1808,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "985:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "984:17:13"
                  },
                  "returnParameters": {
                    "id": 1813,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1812,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1823,
                        "src": "1025:4:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1811,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1025:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1024:6:13"
                  },
                  "scope": 1824,
                  "src": "965:616:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1825,
              "src": "567:1016:13"
            }
          ],
          "src": "32:1551:13"
        },
        "id": 13
      },
      "contracts/registry/AlastriaCredentialRegistry.sol": {
        "ast": {
          "absolutePath": "contracts/registry/AlastriaCredentialRegistry.sol",
          "exportedSymbols": {
            "AlastriaCredentialRegistry": [
              2211
            ],
            "Initializable": [
              1194
            ]
          },
          "id": 2212,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1826,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".24",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:32:14"
            },
            {
              "absolutePath": "contracts/openzeppelin/Initializable.sol",
              "file": "../openzeppelin/Initializable.sol",
              "id": 1827,
              "nodeType": "ImportDirective",
              "scope": 2212,
              "sourceUnit": 1195,
              "src": "66:43:14",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1828,
                    "name": "Initializable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1194,
                    "src": "150:13:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Initializable_$1194",
                      "typeString": "contract Initializable"
                    }
                  },
                  "id": 1829,
                  "nodeType": "InheritanceSpecifier",
                  "src": "150:13:14"
                }
              ],
              "contractDependencies": [
                1194
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2211,
              "linearizedBaseContracts": [
                2211,
                1194
              ],
              "name": "AlastriaCredentialRegistry",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "54fd4d50",
                  "id": 1831,
                  "mutability": "mutable",
                  "name": "version",
                  "nodeType": "VariableDeclaration",
                  "scope": 2211,
                  "src": "1021:18:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1830,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "1021:3:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "6104464f",
                  "id": 1833,
                  "mutability": "mutable",
                  "name": "previousPublishedVersion",
                  "nodeType": "VariableDeclaration",
                  "scope": 2211,
                  "src": "1045:39:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1045:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "AlastriaCredentialRegistry.Status",
                  "id": 1838,
                  "members": [
                    {
                      "id": 1834,
                      "name": "Valid",
                      "nodeType": "EnumValue",
                      "src": "1265:5:14"
                    },
                    {
                      "id": 1835,
                      "name": "AskIssuer",
                      "nodeType": "EnumValue",
                      "src": "1272:9:14"
                    },
                    {
                      "id": 1836,
                      "name": "Revoked",
                      "nodeType": "EnumValue",
                      "src": "1283:7:14"
                    },
                    {
                      "id": 1837,
                      "name": "DeletedBySubject",
                      "nodeType": "EnumValue",
                      "src": "1292:16:14"
                    }
                  ],
                  "name": "Status",
                  "nodeType": "EnumDefinition",
                  "src": "1252:57:14"
                },
                {
                  "constant": true,
                  "id": 1842,
                  "mutability": "constant",
                  "name": "STATUS_FIRST",
                  "nodeType": "VariableDeclaration",
                  "scope": 2211,
                  "src": "1314:43:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Status_$1838",
                    "typeString": "enum AlastriaCredentialRegistry.Status"
                  },
                  "typeName": {
                    "id": 1839,
                    "name": "Status",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1838,
                    "src": "1314:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$1838",
                      "typeString": "enum AlastriaCredentialRegistry.Status"
                    }
                  },
                  "value": {
                    "expression": {
                      "id": 1840,
                      "name": "Status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1838,
                      "src": "1345:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Status_$1838_$",
                        "typeString": "type(enum AlastriaCredentialRegistry.Status)"
                      }
                    },
                    "id": 1841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Valid",
                    "nodeType": "MemberAccess",
                    "src": "1345:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$1838",
                      "typeString": "enum AlastriaCredentialRegistry.Status"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1846,
                  "mutability": "constant",
                  "name": "STATUS_LAST",
                  "nodeType": "VariableDeclaration",
                  "scope": 2211,
                  "src": "1363:53:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Status_$1838",
                    "typeString": "enum AlastriaCredentialRegistry.Status"
                  },
                  "typeName": {
                    "id": 1843,
                    "name": "Status",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1838,
                    "src": "1363:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$1838",
                      "typeString": "enum AlastriaCredentialRegistry.Status"
                    }
                  },
                  "value": {
                    "expression": {
                      "id": 1844,
                      "name": "Status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1838,
                      "src": "1393:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Status_$1838_$",
                        "typeString": "type(enum AlastriaCredentialRegistry.Status)"
                      }
                    },
                    "id": 1845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "DeletedBySubject",
                    "nodeType": "MemberAccess",
                    "src": "1393:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$1838",
                      "typeString": "enum AlastriaCredentialRegistry.Status"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "canonicalName": "AlastriaCredentialRegistry.SubjectCredential",
                  "id": 1853,
                  "members": [
                    {
                      "constant": false,
                      "id": 1848,
                      "mutability": "mutable",
                      "name": "exists",
                      "nodeType": "VariableDeclaration",
                      "scope": 1853,
                      "src": "1458:11:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1847,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1458:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1850,
                      "mutability": "mutable",
                      "name": "status",
                      "nodeType": "VariableDeclaration",
                      "scope": 1853,
                      "src": "1479:13:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$1838",
                        "typeString": "enum AlastriaCredentialRegistry.Status"
                      },
                      "typeName": {
                        "id": 1849,
                        "name": "Status",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1838,
                        "src": "1479:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$1838",
                          "typeString": "enum AlastriaCredentialRegistry.Status"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1852,
                      "mutability": "mutable",
                      "name": "URI",
                      "nodeType": "VariableDeclaration",
                      "scope": 1853,
                      "src": "1502:10:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1851,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1502:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "SubjectCredential",
                  "nodeType": "StructDefinition",
                  "scope": 2211,
                  "src": "1423:96:14",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "6792223d",
                  "id": 1859,
                  "mutability": "mutable",
                  "name": "subjectCredentialRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 2211,
                  "src": "1572:90:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_SubjectCredential_$1853_storage_$_$",
                    "typeString": "mapping(address => mapping(bytes32 => struct AlastriaCredentialRegistry.SubjectCredential))"
                  },
                  "typeName": {
                    "id": 1858,
                    "keyType": {
                      "id": 1854,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1580:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1572:57:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_SubjectCredential_$1853_storage_$_$",
                      "typeString": "mapping(address => mapping(bytes32 => struct AlastriaCredentialRegistry.SubjectCredential))"
                    },
                    "valueType": {
                      "id": 1857,
                      "keyType": {
                        "id": 1855,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1599:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1591:37:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_SubjectCredential_$1853_storage_$",
                        "typeString": "mapping(bytes32 => struct AlastriaCredentialRegistry.SubjectCredential)"
                      },
                      "valueType": {
                        "id": 1856,
                        "name": "SubjectCredential",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1853,
                        "src": "1610:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SubjectCredential_$1853_storage_ptr",
                          "typeString": "struct AlastriaCredentialRegistry.SubjectCredential"
                        }
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c43f6b36",
                  "id": 1864,
                  "mutability": "mutable",
                  "name": "subjectCredentialList",
                  "nodeType": "VariableDeclaration",
                  "scope": 2211,
                  "src": "1668:58:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$",
                    "typeString": "mapping(address => bytes32[])"
                  },
                  "typeName": {
                    "id": 1863,
                    "keyType": {
                      "id": 1860,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1676:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1668:29:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$",
                      "typeString": "mapping(address => bytes32[])"
                    },
                    "valueType": {
                      "baseType": {
                        "id": 1861,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1687:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 1862,
                      "nodeType": "ArrayTypeName",
                      "src": "1687:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                        "typeString": "bytes32[]"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "AlastriaCredentialRegistry.IssuerCredential",
                  "id": 1869,
                  "members": [
                    {
                      "constant": false,
                      "id": 1866,
                      "mutability": "mutable",
                      "name": "exists",
                      "nodeType": "VariableDeclaration",
                      "scope": 1869,
                      "src": "1767:11:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1865,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1767:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1868,
                      "mutability": "mutable",
                      "name": "status",
                      "nodeType": "VariableDeclaration",
                      "scope": 1869,
                      "src": "1788:13:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$1838",
                        "typeString": "enum AlastriaCredentialRegistry.Status"
                      },
                      "typeName": {
                        "id": 1867,
                        "name": "Status",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1838,
                        "src": "1788:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$1838",
                          "typeString": "enum AlastriaCredentialRegistry.Status"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "IssuerCredential",
                  "nodeType": "StructDefinition",
                  "scope": 2211,
                  "src": "1733:75:14",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1875,
                  "mutability": "mutable",
                  "name": "issuerCredentialRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 2211,
                  "src": "1882:89:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_IssuerCredential_$1869_storage_$_$",
                    "typeString": "mapping(address => mapping(bytes32 => struct AlastriaCredentialRegistry.IssuerCredential))"
                  },
                  "typeName": {
                    "id": 1874,
                    "keyType": {
                      "id": 1870,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1890:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1882:56:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_IssuerCredential_$1869_storage_$_$",
                      "typeString": "mapping(address => mapping(bytes32 => struct AlastriaCredentialRegistry.IssuerCredential))"
                    },
                    "valueType": {
                      "id": 1873,
                      "keyType": {
                        "id": 1871,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1909:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1901:36:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_IssuerCredential_$1869_storage_$",
                        "typeString": "mapping(bytes32 => struct AlastriaCredentialRegistry.IssuerCredential)"
                      },
                      "valueType": {
                        "id": 1872,
                        "name": "IssuerCredential",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1869,
                        "src": "1920:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IssuerCredential_$1869_storage_ptr",
                          "typeString": "struct AlastriaCredentialRegistry.IssuerCredential"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "41e61ff8",
                  "id": 1880,
                  "mutability": "mutable",
                  "name": "issuerCredentialList",
                  "nodeType": "VariableDeclaration",
                  "scope": 2211,
                  "src": "1977:57:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$",
                    "typeString": "mapping(address => bytes32[])"
                  },
                  "typeName": {
                    "id": 1879,
                    "keyType": {
                      "id": 1876,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1985:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1977:29:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$",
                      "typeString": "mapping(address => bytes32[])"
                    },
                    "valueType": {
                      "baseType": {
                        "id": 1877,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1996:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 1878,
                      "nodeType": "ArrayTypeName",
                      "src": "1996:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                        "typeString": "bytes32[]"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 1884,
                  "name": "SubjectCredentialDeleted",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1883,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1882,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "subjectCredentialHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 1884,
                        "src": "2126:29:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1881,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2126:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2125:31:14"
                  },
                  "src": "2094:63:14"
                },
                {
                  "anonymous": false,
                  "id": 1890,
                  "name": "IssuerCredentialRevoked",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1889,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1886,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "issuerCredentialHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 1890,
                        "src": "2193:28:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1885,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2193:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1888,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "status",
                        "nodeType": "VariableDeclaration",
                        "scope": 1890,
                        "src": "2223:13:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$1838",
                          "typeString": "enum AlastriaCredentialRegistry.Status"
                        },
                        "typeName": {
                          "id": 1887,
                          "name": "Status",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1838,
                          "src": "2223:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$1838",
                            "typeString": "enum AlastriaCredentialRegistry.Status"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2192:45:14"
                  },
                  "src": "2162:76:14"
                },
                {
                  "body": {
                    "id": 1904,
                    "nodeType": "Block",
                    "src": "2296:92:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1895,
                                "name": "addr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1892,
                                "src": "2351:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1898,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2367:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1897,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2359:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1896,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2359:7:14",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1899,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2359:10:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "2351:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1894,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2343:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2343:27:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1902,
                        "nodeType": "ExpressionStatement",
                        "src": "2343:27:14"
                      },
                      {
                        "id": 1903,
                        "nodeType": "PlaceholderStatement",
                        "src": "2380:1:14"
                      }
                    ]
                  },
                  "id": 1905,
                  "name": "validAddress",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1893,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1892,
                        "mutability": "mutable",
                        "name": "addr",
                        "nodeType": "VariableDeclaration",
                        "scope": 1905,
                        "src": "2282:12:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1891,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2282:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2281:14:14"
                  },
                  "src": "2260:128:14",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1920,
                    "nodeType": "Block",
                    "src": "2431:141:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1916,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_Status_$1838",
                                  "typeString": "enum AlastriaCredentialRegistry.Status"
                                },
                                "id": 1912,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1910,
                                  "name": "status",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1907,
                                  "src": "2506:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Status_$1838",
                                    "typeString": "enum AlastriaCredentialRegistry.Status"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 1911,
                                  "name": "STATUS_FIRST",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1842,
                                  "src": "2516:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Status_$1838",
                                    "typeString": "enum AlastriaCredentialRegistry.Status"
                                  }
                                },
                                "src": "2506:22:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_Status_$1838",
                                  "typeString": "enum AlastriaCredentialRegistry.Status"
                                },
                                "id": 1915,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1913,
                                  "name": "status",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1907,
                                  "src": "2532:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Status_$1838",
                                    "typeString": "enum AlastriaCredentialRegistry.Status"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 1914,
                                  "name": "STATUS_LAST",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1846,
                                  "src": "2542:11:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Status_$1838",
                                    "typeString": "enum AlastriaCredentialRegistry.Status"
                                  }
                                },
                                "src": "2532:21:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2506:47:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1909,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2497:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2497:57:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1918,
                        "nodeType": "ExpressionStatement",
                        "src": "2497:57:14"
                      },
                      {
                        "id": 1919,
                        "nodeType": "PlaceholderStatement",
                        "src": "2564:1:14"
                      }
                    ]
                  },
                  "id": 1921,
                  "name": "validStatus",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1908,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1907,
                        "mutability": "mutable",
                        "name": "status",
                        "nodeType": "VariableDeclaration",
                        "scope": 1921,
                        "src": "2416:13:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$1838",
                          "typeString": "enum AlastriaCredentialRegistry.Status"
                        },
                        "typeName": {
                          "id": 1906,
                          "name": "Status",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1838,
                          "src": "2416:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$1838",
                            "typeString": "enum AlastriaCredentialRegistry.Status"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2415:15:14"
                  },
                  "src": "2394:178:14",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1936,
                    "nodeType": "Block",
                    "src": "2688:90:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 1930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1928,
                            "name": "version",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1831,
                            "src": "2698:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "33",
                            "id": 1929,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2708:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "2698:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 1931,
                        "nodeType": "ExpressionStatement",
                        "src": "2698:11:14"
                      },
                      {
                        "expression": {
                          "id": 1934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1932,
                            "name": "previousPublishedVersion",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1833,
                            "src": "2719:24:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1933,
                            "name": "_previousPublishedVersion",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1923,
                            "src": "2746:25:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2719:52:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1935,
                        "nodeType": "ExpressionStatement",
                        "src": "2719:52:14"
                      }
                    ]
                  },
                  "functionSelector": "c4d66de8",
                  "id": 1937,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1926,
                      "modifierName": {
                        "id": 1925,
                        "name": "initializer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1171,
                        "src": "2676:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2676:11:14"
                    }
                  ],
                  "name": "initialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1924,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1923,
                        "mutability": "mutable",
                        "name": "_previousPublishedVersion",
                        "nodeType": "VariableDeclaration",
                        "scope": 1937,
                        "src": "2634:33:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1922,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2634:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2633:35:14"
                  },
                  "returnParameters": {
                    "id": 1927,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2688:0:14"
                  },
                  "scope": 2211,
                  "src": "2614:164:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1977,
                    "nodeType": "Block",
                    "src": "2871:280:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1952,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "2889:68:14",
                              "subExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 1945,
                                      "name": "subjectCredentialRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1859,
                                      "src": "2890:25:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_SubjectCredential_$1853_storage_$_$",
                                        "typeString": "mapping(address => mapping(bytes32 => struct AlastriaCredentialRegistry.SubjectCredential storage ref))"
                                      }
                                    },
                                    "id": 1948,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 1946,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "2916:3:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 1947,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "2916:10:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2890:37:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_SubjectCredential_$1853_storage_$",
                                      "typeString": "mapping(bytes32 => struct AlastriaCredentialRegistry.SubjectCredential storage ref)"
                                    }
                                  },
                                  "id": 1950,
                                  "indexExpression": {
                                    "id": 1949,
                                    "name": "subjectCredentialHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1939,
                                    "src": "2928:21:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2890:60:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SubjectCredential_$1853_storage",
                                    "typeString": "struct AlastriaCredentialRegistry.SubjectCredential storage ref"
                                  }
                                },
                                "id": 1951,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "exists",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1848,
                                "src": "2890:67:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1944,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2881:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2881:77:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1954,
                        "nodeType": "ExpressionStatement",
                        "src": "2881:77:14"
                      },
                      {
                        "expression": {
                          "id": 1967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1955,
                                "name": "subjectCredentialRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1859,
                                "src": "2968:25:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_SubjectCredential_$1853_storage_$_$",
                                  "typeString": "mapping(address => mapping(bytes32 => struct AlastriaCredentialRegistry.SubjectCredential storage ref))"
                                }
                              },
                              "id": 1959,
                              "indexExpression": {
                                "expression": {
                                  "id": 1956,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2994:3:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1957,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2994:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2968:37:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_SubjectCredential_$1853_storage_$",
                                "typeString": "mapping(bytes32 => struct AlastriaCredentialRegistry.SubjectCredential storage ref)"
                              }
                            },
                            "id": 1960,
                            "indexExpression": {
                              "id": 1958,
                              "name": "subjectCredentialHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1939,
                              "src": "3006:21:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2968:60:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SubjectCredential_$1853_storage",
                              "typeString": "struct AlastriaCredentialRegistry.SubjectCredential storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "74727565",
                                "id": 1962,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3049:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              {
                                "expression": {
                                  "id": 1963,
                                  "name": "Status",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1838,
                                  "src": "3055:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Status_$1838_$",
                                    "typeString": "type(enum AlastriaCredentialRegistry.Status)"
                                  }
                                },
                                "id": 1964,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Valid",
                                "nodeType": "MemberAccess",
                                "src": "3055:12:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Status_$1838",
                                  "typeString": "enum AlastriaCredentialRegistry.Status"
                                }
                              },
                              {
                                "id": 1965,
                                "name": "URI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1941,
                                "src": "3069:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_enum$_Status_$1838",
                                  "typeString": "enum AlastriaCredentialRegistry.Status"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 1961,
                              "name": "SubjectCredential",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1853,
                              "src": "3031:17:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_SubjectCredential_$1853_storage_ptr_$",
                                "typeString": "type(struct AlastriaCredentialRegistry.SubjectCredential storage pointer)"
                              }
                            },
                            "id": 1966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3031:42:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SubjectCredential_$1853_memory_ptr",
                              "typeString": "struct AlastriaCredentialRegistry.SubjectCredential memory"
                            }
                          },
                          "src": "2968:105:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SubjectCredential_$1853_storage",
                            "typeString": "struct AlastriaCredentialRegistry.SubjectCredential storage ref"
                          }
                        },
                        "id": 1968,
                        "nodeType": "ExpressionStatement",
                        "src": "2968:105:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1974,
                              "name": "subjectCredentialHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1939,
                              "src": "3122:21:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 1969,
                                "name": "subjectCredentialList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1864,
                                "src": "3083:21:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$",
                                  "typeString": "mapping(address => bytes32[] storage ref)"
                                }
                              },
                              "id": 1972,
                              "indexExpression": {
                                "expression": {
                                  "id": 1970,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3105:3:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1971,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3105:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3083:33:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                "typeString": "bytes32[] storage ref"
                              }
                            },
                            "id": 1973,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3083:38:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 1975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3083:61:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1976,
                        "nodeType": "ExpressionStatement",
                        "src": "3083:61:14"
                      }
                    ]
                  },
                  "functionSelector": "e04ce02c",
                  "id": 1978,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addSubjectCredential",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1942,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1939,
                        "mutability": "mutable",
                        "name": "subjectCredentialHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 1978,
                        "src": "2814:29:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1938,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2814:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1941,
                        "mutability": "mutable",
                        "name": "URI",
                        "nodeType": "VariableDeclaration",
                        "scope": 1978,
                        "src": "2845:17:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1940,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2845:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2813:50:14"
                  },
                  "returnParameters": {
                    "id": 1943,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2871:0:14"
                  },
                  "scope": 2211,
                  "src": "2784:367:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2015,
                    "nodeType": "Block",
                    "src": "3223:268:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1991,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "3241:66:14",
                              "subExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 1984,
                                      "name": "issuerCredentialRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1875,
                                      "src": "3242:24:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_IssuerCredential_$1869_storage_$_$",
                                        "typeString": "mapping(address => mapping(bytes32 => struct AlastriaCredentialRegistry.IssuerCredential storage ref))"
                                      }
                                    },
                                    "id": 1987,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 1985,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "3267:3:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 1986,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "3267:10:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3242:36:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_IssuerCredential_$1869_storage_$",
                                      "typeString": "mapping(bytes32 => struct AlastriaCredentialRegistry.IssuerCredential storage ref)"
                                    }
                                  },
                                  "id": 1989,
                                  "indexExpression": {
                                    "id": 1988,
                                    "name": "issuerCredentialHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1980,
                                    "src": "3279:20:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3242:58:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IssuerCredential_$1869_storage",
                                    "typeString": "struct AlastriaCredentialRegistry.IssuerCredential storage ref"
                                  }
                                },
                                "id": 1990,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "exists",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1866,
                                "src": "3242:65:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1983,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3233:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3233:75:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1993,
                        "nodeType": "ExpressionStatement",
                        "src": "3233:75:14"
                      },
                      {
                        "expression": {
                          "id": 2005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1994,
                                "name": "issuerCredentialRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1875,
                                "src": "3318:24:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_IssuerCredential_$1869_storage_$_$",
                                  "typeString": "mapping(address => mapping(bytes32 => struct AlastriaCredentialRegistry.IssuerCredential storage ref))"
                                }
                              },
                              "id": 1998,
                              "indexExpression": {
                                "expression": {
                                  "id": 1995,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3343:3:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1996,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3343:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3318:36:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_IssuerCredential_$1869_storage_$",
                                "typeString": "mapping(bytes32 => struct AlastriaCredentialRegistry.IssuerCredential storage ref)"
                              }
                            },
                            "id": 1999,
                            "indexExpression": {
                              "id": 1997,
                              "name": "issuerCredentialHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1980,
                              "src": "3355:20:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3318:58:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IssuerCredential_$1869_storage",
                              "typeString": "struct AlastriaCredentialRegistry.IssuerCredential storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "74727565",
                                "id": 2001,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3396:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              {
                                "expression": {
                                  "id": 2002,
                                  "name": "Status",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1838,
                                  "src": "3402:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Status_$1838_$",
                                    "typeString": "type(enum AlastriaCredentialRegistry.Status)"
                                  }
                                },
                                "id": 2003,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Valid",
                                "nodeType": "MemberAccess",
                                "src": "3402:12:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Status_$1838",
                                  "typeString": "enum AlastriaCredentialRegistry.Status"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_enum$_Status_$1838",
                                  "typeString": "enum AlastriaCredentialRegistry.Status"
                                }
                              ],
                              "id": 2000,
                              "name": "IssuerCredential",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1869,
                              "src": "3379:16:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_IssuerCredential_$1869_storage_ptr_$",
                                "typeString": "type(struct AlastriaCredentialRegistry.IssuerCredential storage pointer)"
                              }
                            },
                            "id": 2004,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3379:36:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IssuerCredential_$1869_memory_ptr",
                              "typeString": "struct AlastriaCredentialRegistry.IssuerCredential memory"
                            }
                          },
                          "src": "3318:97:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IssuerCredential_$1869_storage",
                            "typeString": "struct AlastriaCredentialRegistry.IssuerCredential storage ref"
                          }
                        },
                        "id": 2006,
                        "nodeType": "ExpressionStatement",
                        "src": "3318:97:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2012,
                              "name": "issuerCredentialHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1980,
                              "src": "3463:20:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 2007,
                                "name": "issuerCredentialList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1880,
                                "src": "3425:20:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$",
                                  "typeString": "mapping(address => bytes32[] storage ref)"
                                }
                              },
                              "id": 2010,
                              "indexExpression": {
                                "expression": {
                                  "id": 2008,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3446:3:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2009,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3446:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3425:32:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                "typeString": "bytes32[] storage ref"
                              }
                            },
                            "id": 2011,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3425:37:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 2013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3425:59:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2014,
                        "nodeType": "ExpressionStatement",
                        "src": "3425:59:14"
                      }
                    ]
                  },
                  "functionSelector": "dc11e39b",
                  "id": 2016,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addIssuerCredential",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1981,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1980,
                        "mutability": "mutable",
                        "name": "issuerCredentialHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 2016,
                        "src": "3186:28:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1979,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3186:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3185:30:14"
                  },
                  "returnParameters": {
                    "id": 1982,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3223:0:14"
                  },
                  "scope": 2211,
                  "src": "3157:334:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2051,
                    "nodeType": "Block",
                    "src": "3568:335:14",
                    "statements": [
                      {
                        "assignments": [
                          2022
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2022,
                            "mutability": "mutable",
                            "name": "value",
                            "nodeType": "VariableDeclaration",
                            "scope": 2051,
                            "src": "3578:31:14",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SubjectCredential_$1853_storage_ptr",
                              "typeString": "struct AlastriaCredentialRegistry.SubjectCredential"
                            },
                            "typeName": {
                              "id": 2021,
                              "name": "SubjectCredential",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1853,
                              "src": "3578:17:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SubjectCredential_$1853_storage_ptr",
                                "typeString": "struct AlastriaCredentialRegistry.SubjectCredential"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2029,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2023,
                              "name": "subjectCredentialRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1859,
                              "src": "3612:25:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_SubjectCredential_$1853_storage_$_$",
                                "typeString": "mapping(address => mapping(bytes32 => struct AlastriaCredentialRegistry.SubjectCredential storage ref))"
                              }
                            },
                            "id": 2026,
                            "indexExpression": {
                              "expression": {
                                "id": 2024,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3638:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2025,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3638:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3612:37:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_SubjectCredential_$1853_storage_$",
                              "typeString": "mapping(bytes32 => struct AlastriaCredentialRegistry.SubjectCredential storage ref)"
                            }
                          },
                          "id": 2028,
                          "indexExpression": {
                            "id": 2027,
                            "name": "subjectCredentialHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2018,
                            "src": "3650:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3612:60:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SubjectCredential_$1853_storage",
                            "typeString": "struct AlastriaCredentialRegistry.SubjectCredential storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3578:94:14"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2030,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2022,
                              "src": "3711:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SubjectCredential_$1853_storage_ptr",
                                "typeString": "struct AlastriaCredentialRegistry.SubjectCredential storage pointer"
                              }
                            },
                            "id": 2031,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exists",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1848,
                            "src": "3711:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_Status_$1838",
                              "typeString": "enum AlastriaCredentialRegistry.Status"
                            },
                            "id": 2036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2032,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2022,
                                "src": "3727:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SubjectCredential_$1853_storage_ptr",
                                  "typeString": "struct AlastriaCredentialRegistry.SubjectCredential storage pointer"
                                }
                              },
                              "id": 2033,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "status",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1850,
                              "src": "3727:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Status_$1838",
                                "typeString": "enum AlastriaCredentialRegistry.Status"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "id": 2034,
                                "name": "Status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1838,
                                "src": "3743:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Status_$1838_$",
                                  "typeString": "type(enum AlastriaCredentialRegistry.Status)"
                                }
                              },
                              "id": 2035,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "DeletedBySubject",
                              "nodeType": "MemberAccess",
                              "src": "3743:23:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Status_$1838",
                                "typeString": "enum AlastriaCredentialRegistry.Status"
                              }
                            },
                            "src": "3727:39:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3711:55:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2050,
                        "nodeType": "IfStatement",
                        "src": "3707:190:14",
                        "trueBody": {
                          "id": 2049,
                          "nodeType": "Block",
                          "src": "3768:129:14",
                          "statements": [
                            {
                              "expression": {
                                "id": 2043,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 2038,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2022,
                                    "src": "3782:5:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SubjectCredential_$1853_storage_ptr",
                                      "typeString": "struct AlastriaCredentialRegistry.SubjectCredential storage pointer"
                                    }
                                  },
                                  "id": 2040,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1850,
                                  "src": "3782:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Status_$1838",
                                    "typeString": "enum AlastriaCredentialRegistry.Status"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 2041,
                                    "name": "Status",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1838,
                                    "src": "3797:6:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Status_$1838_$",
                                      "typeString": "type(enum AlastriaCredentialRegistry.Status)"
                                    }
                                  },
                                  "id": 2042,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "DeletedBySubject",
                                  "nodeType": "MemberAccess",
                                  "src": "3797:23:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Status_$1838",
                                    "typeString": "enum AlastriaCredentialRegistry.Status"
                                  }
                                },
                                "src": "3782:38:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Status_$1838",
                                  "typeString": "enum AlastriaCredentialRegistry.Status"
                                }
                              },
                              "id": 2044,
                              "nodeType": "ExpressionStatement",
                              "src": "3782:38:14"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 2046,
                                    "name": "subjectCredentialHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2018,
                                    "src": "3864:21:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 2045,
                                  "name": "SubjectCredentialDeleted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1884,
                                  "src": "3839:24:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                                    "typeString": "function (bytes32)"
                                  }
                                },
                                "id": 2047,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3839:47:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2048,
                              "nodeType": "EmitStatement",
                              "src": "3834:52:14"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "dff9a1a9",
                  "id": 2052,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deleteSubjectCredential",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2019,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2018,
                        "mutability": "mutable",
                        "name": "subjectCredentialHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 2052,
                        "src": "3530:29:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2017,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3530:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3529:31:14"
                  },
                  "returnParameters": {
                    "id": 2020,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3568:0:14"
                  },
                  "scope": 2211,
                  "src": "3497:406:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2080,
                    "nodeType": "Block",
                    "src": "4186:153:14",
                    "statements": [
                      {
                        "assignments": [
                          2067
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2067,
                            "mutability": "mutable",
                            "name": "value",
                            "nodeType": "VariableDeclaration",
                            "scope": 2080,
                            "src": "4196:31:14",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SubjectCredential_$1853_storage_ptr",
                              "typeString": "struct AlastriaCredentialRegistry.SubjectCredential"
                            },
                            "typeName": {
                              "id": 2066,
                              "name": "SubjectCredential",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1853,
                              "src": "4196:17:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SubjectCredential_$1853_storage_ptr",
                                "typeString": "struct AlastriaCredentialRegistry.SubjectCredential"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2073,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2068,
                              "name": "subjectCredentialRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1859,
                              "src": "4230:25:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_SubjectCredential_$1853_storage_$_$",
                                "typeString": "mapping(address => mapping(bytes32 => struct AlastriaCredentialRegistry.SubjectCredential storage ref))"
                              }
                            },
                            "id": 2070,
                            "indexExpression": {
                              "id": 2069,
                              "name": "subject",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2054,
                              "src": "4256:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4230:34:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_SubjectCredential_$1853_storage_$",
                              "typeString": "mapping(bytes32 => struct AlastriaCredentialRegistry.SubjectCredential storage ref)"
                            }
                          },
                          "id": 2072,
                          "indexExpression": {
                            "id": 2071,
                            "name": "subjectCredentialHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2056,
                            "src": "4265:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4230:57:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SubjectCredential_$1853_storage",
                            "typeString": "struct AlastriaCredentialRegistry.SubjectCredential storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4196:91:14"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "expression": {
                                "id": 2074,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2067,
                                "src": "4305:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SubjectCredential_$1853_storage_ptr",
                                  "typeString": "struct AlastriaCredentialRegistry.SubjectCredential storage pointer"
                                }
                              },
                              "id": 2075,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "exists",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1848,
                              "src": "4305:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 2076,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2067,
                                "src": "4319:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SubjectCredential_$1853_storage_ptr",
                                  "typeString": "struct AlastriaCredentialRegistry.SubjectCredential storage pointer"
                                }
                              },
                              "id": 2077,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "status",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1850,
                              "src": "4319:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Status_$1838",
                                "typeString": "enum AlastriaCredentialRegistry.Status"
                              }
                            }
                          ],
                          "id": 2078,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4304:28:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_enum$_Status_$1838_$",
                            "typeString": "tuple(bool,enum AlastriaCredentialRegistry.Status)"
                          }
                        },
                        "functionReturnParameters": 2065,
                        "id": 2079,
                        "nodeType": "Return",
                        "src": "4297:35:14"
                      }
                    ]
                  },
                  "functionSelector": "55d64732",
                  "id": 2081,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 2059,
                          "name": "subject",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2054,
                          "src": "4140:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 2060,
                      "modifierName": {
                        "id": 2058,
                        "name": "validAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1905,
                        "src": "4127:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_address_$",
                          "typeString": "modifier (address)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4127:21:14"
                    }
                  ],
                  "name": "getSubjectCredentialStatus",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2057,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2054,
                        "mutability": "mutable",
                        "name": "subject",
                        "nodeType": "VariableDeclaration",
                        "scope": 2081,
                        "src": "4067:15:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2053,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4067:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2056,
                        "mutability": "mutable",
                        "name": "subjectCredentialHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 2081,
                        "src": "4084:29:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2055,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4084:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4066:48:14"
                  },
                  "returnParameters": {
                    "id": 2065,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2062,
                        "mutability": "mutable",
                        "name": "exists",
                        "nodeType": "VariableDeclaration",
                        "scope": 2081,
                        "src": "4158:11:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2061,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4158:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2064,
                        "mutability": "mutable",
                        "name": "status",
                        "nodeType": "VariableDeclaration",
                        "scope": 2081,
                        "src": "4171:13:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$1838",
                          "typeString": "enum AlastriaCredentialRegistry.Status"
                        },
                        "typeName": {
                          "id": 2063,
                          "name": "Status",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1838,
                          "src": "4171:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$1838",
                            "typeString": "enum AlastriaCredentialRegistry.Status"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4157:28:14"
                  },
                  "scope": 2211,
                  "src": "4031:308:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2100,
                    "nodeType": "Block",
                    "src": "4441:95:14",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2091,
                                  "name": "subjectCredentialList",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1864,
                                  "src": "4459:21:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$",
                                    "typeString": "mapping(address => bytes32[] storage ref)"
                                  }
                                },
                                "id": 2093,
                                "indexExpression": {
                                  "id": 2092,
                                  "name": "subject",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2083,
                                  "src": "4481:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4459:30:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                  "typeString": "bytes32[] storage ref"
                                }
                              },
                              "id": 2094,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "4459:37:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 2095,
                                "name": "subjectCredentialList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1864,
                                "src": "4498:21:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$",
                                  "typeString": "mapping(address => bytes32[] storage ref)"
                                }
                              },
                              "id": 2097,
                              "indexExpression": {
                                "id": 2096,
                                "name": "subject",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2083,
                                "src": "4520:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4498:30:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                "typeString": "bytes32[] storage ref"
                              }
                            }
                          ],
                          "id": 2098,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4458:71:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                            "typeString": "tuple(uint256,bytes32[] storage ref)"
                          }
                        },
                        "functionReturnParameters": 2090,
                        "id": 2099,
                        "nodeType": "Return",
                        "src": "4451:78:14"
                      }
                    ]
                  },
                  "functionSelector": "4510b1cb",
                  "id": 2101,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSubjectCredentialList",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2084,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2083,
                        "mutability": "mutable",
                        "name": "subject",
                        "nodeType": "VariableDeclaration",
                        "scope": 2101,
                        "src": "4379:15:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2082,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4379:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4378:17:14"
                  },
                  "returnParameters": {
                    "id": 2090,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2086,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2101,
                        "src": "4417:4:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2085,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4417:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2089,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2101,
                        "src": "4423:16:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2087,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "4423:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 2088,
                          "nodeType": "ArrayTypeName",
                          "src": "4423:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4416:24:14"
                  },
                  "scope": 2211,
                  "src": "4345:191:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2154,
                    "nodeType": "Block",
                    "src": "4647:456:14",
                    "statements": [
                      {
                        "assignments": [
                          2112
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2112,
                            "mutability": "mutable",
                            "name": "value",
                            "nodeType": "VariableDeclaration",
                            "scope": 2154,
                            "src": "4657:30:14",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IssuerCredential_$1869_storage_ptr",
                              "typeString": "struct AlastriaCredentialRegistry.IssuerCredential"
                            },
                            "typeName": {
                              "id": 2111,
                              "name": "IssuerCredential",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1869,
                              "src": "4657:16:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IssuerCredential_$1869_storage_ptr",
                                "typeString": "struct AlastriaCredentialRegistry.IssuerCredential"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2119,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2113,
                              "name": "issuerCredentialRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1875,
                              "src": "4690:24:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_IssuerCredential_$1869_storage_$_$",
                                "typeString": "mapping(address => mapping(bytes32 => struct AlastriaCredentialRegistry.IssuerCredential storage ref))"
                              }
                            },
                            "id": 2116,
                            "indexExpression": {
                              "expression": {
                                "id": 2114,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4715:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4715:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4690:36:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_IssuerCredential_$1869_storage_$",
                              "typeString": "mapping(bytes32 => struct AlastriaCredentialRegistry.IssuerCredential storage ref)"
                            }
                          },
                          "id": 2118,
                          "indexExpression": {
                            "id": 2117,
                            "name": "issuerCredentialHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2103,
                            "src": "4727:20:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4690:58:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IssuerCredential_$1869_storage",
                            "typeString": "struct AlastriaCredentialRegistry.IssuerCredential storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4657:91:14"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Status_$1838",
                            "typeString": "enum AlastriaCredentialRegistry.Status"
                          },
                          "id": 2123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2120,
                            "name": "status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2105,
                            "src": "4823:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$1838",
                              "typeString": "enum AlastriaCredentialRegistry.Status"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "id": 2121,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2112,
                              "src": "4832:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IssuerCredential_$1869_storage_ptr",
                                "typeString": "struct AlastriaCredentialRegistry.IssuerCredential storage pointer"
                              }
                            },
                            "id": 2122,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1868,
                            "src": "4832:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$1838",
                              "typeString": "enum AlastriaCredentialRegistry.Status"
                            }
                          },
                          "src": "4823:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2153,
                        "nodeType": "IfStatement",
                        "src": "4819:278:14",
                        "trueBody": {
                          "id": 2152,
                          "nodeType": "Block",
                          "src": "4846:251:14",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_Status_$1838",
                                    "typeString": "enum AlastriaCredentialRegistry.Status"
                                  },
                                  "id": 2127,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2124,
                                    "name": "status",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2105,
                                    "src": "4864:6:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Status_$1838",
                                      "typeString": "enum AlastriaCredentialRegistry.Status"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 2125,
                                      "name": "Status",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1838,
                                      "src": "4874:6:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Status_$1838_$",
                                        "typeString": "type(enum AlastriaCredentialRegistry.Status)"
                                      }
                                    },
                                    "id": 2126,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "AskIssuer",
                                    "nodeType": "MemberAccess",
                                    "src": "4874:16:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Status_$1838",
                                      "typeString": "enum AlastriaCredentialRegistry.Status"
                                    }
                                  },
                                  "src": "4864:26:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_Status_$1838",
                                    "typeString": "enum AlastriaCredentialRegistry.Status"
                                  },
                                  "id": 2131,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2128,
                                    "name": "status",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2105,
                                    "src": "4894:6:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Status_$1838",
                                      "typeString": "enum AlastriaCredentialRegistry.Status"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 2129,
                                      "name": "Status",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1838,
                                      "src": "4904:6:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Status_$1838_$",
                                        "typeString": "type(enum AlastriaCredentialRegistry.Status)"
                                      }
                                    },
                                    "id": 2130,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "Revoked",
                                    "nodeType": "MemberAccess",
                                    "src": "4904:14:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Status_$1838",
                                      "typeString": "enum AlastriaCredentialRegistry.Status"
                                    }
                                  },
                                  "src": "4894:24:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "4864:54:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2151,
                              "nodeType": "IfStatement",
                              "src": "4860:227:14",
                              "trueBody": {
                                "id": 2150,
                                "nodeType": "Block",
                                "src": "4920:167:14",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2137,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "id": 2133,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2112,
                                          "src": "4938:5:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_IssuerCredential_$1869_storage_ptr",
                                            "typeString": "struct AlastriaCredentialRegistry.IssuerCredential storage pointer"
                                          }
                                        },
                                        "id": 2135,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "exists",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1866,
                                        "src": "4938:12:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "74727565",
                                        "id": 2136,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4953:4:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "4938:19:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 2138,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4938:19:14"
                                  },
                                  {
                                    "expression": {
                                      "id": 2143,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "id": 2139,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2112,
                                          "src": "4975:5:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_IssuerCredential_$1869_storage_ptr",
                                            "typeString": "struct AlastriaCredentialRegistry.IssuerCredential storage pointer"
                                          }
                                        },
                                        "id": 2141,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "status",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1868,
                                        "src": "4975:12:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_Status_$1838",
                                          "typeString": "enum AlastriaCredentialRegistry.Status"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 2142,
                                        "name": "status",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2105,
                                        "src": "4990:6:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_Status_$1838",
                                          "typeString": "enum AlastriaCredentialRegistry.Status"
                                        }
                                      },
                                      "src": "4975:21:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_Status_$1838",
                                        "typeString": "enum AlastriaCredentialRegistry.Status"
                                      }
                                    },
                                    "id": 2144,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4975:21:14"
                                  },
                                  {
                                    "eventCall": {
                                      "arguments": [
                                        {
                                          "id": 2146,
                                          "name": "issuerCredentialHash",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2103,
                                          "src": "5043:20:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        {
                                          "id": 2147,
                                          "name": "status",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2105,
                                          "src": "5065:6:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Status_$1838",
                                            "typeString": "enum AlastriaCredentialRegistry.Status"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          },
                                          {
                                            "typeIdentifier": "t_enum$_Status_$1838",
                                            "typeString": "enum AlastriaCredentialRegistry.Status"
                                          }
                                        ],
                                        "id": 2145,
                                        "name": "IssuerCredentialRevoked",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1890,
                                        "src": "5019:23:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_enum$_Status_$1838_$returns$__$",
                                          "typeString": "function (bytes32,enum AlastriaCredentialRegistry.Status)"
                                        }
                                      },
                                      "id": 2148,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5019:53:14",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 2149,
                                    "nodeType": "EmitStatement",
                                    "src": "5014:58:14"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "dd517e10",
                  "id": 2155,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 2108,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2105,
                          "src": "4632:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$1838",
                            "typeString": "enum AlastriaCredentialRegistry.Status"
                          }
                        }
                      ],
                      "id": 2109,
                      "modifierName": {
                        "id": 2107,
                        "name": "validStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1921,
                        "src": "4619:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_enum$_Status_$1838_$",
                          "typeString": "modifier (enum AlastriaCredentialRegistry.Status)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4619:20:14"
                    }
                  ],
                  "name": "updateCredentialStatus",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2106,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2103,
                        "mutability": "mutable",
                        "name": "issuerCredentialHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 2155,
                        "src": "4574:28:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2102,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4574:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2105,
                        "mutability": "mutable",
                        "name": "status",
                        "nodeType": "VariableDeclaration",
                        "scope": 2155,
                        "src": "4604:13:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$1838",
                          "typeString": "enum AlastriaCredentialRegistry.Status"
                        },
                        "typeName": {
                          "id": 2104,
                          "name": "Status",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1838,
                          "src": "4604:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$1838",
                            "typeString": "enum AlastriaCredentialRegistry.Status"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4573:45:14"
                  },
                  "returnParameters": {
                    "id": 2110,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4647:0:14"
                  },
                  "scope": 2211,
                  "src": "4542:561:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2183,
                    "nodeType": "Block",
                    "src": "5382:149:14",
                    "statements": [
                      {
                        "assignments": [
                          2170
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2170,
                            "mutability": "mutable",
                            "name": "value",
                            "nodeType": "VariableDeclaration",
                            "scope": 2183,
                            "src": "5392:30:14",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IssuerCredential_$1869_storage_ptr",
                              "typeString": "struct AlastriaCredentialRegistry.IssuerCredential"
                            },
                            "typeName": {
                              "id": 2169,
                              "name": "IssuerCredential",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1869,
                              "src": "5392:16:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IssuerCredential_$1869_storage_ptr",
                                "typeString": "struct AlastriaCredentialRegistry.IssuerCredential"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2176,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2171,
                              "name": "issuerCredentialRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1875,
                              "src": "5425:24:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_IssuerCredential_$1869_storage_$_$",
                                "typeString": "mapping(address => mapping(bytes32 => struct AlastriaCredentialRegistry.IssuerCredential storage ref))"
                              }
                            },
                            "id": 2173,
                            "indexExpression": {
                              "id": 2172,
                              "name": "issuer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2157,
                              "src": "5450:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5425:32:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_IssuerCredential_$1869_storage_$",
                              "typeString": "mapping(bytes32 => struct AlastriaCredentialRegistry.IssuerCredential storage ref)"
                            }
                          },
                          "id": 2175,
                          "indexExpression": {
                            "id": 2174,
                            "name": "issuerCredentialHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2159,
                            "src": "5458:20:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5425:54:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IssuerCredential_$1869_storage",
                            "typeString": "struct AlastriaCredentialRegistry.IssuerCredential storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5392:87:14"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "expression": {
                                "id": 2177,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2170,
                                "src": "5497:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_IssuerCredential_$1869_storage_ptr",
                                  "typeString": "struct AlastriaCredentialRegistry.IssuerCredential storage pointer"
                                }
                              },
                              "id": 2178,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "exists",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1866,
                              "src": "5497:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 2179,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2170,
                                "src": "5511:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_IssuerCredential_$1869_storage_ptr",
                                  "typeString": "struct AlastriaCredentialRegistry.IssuerCredential storage pointer"
                                }
                              },
                              "id": 2180,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "status",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1868,
                              "src": "5511:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Status_$1838",
                                "typeString": "enum AlastriaCredentialRegistry.Status"
                              }
                            }
                          ],
                          "id": 2181,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5496:28:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_enum$_Status_$1838_$",
                            "typeString": "tuple(bool,enum AlastriaCredentialRegistry.Status)"
                          }
                        },
                        "functionReturnParameters": 2168,
                        "id": 2182,
                        "nodeType": "Return",
                        "src": "5489:35:14"
                      }
                    ]
                  },
                  "functionSelector": "aeda232a",
                  "id": 2184,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 2162,
                          "name": "issuer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2157,
                          "src": "5337:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 2163,
                      "modifierName": {
                        "id": 2161,
                        "name": "validAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1905,
                        "src": "5324:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_address_$",
                          "typeString": "modifier (address)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5324:20:14"
                    }
                  ],
                  "name": "getIssuerCredentialStatus",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2160,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2157,
                        "mutability": "mutable",
                        "name": "issuer",
                        "nodeType": "VariableDeclaration",
                        "scope": 2184,
                        "src": "5266:14:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2156,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5266:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2159,
                        "mutability": "mutable",
                        "name": "issuerCredentialHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 2184,
                        "src": "5282:28:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2158,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5282:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5265:46:14"
                  },
                  "returnParameters": {
                    "id": 2168,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2165,
                        "mutability": "mutable",
                        "name": "exists",
                        "nodeType": "VariableDeclaration",
                        "scope": 2184,
                        "src": "5354:11:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2164,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5354:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2167,
                        "mutability": "mutable",
                        "name": "status",
                        "nodeType": "VariableDeclaration",
                        "scope": 2184,
                        "src": "5367:13:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$1838",
                          "typeString": "enum AlastriaCredentialRegistry.Status"
                        },
                        "typeName": {
                          "id": 2166,
                          "name": "Status",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1838,
                          "src": "5367:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$1838",
                            "typeString": "enum AlastriaCredentialRegistry.Status"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5353:28:14"
                  },
                  "scope": 2211,
                  "src": "5231:300:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2209,
                    "nodeType": "Block",
                    "src": "5821:146:14",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Status_$1838",
                            "typeString": "enum AlastriaCredentialRegistry.Status"
                          },
                          "id": 2201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2199,
                            "name": "subjectStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2186,
                            "src": "5835:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$1838",
                              "typeString": "enum AlastriaCredentialRegistry.Status"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 2200,
                            "name": "issuerStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2188,
                            "src": "5852:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$1838",
                              "typeString": "enum AlastriaCredentialRegistry.Status"
                            }
                          },
                          "src": "5835:29:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2207,
                          "nodeType": "Block",
                          "src": "5917:44:14",
                          "statements": [
                            {
                              "expression": {
                                "id": 2205,
                                "name": "issuerStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2188,
                                "src": "5938:12:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Status_$1838",
                                  "typeString": "enum AlastriaCredentialRegistry.Status"
                                }
                              },
                              "functionReturnParameters": 2198,
                              "id": 2206,
                              "nodeType": "Return",
                              "src": "5931:19:14"
                            }
                          ]
                        },
                        "id": 2208,
                        "nodeType": "IfStatement",
                        "src": "5831:130:14",
                        "trueBody": {
                          "id": 2204,
                          "nodeType": "Block",
                          "src": "5866:45:14",
                          "statements": [
                            {
                              "expression": {
                                "id": 2202,
                                "name": "subjectStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2186,
                                "src": "5887:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Status_$1838",
                                  "typeString": "enum AlastriaCredentialRegistry.Status"
                                }
                              },
                              "functionReturnParameters": 2198,
                              "id": 2203,
                              "nodeType": "Return",
                              "src": "5880:20:14"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "5faf7d94",
                  "id": 2210,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 2191,
                          "name": "subjectStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2186,
                          "src": "5764:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$1838",
                            "typeString": "enum AlastriaCredentialRegistry.Status"
                          }
                        }
                      ],
                      "id": 2192,
                      "modifierName": {
                        "id": 2190,
                        "name": "validStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1921,
                        "src": "5752:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_enum$_Status_$1838_$",
                          "typeString": "modifier (enum AlastriaCredentialRegistry.Status)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5752:26:14"
                    },
                    {
                      "arguments": [
                        {
                          "id": 2194,
                          "name": "issuerStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2188,
                          "src": "5791:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$1838",
                            "typeString": "enum AlastriaCredentialRegistry.Status"
                          }
                        }
                      ],
                      "id": 2195,
                      "modifierName": {
                        "id": 2193,
                        "name": "validStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1921,
                        "src": "5779:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_enum$_Status_$1838_$",
                          "typeString": "modifier (enum AlastriaCredentialRegistry.Status)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5779:25:14"
                    }
                  ],
                  "name": "getCredentialStatus",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2189,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2186,
                        "mutability": "mutable",
                        "name": "subjectStatus",
                        "nodeType": "VariableDeclaration",
                        "scope": 2210,
                        "src": "5697:20:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$1838",
                          "typeString": "enum AlastriaCredentialRegistry.Status"
                        },
                        "typeName": {
                          "id": 2185,
                          "name": "Status",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1838,
                          "src": "5697:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$1838",
                            "typeString": "enum AlastriaCredentialRegistry.Status"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2188,
                        "mutability": "mutable",
                        "name": "issuerStatus",
                        "nodeType": "VariableDeclaration",
                        "scope": 2210,
                        "src": "5719:19:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$1838",
                          "typeString": "enum AlastriaCredentialRegistry.Status"
                        },
                        "typeName": {
                          "id": 2187,
                          "name": "Status",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1838,
                          "src": "5719:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$1838",
                            "typeString": "enum AlastriaCredentialRegistry.Status"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5696:43:14"
                  },
                  "returnParameters": {
                    "id": 2198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2197,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2210,
                        "src": "5814:6:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$1838",
                          "typeString": "enum AlastriaCredentialRegistry.Status"
                        },
                        "typeName": {
                          "id": 2196,
                          "name": "Status",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1838,
                          "src": "5814:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$1838",
                            "typeString": "enum AlastriaCredentialRegistry.Status"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5813:8:14"
                  },
                  "scope": 2211,
                  "src": "5668:299:14",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 2212,
              "src": "111:5858:14"
            }
          ],
          "src": "32:5938:14"
        },
        "id": 14
      },
      "contracts/registry/AlastriaPresentationRegistry.sol": {
        "ast": {
          "absolutePath": "contracts/registry/AlastriaPresentationRegistry.sol",
          "exportedSymbols": {
            "AlastriaPresentationRegistry": [
              2595
            ],
            "Initializable": [
              1194
            ]
          },
          "id": 2596,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2213,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".24",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:32:15"
            },
            {
              "absolutePath": "contracts/openzeppelin/Initializable.sol",
              "file": "../openzeppelin/Initializable.sol",
              "id": 2214,
              "nodeType": "ImportDirective",
              "scope": 2596,
              "sourceUnit": 1195,
              "src": "66:43:15",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2215,
                    "name": "Initializable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1194,
                    "src": "153:13:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Initializable_$1194",
                      "typeString": "contract Initializable"
                    }
                  },
                  "id": 2216,
                  "nodeType": "InheritanceSpecifier",
                  "src": "153:13:15"
                }
              ],
              "contractDependencies": [
                1194
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2595,
              "linearizedBaseContracts": [
                2595,
                1194
              ],
              "name": "AlastriaPresentationRegistry",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "54fd4d50",
                  "id": 2218,
                  "mutability": "mutable",
                  "name": "version",
                  "nodeType": "VariableDeclaration",
                  "scope": 2595,
                  "src": "737:18:15",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 2217,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "737:3:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "6104464f",
                  "id": 2220,
                  "mutability": "mutable",
                  "name": "previousPublishedVersion",
                  "nodeType": "VariableDeclaration",
                  "scope": 2595,
                  "src": "761:39:15",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "761:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "AlastriaPresentationRegistry.Status",
                  "id": 2225,
                  "members": [
                    {
                      "id": 2221,
                      "name": "Valid",
                      "nodeType": "EnumValue",
                      "src": "877:5:15"
                    },
                    {
                      "id": 2222,
                      "name": "Received",
                      "nodeType": "EnumValue",
                      "src": "884:8:15"
                    },
                    {
                      "id": 2223,
                      "name": "AskDeletion",
                      "nodeType": "EnumValue",
                      "src": "894:11:15"
                    },
                    {
                      "id": 2224,
                      "name": "DeletionConfirmation",
                      "nodeType": "EnumValue",
                      "src": "907:20:15"
                    }
                  ],
                  "name": "Status",
                  "nodeType": "EnumDefinition",
                  "src": "864:64:15"
                },
                {
                  "constant": true,
                  "id": 2229,
                  "mutability": "constant",
                  "name": "STATUS_FIRST",
                  "nodeType": "VariableDeclaration",
                  "scope": 2595,
                  "src": "933:43:15",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Status_$2225",
                    "typeString": "enum AlastriaPresentationRegistry.Status"
                  },
                  "typeName": {
                    "id": 2226,
                    "name": "Status",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2225,
                    "src": "933:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$2225",
                      "typeString": "enum AlastriaPresentationRegistry.Status"
                    }
                  },
                  "value": {
                    "expression": {
                      "id": 2227,
                      "name": "Status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2225,
                      "src": "964:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Status_$2225_$",
                        "typeString": "type(enum AlastriaPresentationRegistry.Status)"
                      }
                    },
                    "id": 2228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Valid",
                    "nodeType": "MemberAccess",
                    "src": "964:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$2225",
                      "typeString": "enum AlastriaPresentationRegistry.Status"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 2233,
                  "mutability": "constant",
                  "name": "STATUS_LAST",
                  "nodeType": "VariableDeclaration",
                  "scope": 2595,
                  "src": "982:57:15",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Status_$2225",
                    "typeString": "enum AlastriaPresentationRegistry.Status"
                  },
                  "typeName": {
                    "id": 2230,
                    "name": "Status",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2225,
                    "src": "982:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$2225",
                      "typeString": "enum AlastriaPresentationRegistry.Status"
                    }
                  },
                  "value": {
                    "expression": {
                      "id": 2231,
                      "name": "Status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2225,
                      "src": "1012:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Status_$2225_$",
                        "typeString": "type(enum AlastriaPresentationRegistry.Status)"
                      }
                    },
                    "id": 2232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "DeletionConfirmation",
                    "nodeType": "MemberAccess",
                    "src": "1012:27:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$2225",
                      "typeString": "enum AlastriaPresentationRegistry.Status"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 2236,
                  "mutability": "constant",
                  "name": "STATUS_SIZE",
                  "nodeType": "VariableDeclaration",
                  "scope": 2595,
                  "src": "1045:28:15",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 2234,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "1045:3:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": {
                    "hexValue": "34",
                    "id": 2235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1072:1:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4_by_1",
                      "typeString": "int_const 4"
                    },
                    "value": "4"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2245,
                  "mutability": "mutable",
                  "name": "subjectAllowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2595,
                  "src": "1079:99:15",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$4_storage",
                    "typeString": "bool[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2237,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1079:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2239,
                    "length": {
                      "id": 2238,
                      "name": "STATUS_SIZE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2236,
                      "src": "1084:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1079:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$4_storage_ptr",
                      "typeString": "bool[4]"
                    }
                  },
                  "value": {
                    "components": [
                      {
                        "hexValue": "74727565",
                        "id": 2240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1124:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 2241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1138:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 2242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1153:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 2243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1167:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "id": 2244,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1114:64:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$4_memory_ptr",
                      "typeString": "bool[4] memory"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2254,
                  "mutability": "mutable",
                  "name": "receiverAllowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2595,
                  "src": "1184:100:15",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$4_storage",
                    "typeString": "bool[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2246,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1184:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2248,
                    "length": {
                      "id": 2247,
                      "name": "STATUS_SIZE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2236,
                      "src": "1189:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1184:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$4_storage_ptr",
                      "typeString": "bool[4]"
                    }
                  },
                  "value": {
                    "components": [
                      {
                        "hexValue": "66616c7365",
                        "id": 2249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1230:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 2250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1245:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 2251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1259:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 2252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1274:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "id": 2253,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1220:64:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$4_memory_ptr",
                      "typeString": "bool[4] memory"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2257,
                  "mutability": "mutable",
                  "name": "backTransitionsAllowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2595,
                  "src": "1290:35:15",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2255,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1290:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "hexValue": "66616c7365",
                    "id": 2256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1320:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "visibility": "internal"
                },
                {
                  "canonicalName": "AlastriaPresentationRegistry.SubjectPresentation",
                  "id": 2264,
                  "members": [
                    {
                      "constant": false,
                      "id": 2259,
                      "mutability": "mutable",
                      "name": "exists",
                      "nodeType": "VariableDeclaration",
                      "scope": 2264,
                      "src": "1457:11:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2258,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1457:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2261,
                      "mutability": "mutable",
                      "name": "status",
                      "nodeType": "VariableDeclaration",
                      "scope": 2264,
                      "src": "1478:13:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$2225",
                        "typeString": "enum AlastriaPresentationRegistry.Status"
                      },
                      "typeName": {
                        "id": 2260,
                        "name": "Status",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2225,
                        "src": "1478:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$2225",
                          "typeString": "enum AlastriaPresentationRegistry.Status"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2263,
                      "mutability": "mutable",
                      "name": "URI",
                      "nodeType": "VariableDeclaration",
                      "scope": 2264,
                      "src": "1501:10:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2262,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1501:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "SubjectPresentation",
                  "nodeType": "StructDefinition",
                  "scope": 2595,
                  "src": "1420:98:15",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "1e54e325",
                  "id": 2270,
                  "mutability": "mutable",
                  "name": "subjectPresentationRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 2595,
                  "src": "1600:94:15",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_SubjectPresentation_$2264_storage_$_$",
                    "typeString": "mapping(address => mapping(bytes32 => struct AlastriaPresentationRegistry.SubjectPresentation))"
                  },
                  "typeName": {
                    "id": 2269,
                    "keyType": {
                      "id": 2265,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1608:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1600:59:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_SubjectPresentation_$2264_storage_$_$",
                      "typeString": "mapping(address => mapping(bytes32 => struct AlastriaPresentationRegistry.SubjectPresentation))"
                    },
                    "valueType": {
                      "id": 2268,
                      "keyType": {
                        "id": 2266,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1627:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1619:39:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_SubjectPresentation_$2264_storage_$",
                        "typeString": "mapping(bytes32 => struct AlastriaPresentationRegistry.SubjectPresentation)"
                      },
                      "valueType": {
                        "id": 2267,
                        "name": "SubjectPresentation",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2264,
                        "src": "1638:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SubjectPresentation_$2264_storage_ptr",
                          "typeString": "struct AlastriaPresentationRegistry.SubjectPresentation"
                        }
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "e4734593",
                  "id": 2275,
                  "mutability": "mutable",
                  "name": "subjectPresentationListRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 2595,
                  "src": "1700:68:15",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$",
                    "typeString": "mapping(address => bytes32[])"
                  },
                  "typeName": {
                    "id": 2274,
                    "keyType": {
                      "id": 2271,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1708:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1700:29:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$",
                      "typeString": "mapping(address => bytes32[])"
                    },
                    "valueType": {
                      "baseType": {
                        "id": 2272,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1719:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 2273,
                      "nodeType": "ArrayTypeName",
                      "src": "1719:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                        "typeString": "bytes32[]"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "AlastriaPresentationRegistry.ReceiverPresentation",
                  "id": 2280,
                  "members": [
                    {
                      "constant": false,
                      "id": 2277,
                      "mutability": "mutable",
                      "name": "exists",
                      "nodeType": "VariableDeclaration",
                      "scope": 2280,
                      "src": "1813:11:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2276,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1813:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2279,
                      "mutability": "mutable",
                      "name": "status",
                      "nodeType": "VariableDeclaration",
                      "scope": 2280,
                      "src": "1834:13:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$2225",
                        "typeString": "enum AlastriaPresentationRegistry.Status"
                      },
                      "typeName": {
                        "id": 2278,
                        "name": "Status",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2225,
                        "src": "1834:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$2225",
                          "typeString": "enum AlastriaPresentationRegistry.Status"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "ReceiverPresentation",
                  "nodeType": "StructDefinition",
                  "scope": 2595,
                  "src": "1775:79:15",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 2286,
                  "mutability": "mutable",
                  "name": "receiverPresentationRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 2595,
                  "src": "1962:97:15",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ReceiverPresentation_$2280_storage_$_$",
                    "typeString": "mapping(address => mapping(bytes32 => struct AlastriaPresentationRegistry.ReceiverPresentation))"
                  },
                  "typeName": {
                    "id": 2285,
                    "keyType": {
                      "id": 2281,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1970:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1962:60:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ReceiverPresentation_$2280_storage_$_$",
                      "typeString": "mapping(address => mapping(bytes32 => struct AlastriaPresentationRegistry.ReceiverPresentation))"
                    },
                    "valueType": {
                      "id": 2284,
                      "keyType": {
                        "id": 2282,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1989:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1981:40:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ReceiverPresentation_$2280_storage_$",
                        "typeString": "mapping(bytes32 => struct AlastriaPresentationRegistry.ReceiverPresentation)"
                      },
                      "valueType": {
                        "id": 2283,
                        "name": "ReceiverPresentation",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2280,
                        "src": "2000:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReceiverPresentation_$2280_storage_ptr",
                          "typeString": "struct AlastriaPresentationRegistry.ReceiverPresentation"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "id": 2292,
                  "name": "PresentationUpdated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2291,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2288,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "hash",
                        "nodeType": "VariableDeclaration",
                        "scope": 2292,
                        "src": "2147:12:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2287,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2147:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2290,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "status",
                        "nodeType": "VariableDeclaration",
                        "scope": 2292,
                        "src": "2161:13:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$2225",
                          "typeString": "enum AlastriaPresentationRegistry.Status"
                        },
                        "typeName": {
                          "id": 2289,
                          "name": "Status",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2225,
                          "src": "2161:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$2225",
                            "typeString": "enum AlastriaPresentationRegistry.Status"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2146:29:15"
                  },
                  "src": "2120:56:15"
                },
                {
                  "body": {
                    "id": 2306,
                    "nodeType": "Block",
                    "src": "2235:92:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2302,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2297,
                                "name": "addr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2294,
                                "src": "2290:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2300,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2306:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2299,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2298:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2298,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2298:7:15",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2301,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2298:10:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "2290:18:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2296,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2282:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 2303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2282:27:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2304,
                        "nodeType": "ExpressionStatement",
                        "src": "2282:27:15"
                      },
                      {
                        "id": 2305,
                        "nodeType": "PlaceholderStatement",
                        "src": "2319:1:15"
                      }
                    ]
                  },
                  "id": 2307,
                  "name": "validAddress",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 2295,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2294,
                        "mutability": "mutable",
                        "name": "addr",
                        "nodeType": "VariableDeclaration",
                        "scope": 2307,
                        "src": "2221:12:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2293,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2221:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2220:14:15"
                  },
                  "src": "2199:128:15",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2322,
                    "nodeType": "Block",
                    "src": "2370:141:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_Status_$2225",
                                  "typeString": "enum AlastriaPresentationRegistry.Status"
                                },
                                "id": 2314,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2312,
                                  "name": "status",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2309,
                                  "src": "2445:6:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Status_$2225",
                                    "typeString": "enum AlastriaPresentationRegistry.Status"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 2313,
                                  "name": "STATUS_FIRST",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2229,
                                  "src": "2455:12:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Status_$2225",
                                    "typeString": "enum AlastriaPresentationRegistry.Status"
                                  }
                                },
                                "src": "2445:22:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_Status_$2225",
                                  "typeString": "enum AlastriaPresentationRegistry.Status"
                                },
                                "id": 2317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2315,
                                  "name": "status",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2309,
                                  "src": "2471:6:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Status_$2225",
                                    "typeString": "enum AlastriaPresentationRegistry.Status"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 2316,
                                  "name": "STATUS_LAST",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2233,
                                  "src": "2481:11:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Status_$2225",
                                    "typeString": "enum AlastriaPresentationRegistry.Status"
                                  }
                                },
                                "src": "2471:21:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2445:47:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2311,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2436:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 2319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2436:57:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2320,
                        "nodeType": "ExpressionStatement",
                        "src": "2436:57:15"
                      },
                      {
                        "id": 2321,
                        "nodeType": "PlaceholderStatement",
                        "src": "2503:1:15"
                      }
                    ]
                  },
                  "id": 2323,
                  "name": "validStatus",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 2310,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2309,
                        "mutability": "mutable",
                        "name": "status",
                        "nodeType": "VariableDeclaration",
                        "scope": 2323,
                        "src": "2355:13:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$2225",
                          "typeString": "enum AlastriaPresentationRegistry.Status"
                        },
                        "typeName": {
                          "id": 2308,
                          "name": "Status",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2225,
                          "src": "2355:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$2225",
                            "typeString": "enum AlastriaPresentationRegistry.Status"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2354:15:15"
                  },
                  "src": "2333:178:15",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2338,
                    "nodeType": "Block",
                    "src": "2608:90:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 2332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2330,
                            "name": "version",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2218,
                            "src": "2618:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "34",
                            "id": 2331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2628:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "src": "2618:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 2333,
                        "nodeType": "ExpressionStatement",
                        "src": "2618:11:15"
                      },
                      {
                        "expression": {
                          "id": 2336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2334,
                            "name": "previousPublishedVersion",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2220,
                            "src": "2639:24:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2335,
                            "name": "_previousPublishedVersion",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2325,
                            "src": "2666:25:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2639:52:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2337,
                        "nodeType": "ExpressionStatement",
                        "src": "2639:52:15"
                      }
                    ]
                  },
                  "functionSelector": "c4d66de8",
                  "id": 2339,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2328,
                      "modifierName": {
                        "id": 2327,
                        "name": "initializer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1171,
                        "src": "2596:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2596:11:15"
                    }
                  ],
                  "name": "initialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2326,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2325,
                        "mutability": "mutable",
                        "name": "_previousPublishedVersion",
                        "nodeType": "VariableDeclaration",
                        "scope": 2339,
                        "src": "2554:33:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2324,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2554:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2553:35:15"
                  },
                  "returnParameters": {
                    "id": 2329,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2608:0:15"
                  },
                  "scope": 2595,
                  "src": "2534:164:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2379,
                    "nodeType": "Block",
                    "src": "2826:302:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "2844:72:15",
                              "subExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 2347,
                                      "name": "subjectPresentationRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2270,
                                      "src": "2845:27:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_SubjectPresentation_$2264_storage_$_$",
                                        "typeString": "mapping(address => mapping(bytes32 => struct AlastriaPresentationRegistry.SubjectPresentation storage ref))"
                                      }
                                    },
                                    "id": 2350,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 2348,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "2873:3:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2349,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "2873:10:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2845:39:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_SubjectPresentation_$2264_storage_$",
                                      "typeString": "mapping(bytes32 => struct AlastriaPresentationRegistry.SubjectPresentation storage ref)"
                                    }
                                  },
                                  "id": 2352,
                                  "indexExpression": {
                                    "id": 2351,
                                    "name": "subjectPresentationHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2341,
                                    "src": "2885:23:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2845:64:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SubjectPresentation_$2264_storage",
                                    "typeString": "struct AlastriaPresentationRegistry.SubjectPresentation storage ref"
                                  }
                                },
                                "id": 2353,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "exists",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2259,
                                "src": "2845:71:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2346,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2836:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 2355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2836:81:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2356,
                        "nodeType": "ExpressionStatement",
                        "src": "2836:81:15"
                      },
                      {
                        "expression": {
                          "id": 2369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2357,
                                "name": "subjectPresentationRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2270,
                                "src": "2927:27:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_SubjectPresentation_$2264_storage_$_$",
                                  "typeString": "mapping(address => mapping(bytes32 => struct AlastriaPresentationRegistry.SubjectPresentation storage ref))"
                                }
                              },
                              "id": 2361,
                              "indexExpression": {
                                "expression": {
                                  "id": 2358,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2955:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2359,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2955:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2927:39:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_SubjectPresentation_$2264_storage_$",
                                "typeString": "mapping(bytes32 => struct AlastriaPresentationRegistry.SubjectPresentation storage ref)"
                              }
                            },
                            "id": 2362,
                            "indexExpression": {
                              "id": 2360,
                              "name": "subjectPresentationHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2341,
                              "src": "2967:23:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2927:64:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SubjectPresentation_$2264_storage",
                              "typeString": "struct AlastriaPresentationRegistry.SubjectPresentation storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "74727565",
                                "id": 2364,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3014:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              {
                                "expression": {
                                  "id": 2365,
                                  "name": "Status",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2225,
                                  "src": "3020:6:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Status_$2225_$",
                                    "typeString": "type(enum AlastriaPresentationRegistry.Status)"
                                  }
                                },
                                "id": 2366,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Valid",
                                "nodeType": "MemberAccess",
                                "src": "3020:12:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Status_$2225",
                                  "typeString": "enum AlastriaPresentationRegistry.Status"
                                }
                              },
                              {
                                "id": 2367,
                                "name": "URI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2343,
                                "src": "3034:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_enum$_Status_$2225",
                                  "typeString": "enum AlastriaPresentationRegistry.Status"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 2363,
                              "name": "SubjectPresentation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2264,
                              "src": "2994:19:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_SubjectPresentation_$2264_storage_ptr_$",
                                "typeString": "type(struct AlastriaPresentationRegistry.SubjectPresentation storage pointer)"
                              }
                            },
                            "id": 2368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2994:44:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SubjectPresentation_$2264_memory_ptr",
                              "typeString": "struct AlastriaPresentationRegistry.SubjectPresentation memory"
                            }
                          },
                          "src": "2927:111:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SubjectPresentation_$2264_storage",
                            "typeString": "struct AlastriaPresentationRegistry.SubjectPresentation storage ref"
                          }
                        },
                        "id": 2370,
                        "nodeType": "ExpressionStatement",
                        "src": "2927:111:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2376,
                              "name": "subjectPresentationHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2341,
                              "src": "3097:23:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 2371,
                                "name": "subjectPresentationListRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2275,
                                "src": "3048:31:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$",
                                  "typeString": "mapping(address => bytes32[] storage ref)"
                                }
                              },
                              "id": 2374,
                              "indexExpression": {
                                "expression": {
                                  "id": 2372,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3080:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2373,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3080:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3048:43:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                "typeString": "bytes32[] storage ref"
                              }
                            },
                            "id": 2375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3048:48:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 2377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3048:73:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2378,
                        "nodeType": "ExpressionStatement",
                        "src": "3048:73:15"
                      }
                    ]
                  },
                  "functionSelector": "4e3a5de5",
                  "id": 2380,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addSubjectPresentation",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2344,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2341,
                        "mutability": "mutable",
                        "name": "subjectPresentationHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 2380,
                        "src": "2767:31:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2340,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2767:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2343,
                        "mutability": "mutable",
                        "name": "URI",
                        "nodeType": "VariableDeclaration",
                        "scope": 2380,
                        "src": "2800:17:15",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2342,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2800:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2766:52:15"
                  },
                  "returnParameters": {
                    "id": 2345,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2826:0:15"
                  },
                  "scope": 2595,
                  "src": "2735:393:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2434,
                    "nodeType": "Block",
                    "src": "3244:499:15",
                    "statements": [
                      {
                        "assignments": [
                          2391
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2391,
                            "mutability": "mutable",
                            "name": "value",
                            "nodeType": "VariableDeclaration",
                            "scope": 2434,
                            "src": "3254:33:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SubjectPresentation_$2264_storage_ptr",
                              "typeString": "struct AlastriaPresentationRegistry.SubjectPresentation"
                            },
                            "typeName": {
                              "id": 2390,
                              "name": "SubjectPresentation",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2264,
                              "src": "3254:19:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SubjectPresentation_$2264_storage_ptr",
                                "typeString": "struct AlastriaPresentationRegistry.SubjectPresentation"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2398,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2392,
                              "name": "subjectPresentationRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2270,
                              "src": "3290:27:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_SubjectPresentation_$2264_storage_$_$",
                                "typeString": "mapping(address => mapping(bytes32 => struct AlastriaPresentationRegistry.SubjectPresentation storage ref))"
                              }
                            },
                            "id": 2395,
                            "indexExpression": {
                              "expression": {
                                "id": 2393,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3318:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3318:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3290:39:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_SubjectPresentation_$2264_storage_$",
                              "typeString": "mapping(bytes32 => struct AlastriaPresentationRegistry.SubjectPresentation storage ref)"
                            }
                          },
                          "id": 2397,
                          "indexExpression": {
                            "id": 2396,
                            "name": "subjectPresentationHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2382,
                            "src": "3330:23:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3290:64:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SubjectPresentation_$2264_storage",
                            "typeString": "struct AlastriaPresentationRegistry.SubjectPresentation storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3254:100:15"
                      },
                      {
                        "condition": {
                          "id": 2401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3436:13:15",
                          "subExpression": {
                            "expression": {
                              "id": 2399,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2391,
                              "src": "3437:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SubjectPresentation_$2264_storage_ptr",
                                "typeString": "struct AlastriaPresentationRegistry.SubjectPresentation storage pointer"
                              }
                            },
                            "id": 2400,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exists",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2259,
                            "src": "3437:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2404,
                        "nodeType": "IfStatement",
                        "src": "3432:50:15",
                        "trueBody": {
                          "id": 2403,
                          "nodeType": "Block",
                          "src": "3451:31:15",
                          "statements": [
                            {
                              "functionReturnParameters": 2389,
                              "id": 2402,
                              "nodeType": "Return",
                              "src": "3465:7:15"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "3495:23:15",
                            "subExpression": {
                              "id": 2405,
                              "name": "backTransitionsAllowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2257,
                              "src": "3496:22:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_Status_$2225",
                              "typeString": "enum AlastriaPresentationRegistry.Status"
                            },
                            "id": 2410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2407,
                              "name": "status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2384,
                              "src": "3522:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Status_$2225",
                                "typeString": "enum AlastriaPresentationRegistry.Status"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "expression": {
                                "id": 2408,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2391,
                                "src": "3532:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SubjectPresentation_$2264_storage_ptr",
                                  "typeString": "struct AlastriaPresentationRegistry.SubjectPresentation storage pointer"
                                }
                              },
                              "id": 2409,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "status",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2261,
                              "src": "3532:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Status_$2225",
                                "typeString": "enum AlastriaPresentationRegistry.Status"
                              }
                            },
                            "src": "3522:22:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3495:49:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2414,
                        "nodeType": "IfStatement",
                        "src": "3491:86:15",
                        "trueBody": {
                          "id": 2413,
                          "nodeType": "Block",
                          "src": "3546:31:15",
                          "statements": [
                            {
                              "functionReturnParameters": 2389,
                              "id": 2412,
                              "nodeType": "Return",
                              "src": "3560:7:15"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "baseExpression": {
                            "id": 2415,
                            "name": "subjectAllowed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2245,
                            "src": "3590:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bool_$4_storage",
                              "typeString": "bool[4] storage ref"
                            }
                          },
                          "id": 2420,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 2418,
                                "name": "status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2384,
                                "src": "3610:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Status_$2225",
                                  "typeString": "enum AlastriaPresentationRegistry.Status"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_Status_$2225",
                                  "typeString": "enum AlastriaPresentationRegistry.Status"
                                }
                              ],
                              "id": 2417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3605:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2416,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "3605:4:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3605:12:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3590:28:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2433,
                        "nodeType": "IfStatement",
                        "src": "3586:151:15",
                        "trueBody": {
                          "id": 2432,
                          "nodeType": "Block",
                          "src": "3620:117:15",
                          "statements": [
                            {
                              "expression": {
                                "id": 2425,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 2421,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2391,
                                    "src": "3634:5:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SubjectPresentation_$2264_storage_ptr",
                                      "typeString": "struct AlastriaPresentationRegistry.SubjectPresentation storage pointer"
                                    }
                                  },
                                  "id": 2423,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2261,
                                  "src": "3634:12:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Status_$2225",
                                    "typeString": "enum AlastriaPresentationRegistry.Status"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2424,
                                  "name": "status",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2384,
                                  "src": "3649:6:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Status_$2225",
                                    "typeString": "enum AlastriaPresentationRegistry.Status"
                                  }
                                },
                                "src": "3634:21:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Status_$2225",
                                  "typeString": "enum AlastriaPresentationRegistry.Status"
                                }
                              },
                              "id": 2426,
                              "nodeType": "ExpressionStatement",
                              "src": "3634:21:15"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 2428,
                                    "name": "subjectPresentationHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2382,
                                    "src": "3694:23:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 2429,
                                    "name": "status",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2384,
                                    "src": "3719:6:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Status_$2225",
                                      "typeString": "enum AlastriaPresentationRegistry.Status"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_Status_$2225",
                                      "typeString": "enum AlastriaPresentationRegistry.Status"
                                    }
                                  ],
                                  "id": 2427,
                                  "name": "PresentationUpdated",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2292,
                                  "src": "3674:19:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_enum$_Status_$2225_$returns$__$",
                                    "typeString": "function (bytes32,enum AlastriaPresentationRegistry.Status)"
                                  }
                                },
                                "id": 2430,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3674:52:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2431,
                              "nodeType": "EmitStatement",
                              "src": "3669:57:15"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "e64af938",
                  "id": 2435,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 2387,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2384,
                          "src": "3236:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$2225",
                            "typeString": "enum AlastriaPresentationRegistry.Status"
                          }
                        }
                      ],
                      "id": 2388,
                      "modifierName": {
                        "id": 2386,
                        "name": "validStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2323,
                        "src": "3224:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_enum$_Status_$2225_$",
                          "typeString": "modifier (enum AlastriaPresentationRegistry.Status)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3224:19:15"
                    }
                  ],
                  "name": "updateSubjectPresentation",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2385,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2382,
                        "mutability": "mutable",
                        "name": "subjectPresentationHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 2435,
                        "src": "3169:31:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2381,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3169:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2384,
                        "mutability": "mutable",
                        "name": "status",
                        "nodeType": "VariableDeclaration",
                        "scope": 2435,
                        "src": "3202:13:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$2225",
                          "typeString": "enum AlastriaPresentationRegistry.Status"
                        },
                        "typeName": {
                          "id": 2383,
                          "name": "Status",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2225,
                          "src": "3202:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$2225",
                            "typeString": "enum AlastriaPresentationRegistry.Status"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3168:48:15"
                  },
                  "returnParameters": {
                    "id": 2389,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3244:0:15"
                  },
                  "scope": 2595,
                  "src": "3134:609:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2463,
                    "nodeType": "Block",
                    "src": "4034:159:15",
                    "statements": [
                      {
                        "assignments": [
                          2450
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2450,
                            "mutability": "mutable",
                            "name": "value",
                            "nodeType": "VariableDeclaration",
                            "scope": 2463,
                            "src": "4044:33:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SubjectPresentation_$2264_storage_ptr",
                              "typeString": "struct AlastriaPresentationRegistry.SubjectPresentation"
                            },
                            "typeName": {
                              "id": 2449,
                              "name": "SubjectPresentation",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2264,
                              "src": "4044:19:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SubjectPresentation_$2264_storage_ptr",
                                "typeString": "struct AlastriaPresentationRegistry.SubjectPresentation"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2456,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2451,
                              "name": "subjectPresentationRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2270,
                              "src": "4080:27:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_SubjectPresentation_$2264_storage_$_$",
                                "typeString": "mapping(address => mapping(bytes32 => struct AlastriaPresentationRegistry.SubjectPresentation storage ref))"
                              }
                            },
                            "id": 2453,
                            "indexExpression": {
                              "id": 2452,
                              "name": "subject",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2437,
                              "src": "4108:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4080:36:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_SubjectPresentation_$2264_storage_$",
                              "typeString": "mapping(bytes32 => struct AlastriaPresentationRegistry.SubjectPresentation storage ref)"
                            }
                          },
                          "id": 2455,
                          "indexExpression": {
                            "id": 2454,
                            "name": "subjectPresentationHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2439,
                            "src": "4117:23:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4080:61:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SubjectPresentation_$2264_storage",
                            "typeString": "struct AlastriaPresentationRegistry.SubjectPresentation storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4044:97:15"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "expression": {
                                "id": 2457,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2450,
                                "src": "4159:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SubjectPresentation_$2264_storage_ptr",
                                  "typeString": "struct AlastriaPresentationRegistry.SubjectPresentation storage pointer"
                                }
                              },
                              "id": 2458,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "exists",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2259,
                              "src": "4159:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 2459,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2450,
                                "src": "4173:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SubjectPresentation_$2264_storage_ptr",
                                  "typeString": "struct AlastriaPresentationRegistry.SubjectPresentation storage pointer"
                                }
                              },
                              "id": 2460,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "status",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2261,
                              "src": "4173:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Status_$2225",
                                "typeString": "enum AlastriaPresentationRegistry.Status"
                              }
                            }
                          ],
                          "id": 2461,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4158:28:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_enum$_Status_$2225_$",
                            "typeString": "tuple(bool,enum AlastriaPresentationRegistry.Status)"
                          }
                        },
                        "functionReturnParameters": 2448,
                        "id": 2462,
                        "nodeType": "Return",
                        "src": "4151:35:15"
                      }
                    ]
                  },
                  "functionSelector": "5205080f",
                  "id": 2464,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 2442,
                          "name": "subject",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2437,
                          "src": "3988:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 2443,
                      "modifierName": {
                        "id": 2441,
                        "name": "validAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2307,
                        "src": "3975:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_address_$",
                          "typeString": "modifier (address)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3975:21:15"
                    }
                  ],
                  "name": "getSubjectPresentationStatus",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2440,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2437,
                        "mutability": "mutable",
                        "name": "subject",
                        "nodeType": "VariableDeclaration",
                        "scope": 2464,
                        "src": "3913:15:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2436,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3913:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2439,
                        "mutability": "mutable",
                        "name": "subjectPresentationHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 2464,
                        "src": "3930:31:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2438,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3930:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3912:50:15"
                  },
                  "returnParameters": {
                    "id": 2448,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2445,
                        "mutability": "mutable",
                        "name": "exists",
                        "nodeType": "VariableDeclaration",
                        "scope": 2464,
                        "src": "4006:11:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2444,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4006:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2447,
                        "mutability": "mutable",
                        "name": "status",
                        "nodeType": "VariableDeclaration",
                        "scope": 2464,
                        "src": "4019:13:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$2225",
                          "typeString": "enum AlastriaPresentationRegistry.Status"
                        },
                        "typeName": {
                          "id": 2446,
                          "name": "Status",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2225,
                          "src": "4019:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$2225",
                            "typeString": "enum AlastriaPresentationRegistry.Status"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4005:28:15"
                  },
                  "scope": 2595,
                  "src": "3875:318:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2483,
                    "nodeType": "Block",
                    "src": "4297:115:15",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2474,
                                  "name": "subjectPresentationListRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2275,
                                  "src": "4315:31:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$",
                                    "typeString": "mapping(address => bytes32[] storage ref)"
                                  }
                                },
                                "id": 2476,
                                "indexExpression": {
                                  "id": 2475,
                                  "name": "subject",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2466,
                                  "src": "4347:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4315:40:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                  "typeString": "bytes32[] storage ref"
                                }
                              },
                              "id": 2477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "4315:47:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 2478,
                                "name": "subjectPresentationListRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2275,
                                "src": "4364:31:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$",
                                  "typeString": "mapping(address => bytes32[] storage ref)"
                                }
                              },
                              "id": 2480,
                              "indexExpression": {
                                "id": 2479,
                                "name": "subject",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2466,
                                "src": "4396:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4364:40:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                "typeString": "bytes32[] storage ref"
                              }
                            }
                          ],
                          "id": 2481,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4314:91:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                            "typeString": "tuple(uint256,bytes32[] storage ref)"
                          }
                        },
                        "functionReturnParameters": 2473,
                        "id": 2482,
                        "nodeType": "Return",
                        "src": "4307:98:15"
                      }
                    ]
                  },
                  "functionSelector": "c00dcd0e",
                  "id": 2484,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSubjectPresentationList",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2467,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2466,
                        "mutability": "mutable",
                        "name": "subject",
                        "nodeType": "VariableDeclaration",
                        "scope": 2484,
                        "src": "4235:15:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2465,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4235:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4234:17:15"
                  },
                  "returnParameters": {
                    "id": 2473,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2469,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2484,
                        "src": "4273:4:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2468,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4273:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2472,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2484,
                        "src": "4279:16:15",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2470,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "4279:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 2471,
                          "nodeType": "ArrayTypeName",
                          "src": "4279:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4272:24:15"
                  },
                  "scope": 2595,
                  "src": "4199:213:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2538,
                    "nodeType": "Block",
                    "src": "4562:479:15",
                    "statements": [
                      {
                        "assignments": [
                          2495
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2495,
                            "mutability": "mutable",
                            "name": "value",
                            "nodeType": "VariableDeclaration",
                            "scope": 2538,
                            "src": "4572:34:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ReceiverPresentation_$2280_storage_ptr",
                              "typeString": "struct AlastriaPresentationRegistry.ReceiverPresentation"
                            },
                            "typeName": {
                              "id": 2494,
                              "name": "ReceiverPresentation",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2280,
                              "src": "4572:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ReceiverPresentation_$2280_storage_ptr",
                                "typeString": "struct AlastriaPresentationRegistry.ReceiverPresentation"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2502,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2496,
                              "name": "receiverPresentationRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2286,
                              "src": "4609:28:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ReceiverPresentation_$2280_storage_$_$",
                                "typeString": "mapping(address => mapping(bytes32 => struct AlastriaPresentationRegistry.ReceiverPresentation storage ref))"
                              }
                            },
                            "id": 2499,
                            "indexExpression": {
                              "expression": {
                                "id": 2497,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4638:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4638:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4609:40:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ReceiverPresentation_$2280_storage_$",
                              "typeString": "mapping(bytes32 => struct AlastriaPresentationRegistry.ReceiverPresentation storage ref)"
                            }
                          },
                          "id": 2501,
                          "indexExpression": {
                            "id": 2500,
                            "name": "receiverPresentationHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2486,
                            "src": "4650:24:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4609:66:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReceiverPresentation_$2280_storage",
                            "typeString": "struct AlastriaPresentationRegistry.ReceiverPresentation storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4572:103:15"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "4758:23:15",
                            "subExpression": {
                              "id": 2503,
                              "name": "backTransitionsAllowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2257,
                              "src": "4759:22:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_Status_$2225",
                              "typeString": "enum AlastriaPresentationRegistry.Status"
                            },
                            "id": 2508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2505,
                              "name": "status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2488,
                              "src": "4785:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Status_$2225",
                                "typeString": "enum AlastriaPresentationRegistry.Status"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "expression": {
                                "id": 2506,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2495,
                                "src": "4795:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ReceiverPresentation_$2280_storage_ptr",
                                  "typeString": "struct AlastriaPresentationRegistry.ReceiverPresentation storage pointer"
                                }
                              },
                              "id": 2507,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "status",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2279,
                              "src": "4795:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Status_$2225",
                                "typeString": "enum AlastriaPresentationRegistry.Status"
                              }
                            },
                            "src": "4785:22:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4758:49:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2512,
                        "nodeType": "IfStatement",
                        "src": "4754:86:15",
                        "trueBody": {
                          "id": 2511,
                          "nodeType": "Block",
                          "src": "4809:31:15",
                          "statements": [
                            {
                              "functionReturnParameters": 2493,
                              "id": 2510,
                              "nodeType": "Return",
                              "src": "4823:7:15"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "baseExpression": {
                            "id": 2513,
                            "name": "receiverAllowed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2254,
                            "src": "4853:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bool_$4_storage",
                              "typeString": "bool[4] storage ref"
                            }
                          },
                          "id": 2518,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 2516,
                                "name": "status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2488,
                                "src": "4874:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Status_$2225",
                                  "typeString": "enum AlastriaPresentationRegistry.Status"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_Status_$2225",
                                  "typeString": "enum AlastriaPresentationRegistry.Status"
                                }
                              ],
                              "id": 2515,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4869:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2514,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "4869:4:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2517,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4869:12:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4853:29:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2537,
                        "nodeType": "IfStatement",
                        "src": "4849:186:15",
                        "trueBody": {
                          "id": 2536,
                          "nodeType": "Block",
                          "src": "4884:151:15",
                          "statements": [
                            {
                              "expression": {
                                "id": 2523,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 2519,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2495,
                                    "src": "4898:5:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ReceiverPresentation_$2280_storage_ptr",
                                      "typeString": "struct AlastriaPresentationRegistry.ReceiverPresentation storage pointer"
                                    }
                                  },
                                  "id": 2521,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "exists",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2277,
                                  "src": "4898:12:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 2522,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4913:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "4898:19:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2524,
                              "nodeType": "ExpressionStatement",
                              "src": "4898:19:15"
                            },
                            {
                              "expression": {
                                "id": 2529,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 2525,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2495,
                                    "src": "4931:5:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ReceiverPresentation_$2280_storage_ptr",
                                      "typeString": "struct AlastriaPresentationRegistry.ReceiverPresentation storage pointer"
                                    }
                                  },
                                  "id": 2527,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2279,
                                  "src": "4931:12:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Status_$2225",
                                    "typeString": "enum AlastriaPresentationRegistry.Status"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2528,
                                  "name": "status",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2488,
                                  "src": "4946:6:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Status_$2225",
                                    "typeString": "enum AlastriaPresentationRegistry.Status"
                                  }
                                },
                                "src": "4931:21:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Status_$2225",
                                  "typeString": "enum AlastriaPresentationRegistry.Status"
                                }
                              },
                              "id": 2530,
                              "nodeType": "ExpressionStatement",
                              "src": "4931:21:15"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 2532,
                                    "name": "receiverPresentationHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2486,
                                    "src": "4991:24:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 2533,
                                    "name": "status",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2488,
                                    "src": "5017:6:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Status_$2225",
                                      "typeString": "enum AlastriaPresentationRegistry.Status"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_Status_$2225",
                                      "typeString": "enum AlastriaPresentationRegistry.Status"
                                    }
                                  ],
                                  "id": 2531,
                                  "name": "PresentationUpdated",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2292,
                                  "src": "4971:19:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_enum$_Status_$2225_$returns$__$",
                                    "typeString": "function (bytes32,enum AlastriaPresentationRegistry.Status)"
                                  }
                                },
                                "id": 2534,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4971:53:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2535,
                              "nodeType": "EmitStatement",
                              "src": "4966:58:15"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "3000dc39",
                  "id": 2539,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 2491,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2488,
                          "src": "4554:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$2225",
                            "typeString": "enum AlastriaPresentationRegistry.Status"
                          }
                        }
                      ],
                      "id": 2492,
                      "modifierName": {
                        "id": 2490,
                        "name": "validStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2323,
                        "src": "4542:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_enum$_Status_$2225_$",
                          "typeString": "modifier (enum AlastriaPresentationRegistry.Status)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4542:19:15"
                    }
                  ],
                  "name": "updateReceiverPresentation",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2489,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2486,
                        "mutability": "mutable",
                        "name": "receiverPresentationHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 2539,
                        "src": "4486:32:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2485,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4486:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2488,
                        "mutability": "mutable",
                        "name": "status",
                        "nodeType": "VariableDeclaration",
                        "scope": 2539,
                        "src": "4520:13:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$2225",
                          "typeString": "enum AlastriaPresentationRegistry.Status"
                        },
                        "typeName": {
                          "id": 2487,
                          "name": "Status",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2225,
                          "src": "4520:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$2225",
                            "typeString": "enum AlastriaPresentationRegistry.Status"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4485:49:15"
                  },
                  "returnParameters": {
                    "id": 2493,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4562:0:15"
                  },
                  "scope": 2595,
                  "src": "4450:591:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2567,
                    "nodeType": "Block",
                    "src": "5336:163:15",
                    "statements": [
                      {
                        "assignments": [
                          2554
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2554,
                            "mutability": "mutable",
                            "name": "value",
                            "nodeType": "VariableDeclaration",
                            "scope": 2567,
                            "src": "5346:34:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ReceiverPresentation_$2280_storage_ptr",
                              "typeString": "struct AlastriaPresentationRegistry.ReceiverPresentation"
                            },
                            "typeName": {
                              "id": 2553,
                              "name": "ReceiverPresentation",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2280,
                              "src": "5346:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ReceiverPresentation_$2280_storage_ptr",
                                "typeString": "struct AlastriaPresentationRegistry.ReceiverPresentation"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2560,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2555,
                              "name": "receiverPresentationRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2286,
                              "src": "5383:28:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ReceiverPresentation_$2280_storage_$_$",
                                "typeString": "mapping(address => mapping(bytes32 => struct AlastriaPresentationRegistry.ReceiverPresentation storage ref))"
                              }
                            },
                            "id": 2557,
                            "indexExpression": {
                              "id": 2556,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2541,
                              "src": "5412:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5383:38:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ReceiverPresentation_$2280_storage_$",
                              "typeString": "mapping(bytes32 => struct AlastriaPresentationRegistry.ReceiverPresentation storage ref)"
                            }
                          },
                          "id": 2559,
                          "indexExpression": {
                            "id": 2558,
                            "name": "receiverPresentationHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2543,
                            "src": "5422:24:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5383:64:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReceiverPresentation_$2280_storage",
                            "typeString": "struct AlastriaPresentationRegistry.ReceiverPresentation storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5346:101:15"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "expression": {
                                "id": 2561,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2554,
                                "src": "5465:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ReceiverPresentation_$2280_storage_ptr",
                                  "typeString": "struct AlastriaPresentationRegistry.ReceiverPresentation storage pointer"
                                }
                              },
                              "id": 2562,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "exists",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2277,
                              "src": "5465:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 2563,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2554,
                                "src": "5479:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ReceiverPresentation_$2280_storage_ptr",
                                  "typeString": "struct AlastriaPresentationRegistry.ReceiverPresentation storage pointer"
                                }
                              },
                              "id": 2564,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "status",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2279,
                              "src": "5479:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Status_$2225",
                                "typeString": "enum AlastriaPresentationRegistry.Status"
                              }
                            }
                          ],
                          "id": 2565,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5464:28:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_enum$_Status_$2225_$",
                            "typeString": "tuple(bool,enum AlastriaPresentationRegistry.Status)"
                          }
                        },
                        "functionReturnParameters": 2552,
                        "id": 2566,
                        "nodeType": "Return",
                        "src": "5457:35:15"
                      }
                    ]
                  },
                  "functionSelector": "9373014a",
                  "id": 2568,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 2546,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2541,
                          "src": "5289:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 2547,
                      "modifierName": {
                        "id": 2545,
                        "name": "validAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2307,
                        "src": "5276:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_address_$",
                          "typeString": "modifier (address)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5276:22:15"
                    }
                  ],
                  "name": "getReceiverPresentationStatus",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2544,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2541,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 2568,
                        "src": "5212:16:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2540,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5212:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2543,
                        "mutability": "mutable",
                        "name": "receiverPresentationHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 2568,
                        "src": "5230:32:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2542,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5230:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5211:52:15"
                  },
                  "returnParameters": {
                    "id": 2552,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2549,
                        "mutability": "mutable",
                        "name": "exists",
                        "nodeType": "VariableDeclaration",
                        "scope": 2568,
                        "src": "5308:11:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2548,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5308:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2551,
                        "mutability": "mutable",
                        "name": "status",
                        "nodeType": "VariableDeclaration",
                        "scope": 2568,
                        "src": "5321:13:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$2225",
                          "typeString": "enum AlastriaPresentationRegistry.Status"
                        },
                        "typeName": {
                          "id": 2550,
                          "name": "Status",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2225,
                          "src": "5321:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$2225",
                            "typeString": "enum AlastriaPresentationRegistry.Status"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5307:28:15"
                  },
                  "scope": 2595,
                  "src": "5173:326:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2593,
                    "nodeType": "Block",
                    "src": "5798:150:15",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Status_$2225",
                            "typeString": "enum AlastriaPresentationRegistry.Status"
                          },
                          "id": 2585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2583,
                            "name": "subjectStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2570,
                            "src": "5812:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$2225",
                              "typeString": "enum AlastriaPresentationRegistry.Status"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 2584,
                            "name": "receiverStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2572,
                            "src": "5829:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$2225",
                              "typeString": "enum AlastriaPresentationRegistry.Status"
                            }
                          },
                          "src": "5812:31:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2591,
                          "nodeType": "Block",
                          "src": "5896:46:15",
                          "statements": [
                            {
                              "expression": {
                                "id": 2589,
                                "name": "receiverStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2572,
                                "src": "5917:14:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Status_$2225",
                                  "typeString": "enum AlastriaPresentationRegistry.Status"
                                }
                              },
                              "functionReturnParameters": 2582,
                              "id": 2590,
                              "nodeType": "Return",
                              "src": "5910:21:15"
                            }
                          ]
                        },
                        "id": 2592,
                        "nodeType": "IfStatement",
                        "src": "5808:134:15",
                        "trueBody": {
                          "id": 2588,
                          "nodeType": "Block",
                          "src": "5845:45:15",
                          "statements": [
                            {
                              "expression": {
                                "id": 2586,
                                "name": "subjectStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2570,
                                "src": "5866:13:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Status_$2225",
                                  "typeString": "enum AlastriaPresentationRegistry.Status"
                                }
                              },
                              "functionReturnParameters": 2582,
                              "id": 2587,
                              "nodeType": "Return",
                              "src": "5859:20:15"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "034f8408",
                  "id": 2594,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 2575,
                          "name": "subjectStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2570,
                          "src": "5739:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$2225",
                            "typeString": "enum AlastriaPresentationRegistry.Status"
                          }
                        }
                      ],
                      "id": 2576,
                      "modifierName": {
                        "id": 2574,
                        "name": "validStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2323,
                        "src": "5727:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_enum$_Status_$2225_$",
                          "typeString": "modifier (enum AlastriaPresentationRegistry.Status)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5727:26:15"
                    },
                    {
                      "arguments": [
                        {
                          "id": 2578,
                          "name": "receiverStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2572,
                          "src": "5766:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$2225",
                            "typeString": "enum AlastriaPresentationRegistry.Status"
                          }
                        }
                      ],
                      "id": 2579,
                      "modifierName": {
                        "id": 2577,
                        "name": "validStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2323,
                        "src": "5754:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_enum$_Status_$2225_$",
                          "typeString": "modifier (enum AlastriaPresentationRegistry.Status)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5754:27:15"
                    }
                  ],
                  "name": "getPresentationStatus",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2573,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2570,
                        "mutability": "mutable",
                        "name": "subjectStatus",
                        "nodeType": "VariableDeclaration",
                        "scope": 2594,
                        "src": "5670:20:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$2225",
                          "typeString": "enum AlastriaPresentationRegistry.Status"
                        },
                        "typeName": {
                          "id": 2569,
                          "name": "Status",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2225,
                          "src": "5670:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$2225",
                            "typeString": "enum AlastriaPresentationRegistry.Status"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2572,
                        "mutability": "mutable",
                        "name": "receiverStatus",
                        "nodeType": "VariableDeclaration",
                        "scope": 2594,
                        "src": "5692:21:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$2225",
                          "typeString": "enum AlastriaPresentationRegistry.Status"
                        },
                        "typeName": {
                          "id": 2571,
                          "name": "Status",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2225,
                          "src": "5692:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$2225",
                            "typeString": "enum AlastriaPresentationRegistry.Status"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5669:45:15"
                  },
                  "returnParameters": {
                    "id": 2582,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2581,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2594,
                        "src": "5791:6:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$2225",
                          "typeString": "enum AlastriaPresentationRegistry.Status"
                        },
                        "typeName": {
                          "id": 2580,
                          "name": "Status",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2225,
                          "src": "5791:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$2225",
                            "typeString": "enum AlastriaPresentationRegistry.Status"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5790:8:15"
                  },
                  "scope": 2595,
                  "src": "5639:309:15",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 2596,
              "src": "112:5838:15"
            }
          ],
          "src": "32:5918:15"
        },
        "id": 15
      },
      "contracts/registry/AlastriaPublicKeyRegistry.sol": {
        "ast": {
          "absolutePath": "contracts/registry/AlastriaPublicKeyRegistry.sol",
          "exportedSymbols": {
            "AlastriaPublicKeyRegistry": [
              2885
            ],
            "Initializable": [
              1194
            ]
          },
          "id": 2886,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2597,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".24",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:32:16"
            },
            {
              "absolutePath": "contracts/openzeppelin/Initializable.sol",
              "file": "../openzeppelin/Initializable.sol",
              "id": 2598,
              "nodeType": "ImportDirective",
              "scope": 2886,
              "sourceUnit": 1195,
              "src": "66:43:16",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2599,
                    "name": "Initializable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1194,
                    "src": "150:13:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Initializable_$1194",
                      "typeString": "contract Initializable"
                    }
                  },
                  "id": 2600,
                  "nodeType": "InheritanceSpecifier",
                  "src": "150:13:16"
                }
              ],
              "contractDependencies": [
                1194
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2885,
              "linearizedBaseContracts": [
                2885,
                1194
              ],
              "name": "AlastriaPublicKeyRegistry",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "54fd4d50",
                  "id": 2602,
                  "mutability": "mutable",
                  "name": "version",
                  "nodeType": "VariableDeclaration",
                  "scope": 2885,
                  "src": "363:18:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 2601,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "363:3:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "6104464f",
                  "id": 2604,
                  "mutability": "mutable",
                  "name": "previousPublishedVersion",
                  "nodeType": "VariableDeclaration",
                  "scope": 2885,
                  "src": "387:39:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2603,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "387:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "AlastriaPublicKeyRegistry.Status",
                  "id": 2607,
                  "members": [
                    {
                      "id": 2605,
                      "name": "Valid",
                      "nodeType": "EnumValue",
                      "src": "532:5:16"
                    },
                    {
                      "id": 2606,
                      "name": "DeletedBySubject",
                      "nodeType": "EnumValue",
                      "src": "539:16:16"
                    }
                  ],
                  "name": "Status",
                  "nodeType": "EnumDefinition",
                  "src": "519:37:16"
                },
                {
                  "canonicalName": "AlastriaPublicKeyRegistry.PublicKey",
                  "id": 2616,
                  "members": [
                    {
                      "constant": false,
                      "id": 2609,
                      "mutability": "mutable",
                      "name": "exists",
                      "nodeType": "VariableDeclaration",
                      "scope": 2616,
                      "src": "588:11:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2608,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "588:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2611,
                      "mutability": "mutable",
                      "name": "status",
                      "nodeType": "VariableDeclaration",
                      "scope": 2616,
                      "src": "609:13:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$2607",
                        "typeString": "enum AlastriaPublicKeyRegistry.Status"
                      },
                      "typeName": {
                        "id": 2610,
                        "name": "Status",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2607,
                        "src": "609:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$2607",
                          "typeString": "enum AlastriaPublicKeyRegistry.Status"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2613,
                      "mutability": "mutable",
                      "name": "startDate",
                      "nodeType": "VariableDeclaration",
                      "scope": 2616,
                      "src": "705:14:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2612,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "705:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2615,
                      "mutability": "mutable",
                      "name": "endDate",
                      "nodeType": "VariableDeclaration",
                      "scope": 2616,
                      "src": "729:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2614,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "729:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "PublicKey",
                  "nodeType": "StructDefinition",
                  "scope": 2885,
                  "src": "561:187:16",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 2622,
                  "mutability": "mutable",
                  "name": "publicKeyRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 2885,
                  "src": "790:75:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_PublicKey_$2616_storage_$_$",
                    "typeString": "mapping(address => mapping(bytes32 => struct AlastriaPublicKeyRegistry.PublicKey))"
                  },
                  "typeName": {
                    "id": 2621,
                    "keyType": {
                      "id": 2617,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "798:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "790:49:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_PublicKey_$2616_storage_$_$",
                      "typeString": "mapping(address => mapping(bytes32 => struct AlastriaPublicKeyRegistry.PublicKey))"
                    },
                    "valueType": {
                      "id": 2620,
                      "keyType": {
                        "id": 2618,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "817:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "809:29:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_PublicKey_$2616_storage_$",
                        "typeString": "mapping(bytes32 => struct AlastriaPublicKeyRegistry.PublicKey)"
                      },
                      "valueType": {
                        "id": 2619,
                        "name": "PublicKey",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2616,
                        "src": "828:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PublicKey_$2616_storage_ptr",
                          "typeString": "struct AlastriaPublicKeyRegistry.PublicKey"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "c000ceee",
                  "id": 2627,
                  "mutability": "mutable",
                  "name": "publicKeyList",
                  "nodeType": "VariableDeclaration",
                  "scope": 2885,
                  "src": "907:49:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
                    "typeString": "mapping(address => string[])"
                  },
                  "typeName": {
                    "id": 2626,
                    "keyType": {
                      "id": 2623,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "915:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "907:28:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
                      "typeString": "mapping(address => string[])"
                    },
                    "valueType": {
                      "baseType": {
                        "id": 2624,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "926:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "id": 2625,
                      "nodeType": "ArrayTypeName",
                      "src": "926:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                        "typeString": "string[]"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 2631,
                  "name": "PublicKeyDeleted",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2630,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2629,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "publicKey",
                        "nodeType": "VariableDeclaration",
                        "scope": 2631,
                        "src": "1034:16:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2628,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1034:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1033:18:16"
                  },
                  "src": "1010:42:16"
                },
                {
                  "anonymous": false,
                  "id": 2635,
                  "name": "PublicKeyRevoked",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2634,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2633,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "publicKey",
                        "nodeType": "VariableDeclaration",
                        "scope": 2635,
                        "src": "1081:16:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2632,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1081:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1080:18:16"
                  },
                  "src": "1057:42:16"
                },
                {
                  "body": {
                    "id": 2649,
                    "nodeType": "Block",
                    "src": "1157:92:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2640,
                                "name": "addr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2637,
                                "src": "1212:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2643,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1228:1:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2642,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1220:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2641,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1220:7:16",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2644,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1220:10:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "1212:18:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2639,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1204:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 2646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1204:27:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2647,
                        "nodeType": "ExpressionStatement",
                        "src": "1204:27:16"
                      },
                      {
                        "id": 2648,
                        "nodeType": "PlaceholderStatement",
                        "src": "1241:1:16"
                      }
                    ]
                  },
                  "id": 2650,
                  "name": "validAddress",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 2638,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2637,
                        "mutability": "mutable",
                        "name": "addr",
                        "nodeType": "VariableDeclaration",
                        "scope": 2650,
                        "src": "1143:12:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2636,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1143:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1142:14:16"
                  },
                  "src": "1121:128:16",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2665,
                    "nodeType": "Block",
                    "src": "1328:90:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 2659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2657,
                            "name": "version",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2602,
                            "src": "1338:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "34",
                            "id": 2658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1348:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "src": "1338:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 2660,
                        "nodeType": "ExpressionStatement",
                        "src": "1338:11:16"
                      },
                      {
                        "expression": {
                          "id": 2663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2661,
                            "name": "previousPublishedVersion",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2604,
                            "src": "1359:24:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2662,
                            "name": "_previousPublishedVersion",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2652,
                            "src": "1386:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1359:52:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2664,
                        "nodeType": "ExpressionStatement",
                        "src": "1359:52:16"
                      }
                    ]
                  },
                  "functionSelector": "c4d66de8",
                  "id": 2666,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2655,
                      "modifierName": {
                        "id": 2654,
                        "name": "initializer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1171,
                        "src": "1310:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1310:11:16"
                    }
                  ],
                  "name": "initialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2653,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2652,
                        "mutability": "mutable",
                        "name": "_previousPublishedVersion",
                        "nodeType": "VariableDeclaration",
                        "scope": 2666,
                        "src": "1275:33:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2651,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1275:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1274:35:16"
                  },
                  "returnParameters": {
                    "id": 2656,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1328:0:16"
                  },
                  "scope": 2885,
                  "src": "1255:163:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2721,
                    "nodeType": "Block",
                    "src": "1513:405:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2681,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "1531:60:16",
                              "subExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 2672,
                                      "name": "publicKeyRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2622,
                                      "src": "1532:17:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_PublicKey_$2616_storage_$_$",
                                        "typeString": "mapping(address => mapping(bytes32 => struct AlastriaPublicKeyRegistry.PublicKey storage ref))"
                                      }
                                    },
                                    "id": 2675,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 2673,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "1550:3:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2674,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "1550:10:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1532:29:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_PublicKey_$2616_storage_$",
                                      "typeString": "mapping(bytes32 => struct AlastriaPublicKeyRegistry.PublicKey storage ref)"
                                    }
                                  },
                                  "id": 2679,
                                  "indexExpression": {
                                    "arguments": [
                                      {
                                        "id": 2677,
                                        "name": "publicKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2668,
                                        "src": "1573:9:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 2676,
                                      "name": "getKeyHash",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2884,
                                      "src": "1562:10:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (string memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 2678,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1562:21:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1532:52:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PublicKey_$2616_storage",
                                    "typeString": "struct AlastriaPublicKeyRegistry.PublicKey storage ref"
                                  }
                                },
                                "id": 2680,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "exists",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2609,
                                "src": "1532:59:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2671,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1523:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 2682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1523:69:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2683,
                        "nodeType": "ExpressionStatement",
                        "src": "1523:69:16"
                      },
                      {
                        "assignments": [
                          2685
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2685,
                            "mutability": "mutable",
                            "name": "changeDate",
                            "nodeType": "VariableDeclaration",
                            "scope": 2721,
                            "src": "1602:15:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2684,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "1602:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2688,
                        "initialValue": {
                          "expression": {
                            "id": 2686,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1620:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1620:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1602:33:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2691,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1681:3:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2692,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1681:10:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 2690,
                                "name": "getCurrentPublicKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2832,
                                "src": "1661:19:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (address) view returns (string memory)"
                                }
                              },
                              "id": 2693,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1661:31:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 2689,
                            "name": "revokePublicKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2760,
                            "src": "1645:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 2694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1645:48:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2695,
                        "nodeType": "ExpressionStatement",
                        "src": "1645:48:16"
                      },
                      {
                        "expression": {
                          "id": 2711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2696,
                                "name": "publicKeyRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2622,
                                "src": "1703:17:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_PublicKey_$2616_storage_$_$",
                                  "typeString": "mapping(address => mapping(bytes32 => struct AlastriaPublicKeyRegistry.PublicKey storage ref))"
                                }
                              },
                              "id": 2702,
                              "indexExpression": {
                                "expression": {
                                  "id": 2697,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1721:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2698,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1721:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1703:29:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_PublicKey_$2616_storage_$",
                                "typeString": "mapping(bytes32 => struct AlastriaPublicKeyRegistry.PublicKey storage ref)"
                              }
                            },
                            "id": 2703,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 2700,
                                  "name": "publicKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2668,
                                  "src": "1744:9:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 2699,
                                "name": "getKeyHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2884,
                                "src": "1733:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (string memory) pure returns (bytes32)"
                                }
                              },
                              "id": 2701,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1733:21:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1703:52:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PublicKey_$2616_storage",
                              "typeString": "struct AlastriaPublicKeyRegistry.PublicKey storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "74727565",
                                "id": 2705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1781:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              {
                                "expression": {
                                  "id": 2706,
                                  "name": "Status",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2607,
                                  "src": "1799:6:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Status_$2607_$",
                                    "typeString": "type(enum AlastriaPublicKeyRegistry.Status)"
                                  }
                                },
                                "id": 2707,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Valid",
                                "nodeType": "MemberAccess",
                                "src": "1799:12:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Status_$2607",
                                  "typeString": "enum AlastriaPublicKeyRegistry.Status"
                                }
                              },
                              {
                                "id": 2708,
                                "name": "changeDate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2685,
                                "src": "1825:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 2709,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1849:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_enum$_Status_$2607",
                                  "typeString": "enum AlastriaPublicKeyRegistry.Status"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2704,
                              "name": "PublicKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2616,
                              "src": "1758:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_PublicKey_$2616_storage_ptr_$",
                                "typeString": "type(struct AlastriaPublicKeyRegistry.PublicKey storage pointer)"
                              }
                            },
                            "id": 2710,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1758:102:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PublicKey_$2616_memory_ptr",
                              "typeString": "struct AlastriaPublicKeyRegistry.PublicKey memory"
                            }
                          },
                          "src": "1703:157:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PublicKey_$2616_storage",
                            "typeString": "struct AlastriaPublicKeyRegistry.PublicKey storage ref"
                          }
                        },
                        "id": 2712,
                        "nodeType": "ExpressionStatement",
                        "src": "1703:157:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2718,
                              "name": "publicKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2668,
                              "src": "1901:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 2713,
                                "name": "publicKeyList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2627,
                                "src": "1870:13:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => string storage ref[] storage ref)"
                                }
                              },
                              "id": 2716,
                              "indexExpression": {
                                "expression": {
                                  "id": 2714,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1884:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2715,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1884:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1870:25:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                "typeString": "string storage ref[] storage ref"
                              }
                            },
                            "id": 2717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1870:30:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$__$",
                              "typeString": "function (string storage ref)"
                            }
                          },
                          "id": 2719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1870:41:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2720,
                        "nodeType": "ExpressionStatement",
                        "src": "1870:41:16"
                      }
                    ]
                  },
                  "functionSelector": "50382c1a",
                  "id": 2722,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addKey",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2669,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2668,
                        "mutability": "mutable",
                        "name": "publicKey",
                        "nodeType": "VariableDeclaration",
                        "scope": 2722,
                        "src": "1481:23:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2667,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1481:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1480:25:16"
                  },
                  "returnParameters": {
                    "id": 2670,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1513:0:16"
                  },
                  "scope": 2885,
                  "src": "1465:453:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2759,
                    "nodeType": "Block",
                    "src": "1981:310:16",
                    "statements": [
                      {
                        "assignments": [
                          2728
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2728,
                            "mutability": "mutable",
                            "name": "value",
                            "nodeType": "VariableDeclaration",
                            "scope": 2759,
                            "src": "1991:23:16",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PublicKey_$2616_storage_ptr",
                              "typeString": "struct AlastriaPublicKeyRegistry.PublicKey"
                            },
                            "typeName": {
                              "id": 2727,
                              "name": "PublicKey",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2616,
                              "src": "1991:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PublicKey_$2616_storage_ptr",
                                "typeString": "struct AlastriaPublicKeyRegistry.PublicKey"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2737,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2729,
                              "name": "publicKeyRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2622,
                              "src": "2017:17:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_PublicKey_$2616_storage_$_$",
                                "typeString": "mapping(address => mapping(bytes32 => struct AlastriaPublicKeyRegistry.PublicKey storage ref))"
                              }
                            },
                            "id": 2732,
                            "indexExpression": {
                              "expression": {
                                "id": 2730,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2035:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2035:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2017:29:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_PublicKey_$2616_storage_$",
                              "typeString": "mapping(bytes32 => struct AlastriaPublicKeyRegistry.PublicKey storage ref)"
                            }
                          },
                          "id": 2736,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 2734,
                                "name": "publicKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2724,
                                "src": "2058:9:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 2733,
                              "name": "getKeyHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2884,
                              "src": "2047:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (string memory) pure returns (bytes32)"
                              }
                            },
                            "id": 2735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2047:21:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2017:52:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PublicKey_$2616_storage",
                            "typeString": "struct AlastriaPublicKeyRegistry.PublicKey storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1991:78:16"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2738,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2728,
                              "src": "2126:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PublicKey_$2616_storage_ptr",
                                "typeString": "struct AlastriaPublicKeyRegistry.PublicKey storage pointer"
                              }
                            },
                            "id": 2739,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exists",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2609,
                            "src": "2126:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_Status_$2607",
                              "typeString": "enum AlastriaPublicKeyRegistry.Status"
                            },
                            "id": 2744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2740,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2728,
                                "src": "2142:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PublicKey_$2616_storage_ptr",
                                  "typeString": "struct AlastriaPublicKeyRegistry.PublicKey storage pointer"
                                }
                              },
                              "id": 2741,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "status",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2611,
                              "src": "2142:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Status_$2607",
                                "typeString": "enum AlastriaPublicKeyRegistry.Status"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "id": 2742,
                                "name": "Status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2607,
                                "src": "2158:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Status_$2607_$",
                                  "typeString": "type(enum AlastriaPublicKeyRegistry.Status)"
                                }
                              },
                              "id": 2743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "DeletedBySubject",
                              "nodeType": "MemberAccess",
                              "src": "2158:23:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Status_$2607",
                                "typeString": "enum AlastriaPublicKeyRegistry.Status"
                              }
                            },
                            "src": "2142:39:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2126:55:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2758,
                        "nodeType": "IfStatement",
                        "src": "2122:163:16",
                        "trueBody": {
                          "id": 2757,
                          "nodeType": "Block",
                          "src": "2183:102:16",
                          "statements": [
                            {
                              "expression": {
                                "id": 2751,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 2746,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2728,
                                    "src": "2197:5:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PublicKey_$2616_storage_ptr",
                                      "typeString": "struct AlastriaPublicKeyRegistry.PublicKey storage pointer"
                                    }
                                  },
                                  "id": 2748,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "endDate",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2615,
                                  "src": "2197:13:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 2749,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "2213:5:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2750,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "2213:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2197:31:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2752,
                              "nodeType": "ExpressionStatement",
                              "src": "2197:31:16"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 2754,
                                    "name": "publicKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2724,
                                    "src": "2264:9:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 2753,
                                  "name": "PublicKeyRevoked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2635,
                                  "src": "2247:16:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory)"
                                  }
                                },
                                "id": 2755,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2247:27:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2756,
                              "nodeType": "EmitStatement",
                              "src": "2242:32:16"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "d16df8ec",
                  "id": 2760,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revokePublicKey",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2725,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2724,
                        "mutability": "mutable",
                        "name": "publicKey",
                        "nodeType": "VariableDeclaration",
                        "scope": 2760,
                        "src": "1949:23:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2723,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1949:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1948:25:16"
                  },
                  "returnParameters": {
                    "id": 2726,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1981:0:16"
                  },
                  "scope": 2885,
                  "src": "1924:367:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2798,
                    "nodeType": "Block",
                    "src": "2354:301:16",
                    "statements": [
                      {
                        "assignments": [
                          2766
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2766,
                            "mutability": "mutable",
                            "name": "value",
                            "nodeType": "VariableDeclaration",
                            "scope": 2798,
                            "src": "2364:23:16",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PublicKey_$2616_storage_ptr",
                              "typeString": "struct AlastriaPublicKeyRegistry.PublicKey"
                            },
                            "typeName": {
                              "id": 2765,
                              "name": "PublicKey",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2616,
                              "src": "2364:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PublicKey_$2616_storage_ptr",
                                "typeString": "struct AlastriaPublicKeyRegistry.PublicKey"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2775,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2767,
                              "name": "publicKeyRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2622,
                              "src": "2390:17:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_PublicKey_$2616_storage_$_$",
                                "typeString": "mapping(address => mapping(bytes32 => struct AlastriaPublicKeyRegistry.PublicKey storage ref))"
                              }
                            },
                            "id": 2770,
                            "indexExpression": {
                              "expression": {
                                "id": 2768,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2408:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2408:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2390:29:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_PublicKey_$2616_storage_$",
                              "typeString": "mapping(bytes32 => struct AlastriaPublicKeyRegistry.PublicKey storage ref)"
                            }
                          },
                          "id": 2774,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 2772,
                                "name": "publicKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2762,
                                "src": "2431:9:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 2771,
                              "name": "getKeyHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2884,
                              "src": "2420:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (string memory) pure returns (bytes32)"
                              }
                            },
                            "id": 2773,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2420:21:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2390:52:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PublicKey_$2616_storage",
                            "typeString": "struct AlastriaPublicKeyRegistry.PublicKey storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2364:78:16"
                      },
                      {
                        "condition": {
                          "expression": {
                            "id": 2776,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2766,
                            "src": "2481:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PublicKey_$2616_storage_ptr",
                              "typeString": "struct AlastriaPublicKeyRegistry.PublicKey storage pointer"
                            }
                          },
                          "id": 2777,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2609,
                          "src": "2481:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2797,
                        "nodeType": "IfStatement",
                        "src": "2477:172:16",
                        "trueBody": {
                          "id": 2796,
                          "nodeType": "Block",
                          "src": "2495:154:16",
                          "statements": [
                            {
                              "expression": {
                                "id": 2783,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 2778,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2766,
                                    "src": "2509:5:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PublicKey_$2616_storage_ptr",
                                      "typeString": "struct AlastriaPublicKeyRegistry.PublicKey storage pointer"
                                    }
                                  },
                                  "id": 2780,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2611,
                                  "src": "2509:12:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Status_$2607",
                                    "typeString": "enum AlastriaPublicKeyRegistry.Status"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 2781,
                                    "name": "Status",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2607,
                                    "src": "2524:6:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Status_$2607_$",
                                      "typeString": "type(enum AlastriaPublicKeyRegistry.Status)"
                                    }
                                  },
                                  "id": 2782,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "DeletedBySubject",
                                  "nodeType": "MemberAccess",
                                  "src": "2524:23:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Status_$2607",
                                    "typeString": "enum AlastriaPublicKeyRegistry.Status"
                                  }
                                },
                                "src": "2509:38:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Status_$2607",
                                  "typeString": "enum AlastriaPublicKeyRegistry.Status"
                                }
                              },
                              "id": 2784,
                              "nodeType": "ExpressionStatement",
                              "src": "2509:38:16"
                            },
                            {
                              "expression": {
                                "id": 2790,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 2785,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2766,
                                    "src": "2561:5:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PublicKey_$2616_storage_ptr",
                                      "typeString": "struct AlastriaPublicKeyRegistry.PublicKey storage pointer"
                                    }
                                  },
                                  "id": 2787,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "endDate",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2615,
                                  "src": "2561:13:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 2788,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "2577:5:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2789,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "2577:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2561:31:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2791,
                              "nodeType": "ExpressionStatement",
                              "src": "2561:31:16"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 2793,
                                    "name": "publicKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2762,
                                    "src": "2628:9:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 2792,
                                  "name": "PublicKeyDeleted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2631,
                                  "src": "2611:16:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory)"
                                  }
                                },
                                "id": 2794,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2611:27:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2795,
                              "nodeType": "EmitStatement",
                              "src": "2606:32:16"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "36241962",
                  "id": 2799,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deletePublicKey",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2763,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2762,
                        "mutability": "mutable",
                        "name": "publicKey",
                        "nodeType": "VariableDeclaration",
                        "scope": 2799,
                        "src": "2322:23:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2761,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2322:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2321:25:16"
                  },
                  "returnParameters": {
                    "id": 2764,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2354:0:16"
                  },
                  "scope": 2885,
                  "src": "2297:358:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2831,
                    "nodeType": "Block",
                    "src": "2765:184:16",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2809,
                                "name": "publicKeyList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2627,
                                "src": "2779:13:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => string storage ref[] storage ref)"
                                }
                              },
                              "id": 2811,
                              "indexExpression": {
                                "id": 2810,
                                "name": "subject",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2801,
                                "src": "2793:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2779:22:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                "typeString": "string storage ref[] storage ref"
                              }
                            },
                            "id": 2812,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2779:29:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2811:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2779:33:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2829,
                          "nodeType": "Block",
                          "src": "2909:34:16",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "",
                                "id": 2827,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2930:2:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              },
                              "functionReturnParameters": 2808,
                              "id": 2828,
                              "nodeType": "Return",
                              "src": "2923:9:16"
                            }
                          ]
                        },
                        "id": 2830,
                        "nodeType": "IfStatement",
                        "src": "2775:168:16",
                        "trueBody": {
                          "id": 2826,
                          "nodeType": "Block",
                          "src": "2814:89:16",
                          "statements": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 2815,
                                    "name": "publicKeyList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2627,
                                    "src": "2835:13:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
                                      "typeString": "mapping(address => string storage ref[] storage ref)"
                                    }
                                  },
                                  "id": 2817,
                                  "indexExpression": {
                                    "id": 2816,
                                    "name": "subject",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2801,
                                    "src": "2849:7:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2835:22:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                    "typeString": "string storage ref[] storage ref"
                                  }
                                },
                                "id": 2824,
                                "indexExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2823,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2818,
                                        "name": "publicKeyList",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2627,
                                        "src": "2858:13:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
                                          "typeString": "mapping(address => string storage ref[] storage ref)"
                                        }
                                      },
                                      "id": 2820,
                                      "indexExpression": {
                                        "id": 2819,
                                        "name": "subject",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2801,
                                        "src": "2872:7:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2858:22:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                        "typeString": "string storage ref[] storage ref"
                                      }
                                    },
                                    "id": 2821,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "2858:29:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 2822,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2890:1:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "2858:33:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2835:57:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              },
                              "functionReturnParameters": 2808,
                              "id": 2825,
                              "nodeType": "Return",
                              "src": "2828:64:16"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "31f7f259",
                  "id": 2832,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 2804,
                          "name": "subject",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2801,
                          "src": "2732:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 2805,
                      "modifierName": {
                        "id": 2803,
                        "name": "validAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2650,
                        "src": "2719:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_address_$",
                          "typeString": "modifier (address)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2719:21:16"
                    }
                  ],
                  "name": "getCurrentPublicKey",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2802,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2801,
                        "mutability": "mutable",
                        "name": "subject",
                        "nodeType": "VariableDeclaration",
                        "scope": 2832,
                        "src": "2690:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2800,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2690:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2689:17:16"
                  },
                  "returnParameters": {
                    "id": 2808,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2807,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2832,
                        "src": "2750:13:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2806,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2750:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2749:15:16"
                  },
                  "scope": 2885,
                  "src": "2661:288:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2868,
                    "nodeType": "Block",
                    "src": "3127:157:16",
                    "statements": [
                      {
                        "assignments": [
                          2851
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2851,
                            "mutability": "mutable",
                            "name": "value",
                            "nodeType": "VariableDeclaration",
                            "scope": 2868,
                            "src": "3137:23:16",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PublicKey_$2616_storage_ptr",
                              "typeString": "struct AlastriaPublicKeyRegistry.PublicKey"
                            },
                            "typeName": {
                              "id": 2850,
                              "name": "PublicKey",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2616,
                              "src": "3137:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PublicKey_$2616_storage_ptr",
                                "typeString": "struct AlastriaPublicKeyRegistry.PublicKey"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2857,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2852,
                              "name": "publicKeyRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2622,
                              "src": "3163:17:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_PublicKey_$2616_storage_$_$",
                                "typeString": "mapping(address => mapping(bytes32 => struct AlastriaPublicKeyRegistry.PublicKey storage ref))"
                              }
                            },
                            "id": 2854,
                            "indexExpression": {
                              "id": 2853,
                              "name": "subject",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2834,
                              "src": "3181:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3163:26:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_PublicKey_$2616_storage_$",
                              "typeString": "mapping(bytes32 => struct AlastriaPublicKeyRegistry.PublicKey storage ref)"
                            }
                          },
                          "id": 2856,
                          "indexExpression": {
                            "id": 2855,
                            "name": "publicKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2836,
                            "src": "3190:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3163:37:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PublicKey_$2616_storage",
                            "typeString": "struct AlastriaPublicKeyRegistry.PublicKey storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3137:63:16"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "expression": {
                                "id": 2858,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2851,
                                "src": "3218:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PublicKey_$2616_storage_ptr",
                                  "typeString": "struct AlastriaPublicKeyRegistry.PublicKey storage pointer"
                                }
                              },
                              "id": 2859,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "exists",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2609,
                              "src": "3218:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 2860,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2851,
                                "src": "3232:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PublicKey_$2616_storage_ptr",
                                  "typeString": "struct AlastriaPublicKeyRegistry.PublicKey storage pointer"
                                }
                              },
                              "id": 2861,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "status",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2611,
                              "src": "3232:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Status_$2607",
                                "typeString": "enum AlastriaPublicKeyRegistry.Status"
                              }
                            },
                            {
                              "expression": {
                                "id": 2862,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2851,
                                "src": "3246:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PublicKey_$2616_storage_ptr",
                                  "typeString": "struct AlastriaPublicKeyRegistry.PublicKey storage pointer"
                                }
                              },
                              "id": 2863,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "startDate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2613,
                              "src": "3246:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2864,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2851,
                                "src": "3263:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PublicKey_$2616_storage_ptr",
                                  "typeString": "struct AlastriaPublicKeyRegistry.PublicKey storage pointer"
                                }
                              },
                              "id": 2865,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "endDate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2615,
                              "src": "3263:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2866,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3217:60:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_enum$_Status_$2607_$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(bool,enum AlastriaPublicKeyRegistry.Status,uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 2849,
                        "id": 2867,
                        "nodeType": "Return",
                        "src": "3210:67:16"
                      }
                    ]
                  },
                  "functionSelector": "1226f6a5",
                  "id": 2869,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 2839,
                          "name": "subject",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2834,
                          "src": "3044:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 2840,
                      "modifierName": {
                        "id": 2838,
                        "name": "validAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2650,
                        "src": "3031:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_address_$",
                          "typeString": "modifier (address)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3031:21:16"
                    }
                  ],
                  "name": "getPublicKeyStatus",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2837,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2834,
                        "mutability": "mutable",
                        "name": "subject",
                        "nodeType": "VariableDeclaration",
                        "scope": 2869,
                        "src": "2983:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2833,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2983:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2836,
                        "mutability": "mutable",
                        "name": "publicKey",
                        "nodeType": "VariableDeclaration",
                        "scope": 2869,
                        "src": "3000:17:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2835,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3000:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2982:36:16"
                  },
                  "returnParameters": {
                    "id": 2849,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2842,
                        "mutability": "mutable",
                        "name": "exists",
                        "nodeType": "VariableDeclaration",
                        "scope": 2869,
                        "src": "3070:11:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2841,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3070:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2844,
                        "mutability": "mutable",
                        "name": "status",
                        "nodeType": "VariableDeclaration",
                        "scope": 2869,
                        "src": "3083:13:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$2607",
                          "typeString": "enum AlastriaPublicKeyRegistry.Status"
                        },
                        "typeName": {
                          "id": 2843,
                          "name": "Status",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2607,
                          "src": "3083:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$2607",
                            "typeString": "enum AlastriaPublicKeyRegistry.Status"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2846,
                        "mutability": "mutable",
                        "name": "startDate",
                        "nodeType": "VariableDeclaration",
                        "scope": 2869,
                        "src": "3098:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2845,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3098:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2848,
                        "mutability": "mutable",
                        "name": "endDate",
                        "nodeType": "VariableDeclaration",
                        "scope": 2869,
                        "src": "3114:12:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2847,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3114:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3069:58:16"
                  },
                  "scope": 2885,
                  "src": "2955:329:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2883,
                    "nodeType": "Block",
                    "src": "3368:61:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2879,
                                  "name": "inputKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2871,
                                  "src": "3412:8:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 2877,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3395:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 2878,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "3395:16:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 2880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3395:26:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2876,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3385:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 2881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3385:37:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 2875,
                        "id": 2882,
                        "nodeType": "Return",
                        "src": "3378:44:16"
                      }
                    ]
                  },
                  "id": 2884,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getKeyHash",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2872,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2871,
                        "mutability": "mutable",
                        "name": "inputKey",
                        "nodeType": "VariableDeclaration",
                        "scope": 2884,
                        "src": "3314:22:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2870,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3314:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3313:24:16"
                  },
                  "returnParameters": {
                    "id": 2875,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2874,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2884,
                        "src": "3360:7:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2873,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3360:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3359:9:16"
                  },
                  "scope": 2885,
                  "src": "3294:135:16",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 2886,
              "src": "112:3320:16"
            }
          ],
          "src": "32:3401:16"
        },
        "id": 16
      }
    }
  }
}
