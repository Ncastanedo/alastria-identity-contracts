/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { AlastriaProxy } from "../AlastriaProxy";

export class AlastriaProxy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<AlastriaProxy> {
    return super.deploy(overrides || {}) as Promise<AlastriaProxy>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AlastriaProxy {
    return super.attach(address) as AlastriaProxy;
  }
  connect(signer: Signer): AlastriaProxy__factory {
    return super.connect(signer) as AlastriaProxy__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AlastriaProxy {
    return new Contract(address, _abi, signerOrProvider) as AlastriaProxy;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    name: "Forwarded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "forward",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506000610024640100000000610073810204565b60008054600160a060020a031916600160a060020a0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610077565b3390565b610669806100866000396000f3fe608060405234801561001057600080fd5b5060043610610068577c01000000000000000000000000000000000000000000000000000000006000350463715018a6811461006d5780638da5cb5b14610077578063d7f31eb91461009b578063f2fde38b146101cb575b600080fd5b6100756101f1565b005b61007f6102a3565b60408051600160a060020a039092168252519081900360200190f35b610156600480360360608110156100b157600080fd5b600160a060020a03823516916020810135918101906060810160408201356401000000008111156100e157600080fd5b8201836020820111156100f357600080fd5b8035906020019184600183028401116401000000008311171561011557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506102b2945050505050565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610190578181015183820152602001610178565b50505050905090810190601f1680156101bd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610075600480360360208110156101e157600080fd5b5035600160a060020a03166104de565b6101f96105e9565b600054600160a060020a0390811691161461024c576040805160e560020a62461bcd0281526020600482018190526024820152600080516020610614833981519152604482015290519081900360640190fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031690565b60606102bc6105e9565b600054600160a060020a0390811691161461030f576040805160e560020a62461bcd0281526020600482018190526024820152600080516020610614833981519152604482015290519081900360640190fd5b60008085600160a060020a031685856040518082805190602001908083835b6020831061034d5780518252601f19909201916020918201910161032e565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146103af576040519150601f19603f3d011682016040523d82523d6000602084013e6103b4565b606091505b5091509150816103c357600080fd5b85600160a060020a03167f8cd7411f6d2d65dd25e1b8e9e19f9b5b720c01622c9e25049b72837b1bbc1743868684604051808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610438578181015183820152602001610420565b50505050905090810190601f1680156104655780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015610498578181015183820152602001610480565b50505050905090810190601f1680156104c55780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a295945050505050565b6104e66105e9565b600054600160a060020a03908116911614610539576040805160e560020a62461bcd0281526020600482018190526024820152600080516020610614833981519152604482015290519081900360640190fd5b600160a060020a0381166105815760405160e560020a62461bcd0281526004018080602001828103825260268152602001806105ee6026913960400191505060405180910390fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a264697066735822122013d702fb00cf97f6aef347863ef9ada968e712c2310ed3594e593ab9dc152e8e64736f6c63430007060033";
