/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface AlastriaIdentityIssuerInterface extends ethers.utils.Interface {
  functions: {
    "addIdentityIssuer(address,uint8)": FunctionFragment;
    "deleteIdentityIssuer(address)": FunctionFragment;
    "getEidasLevel(address)": FunctionFragment;
    "initialize(address)": FunctionFragment;
    "isIdentityIssuer(address)": FunctionFragment;
    "updateIdentityIssuerEidasLevel(address,uint8)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "addIdentityIssuer",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "deleteIdentityIssuer",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getEidasLevel",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "initialize", values: [string]): string;
  encodeFunctionData(
    functionFragment: "isIdentityIssuer",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "updateIdentityIssuerEidasLevel",
    values: [string, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "addIdentityIssuer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deleteIdentityIssuer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getEidasLevel",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isIdentityIssuer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateIdentityIssuerEidasLevel",
    data: BytesLike
  ): Result;

  events: {};
}

export class AlastriaIdentityIssuer extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: AlastriaIdentityIssuerInterface;

  functions: {
    addIdentityIssuer(
      _identityIssuer: string,
      _level: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addIdentityIssuer(address,uint8)"(
      _identityIssuer: string,
      _level: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    deleteIdentityIssuer(
      _identityIssuer: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "deleteIdentityIssuer(address)"(
      _identityIssuer: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getEidasLevel(
      _identityIssuer: string,
      overrides?: CallOverrides
    ): Promise<[number]>;

    "getEidasLevel(address)"(
      _identityIssuer: string,
      overrides?: CallOverrides
    ): Promise<[number]>;

    initialize(
      _firstIdentity: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initialize(address)"(
      _firstIdentity: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    isIdentityIssuer(
      _identityIssuer: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isIdentityIssuer(address)"(
      _identityIssuer: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    updateIdentityIssuerEidasLevel(
      _identityIssuer: string,
      _level: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "updateIdentityIssuerEidasLevel(address,uint8)"(
      _identityIssuer: string,
      _level: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  addIdentityIssuer(
    _identityIssuer: string,
    _level: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "addIdentityIssuer(address,uint8)"(
    _identityIssuer: string,
    _level: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  deleteIdentityIssuer(
    _identityIssuer: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "deleteIdentityIssuer(address)"(
    _identityIssuer: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getEidasLevel(
    _identityIssuer: string,
    overrides?: CallOverrides
  ): Promise<number>;

  "getEidasLevel(address)"(
    _identityIssuer: string,
    overrides?: CallOverrides
  ): Promise<number>;

  initialize(
    _firstIdentity: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initialize(address)"(
    _firstIdentity: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  isIdentityIssuer(
    _identityIssuer: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isIdentityIssuer(address)"(
    _identityIssuer: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  updateIdentityIssuerEidasLevel(
    _identityIssuer: string,
    _level: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "updateIdentityIssuerEidasLevel(address,uint8)"(
    _identityIssuer: string,
    _level: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    addIdentityIssuer(
      _identityIssuer: string,
      _level: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "addIdentityIssuer(address,uint8)"(
      _identityIssuer: string,
      _level: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    deleteIdentityIssuer(
      _identityIssuer: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "deleteIdentityIssuer(address)"(
      _identityIssuer: string,
      overrides?: CallOverrides
    ): Promise<void>;

    getEidasLevel(
      _identityIssuer: string,
      overrides?: CallOverrides
    ): Promise<number>;

    "getEidasLevel(address)"(
      _identityIssuer: string,
      overrides?: CallOverrides
    ): Promise<number>;

    initialize(
      _firstIdentity: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "initialize(address)"(
      _firstIdentity: string,
      overrides?: CallOverrides
    ): Promise<void>;

    isIdentityIssuer(
      _identityIssuer: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isIdentityIssuer(address)"(
      _identityIssuer: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    updateIdentityIssuerEidasLevel(
      _identityIssuer: string,
      _level: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "updateIdentityIssuerEidasLevel(address,uint8)"(
      _identityIssuer: string,
      _level: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    addIdentityIssuer(
      _identityIssuer: string,
      _level: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "addIdentityIssuer(address,uint8)"(
      _identityIssuer: string,
      _level: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    deleteIdentityIssuer(
      _identityIssuer: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "deleteIdentityIssuer(address)"(
      _identityIssuer: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getEidasLevel(
      _identityIssuer: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getEidasLevel(address)"(
      _identityIssuer: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initialize(
      _firstIdentity: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initialize(address)"(
      _firstIdentity: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    isIdentityIssuer(
      _identityIssuer: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isIdentityIssuer(address)"(
      _identityIssuer: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    updateIdentityIssuerEidasLevel(
      _identityIssuer: string,
      _level: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "updateIdentityIssuerEidasLevel(address,uint8)"(
      _identityIssuer: string,
      _level: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addIdentityIssuer(
      _identityIssuer: string,
      _level: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addIdentityIssuer(address,uint8)"(
      _identityIssuer: string,
      _level: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    deleteIdentityIssuer(
      _identityIssuer: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "deleteIdentityIssuer(address)"(
      _identityIssuer: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getEidasLevel(
      _identityIssuer: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getEidasLevel(address)"(
      _identityIssuer: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initialize(
      _firstIdentity: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initialize(address)"(
      _firstIdentity: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    isIdentityIssuer(
      _identityIssuer: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isIdentityIssuer(address)"(
      _identityIssuer: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    updateIdentityIssuerEidasLevel(
      _identityIssuer: string,
      _level: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "updateIdentityIssuerEidasLevel(address,uint8)"(
      _identityIssuer: string,
      _level: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
